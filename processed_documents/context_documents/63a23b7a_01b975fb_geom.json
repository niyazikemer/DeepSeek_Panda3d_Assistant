{
  "content": "Geom\n\nThe .Geom object collects together a geomvertexdata and one or more geomprimitive objects, to make a single renderable piece of geometry. In fact, an individual Geom is the smallest piece into which Panda will subdivide the scene for rendering; in any given frame, either an entire Geom is rendered, or none of it is.\n\nFundamentally, a .Geom is very simple; it contains a pointer to a single GeomVertexData, and a list of one or more GeomPrimitives, of various types, as needed. All the associated GeomPrimitives index into the same GeomVertexData.\n\nGeom GeomVertexData GeomTriangles GeomTriangles GeomTristrips\n\nThe GeomVertexData pointer may be unique to each Geom, or one GeomVertexData may be shared among many different Geoms (each of which might use a different subset of its vertices). Also, although the GeomPrimitive objects are usually unique to each Geom, they may also be shared between different Geoms.\n\nAlthough a Geom can have any number of GeomPrimitives associated with it, all of the GeomPrimitives must be of the same fundamental primitive type: triangles, lines, or points. A particular Geom might have GeomTriangles, GeomTristrips, and GeomTrifans; or it might have GeomLines and GeomLinestrips; or it might have GeomPoints. But no one Geom can have primitives from two different fundamental types. You can call geom.get_primitive_type() <.Geom.get_primitive_type> to determine the fundamental primitive type stored within a particular Geom.",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/01b975fb_geom.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/63a23b7a_01b975fb_geom.json",
    "doc_id": "doc_489"
  }
}