{
  "content": "Putting your new geometry in the scene graph\n\nFinally, now that you have a geomvertexdata and one or more geomprimitive objects, you can create a geom object and a geomnode to put the new geometry in the scene graph, so that it will be rendered.\n\npython\n\ngeom = Geom(vdata)\ngeom.addPrimitive(prim)\n\nnode = GeomNode('gnode')\nnode.addGeom(geom)\n\nnodePath = render.attachNewNode(node)\n\ncpp\n\nPT(Geom) geom;\ngeom = new Geom(vdata);\ngeom->add_primitive(prim);\n\nPT(GeomNode) node;\nnode = new GeomNode(\"gnode\");\nnode->add_geom(geom);\n\nNodePath nodePath = window->get_render().attach_new_node(node);\n\nThe Geom constructor requires a pointer to the GeomVertexData object you will be using. There is only one GeomVertexData associated with any particular Geom. You can reset the Geom to use a different GeomVertexData later, if you like, by calling geom.setVertexData() <.Geom.set_vertex_data>.\n\nThe GeomNode constructor requires a name, which is the name of the node and will be visible in the scene graph. It can be any name you like that means something to you.\n\nIn the above example, we have created only one Geom, and added only one GeomPrimitive to the Geom. This is the most common case when you are creating geometry at runtime, although in fact a GeomNode may include multiple Geoms, and each Geom may include multiple GeomPrimitives. (However, all of the primitives added to a Geom must have the same fundamental primitive type: triangles, lines, or points. You can add GeomTriangles and GeomTristrips to the same Geom, or you can add GeomLines and GeomLinestrips, but if you have GeomTriangles and GeomLinestrips, you must use two different Geoms.)\n\nIt is important that the range of vertex index numbers used by your GeomPrimitives is consistent with the number of vertices in your GeomVertexData (for instance, if you have 100 vertices in your GeomVertexData, your GeomPrimitives must only reference vertices numbered 0 through 99). If this is not the case, you will get an exception when you call addPrimitive().",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/1faeee63_putting-geometry-in-scene-graph.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/e898ffb8_1faeee63_putting-geometry-in-scene-graph.json",
    "doc_id": "doc_601"
  }
}