{
  "content": "\"\"\"\nDirectNotify module: this module contains the DirectNotify class\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom panda3d.core import StreamWriter\n\nfrom . import Notifier\nfrom . import Logger\n\n\nclass DirectNotify:\n    \"\"\"\n    DirectNotify class: this class contains methods for creating\n    mulitple notify categories via a dictionary of Notifiers.\n    \"\"\"\n\n    def __init__(self) -> None:\n        \"\"\"\n        DirectNotify class keeps a dictionary of Notfiers\n        \"\"\"\n        self.__categories: dict[str, Notifier.Notifier] = {}\n        # create a default log file\n        self.logger = Logger.Logger()\n\n        # This will get filled in later by ShowBase.py with a\n        # C++-level StreamWriter object for writing to standard\n        # output.\n        self.streamWriter: StreamWriter | None = None\n\n    def __str__(self) -> str:\n        \"\"\"\n        Print handling routine\n        \"\"\"\n        return \"DirectNotify categories: %s\" % (self.__categories)\n\n    #getters and setters\n    def getCategories(self) -> list[str]:\n        \"\"\"\n        Return list of category dictionary keys\n        \"\"\"\n        return list(self.__categories.keys())\n\n    def getCategory(self, categoryName: str) -> Notifier.Notifier | None:\n        \"\"\"getCategory(self, string)\n        Return the category with given name if present, None otherwise\n        \"\"\"\n        return self.__categories.get(categoryName, None)\n\n    def newCategory(self, categoryName: str, logger: Logger.Logger | None = None) -> Notifier.Notifier:\n        \"\"\"newCategory(self, string)\n        Make a new notify category named categoryName. Return new category\n        if no such category exists, else return existing category\n        \"\"\"\n        if categoryName not in self.__categories:\n            self.__categories[categoryName] = Notifier.Notifier(categoryName, logger)\n            self.setDconfigLevel(categoryName)\n        notifier = self.getCategory(categoryName)\n        assert notifier is not None\n        return notifier\n\n    def setDconfigLevel(self, categoryName: str) -> None:\n        \"\"\"\n        Check to see if this category has a dconfig variable\n        to set the notify severity and then set that level. You cannot\n        set these until config is set.\n        \"\"\"\n\n        # We use ConfigVariableString instead of base.config, in case\n        # we're running before ShowBase has finished initializing\n        from panda3d.core import ConfigVariableString\n\n        dconfigParam = (\"notify-level-\" + categoryName)\n        cvar = ConfigVariableString(dconfigParam, \"\")\n        level = cvar.getValue()\n\n        if not level:\n            # see if there's an override of the default config level\n            cvar2 = ConfigVariableString('default-directnotify-level', 'info')\n            level = cvar2.getValue()\n        if not level:\n            level = 'error'\n\n        category = self.getCategory(categoryName)\n        assert category is not None, f'failed to find category: {categoryName!r}'\n        # Note - this print statement is making it difficult to\n        # achieve \"no output unless there's an error\" operation - Josh\n        # print (\"Setting DirectNotify category: \" + categoryName +\n        #        \" to severity: \" + level)\n        if level == \"error\":\n            category.setWarning(False)\n            category.setInfo(False)\n            category.setDebug(False)\n        elif level == \"warning\":\n            category.setWarning(True)\n            category.setInfo(False)\n            category.setDebug(False)\n        elif level == \"info\":\n            category.setWarning(True)\n            category.setInfo(True)\n            category.setDebug(False)\n        elif level == \"debug\":\n            category.setWarning(True)\n            category.setInfo(True)\n            category.setDebug(True)\n        else:\n            print(\"DirectNotify: unknown notify level: \" + str(level)\n                   + \" for category: \" + str(categoryName))\n\n    def setDconfigLevels(self) -> None:\n        for categoryName in self.getCategories():\n            self.setDconfigLevel(categoryName)\n\n    def setVerbose(self) -> None:\n        for categoryName in self.getCategories():\n            category = self.getCategory(categoryName)\n            assert category is not None\n            category.setWarning(True)\n            category.setInfo(True)\n            category.setDebug(True)\n\n    def popupControls(self, tl = None):\n        # Don't use a regular import, to prevent ModuleFinder from picking\n        # it up as a dependency when building a .p3d package.\n        import importlib\n        NotifyPanel = importlib.import_module('direct.tkpanels.NotifyPanel')\n        NotifyPanel.NotifyPanel(self, tl)\n\n    def giveNotify(self, cls) -> None:\n        cls.notify = self.newCategory(cls.__name__)\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/directnotify/DirectNotify.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/455d71b3_DirectNotify.json",
    "doc_id": "doc_99"
  }
}