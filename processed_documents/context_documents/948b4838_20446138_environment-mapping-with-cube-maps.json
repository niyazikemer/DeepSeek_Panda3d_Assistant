{
  "content": "Environment Mapping with Cube Maps\n\nAlthough there are other applications for cube maps, one very common use of cube maps is as an environment map, similar to sphere mapping <simple-environment-mapping>. In fact, it works very much the same as sphere mapping.\n\nJust as with a sphere map, you can have Panda3D generate a cube map for you:\n\nscene = loader.loadModel('bvw-f2004--streetscene/street-scene.egg')\nscene.reparentTo(render)\nscene.setZ(-2)\nbase.saveCubeMap('streetscene_cube_#.jpg', size = 256)\n\nWith the cube map saved out as above, you could apply it as an environment map to the teapot like this:\n\ntex = loader.loadCubeMap('streetscene_cube_#.jpg')\nteapot.setTexGen(TextureStage.getDefault(), TexGenAttrib.MEyeCubeMap)\nteapot.setTexture(tex)\n\nAnd the result looks very similar to the sphere map:\n\nIn fact, it looks so similar that one might wonder why we bothered. So far, a cube map looks pretty similar to a sphere map, except that it consumes six times the texture memory. Hardly impressive.\n\nBut as we mentioned earlier <simple-environment-mapping>, there are two problems with sphere maps that cube maps can solve. One of these problems is that the point-of-view is permanently baked into the sphere map. Cube maps don't necessarily have the same problem. In fact, we can solve it with one simple variation:\n\ntex = loader.loadCubeMap('streetscene_cube_#.jpg')\nteapot.setTexGen(TextureStage.getDefault(), TexGenAttrib.MWorldCubeMap)\nteapot.setTexture(tex)\n\nBy changing MEyeCubeMap to MWorldCubeMap, we have indicated that we would like this cube map to vary its point-of-view as the camera moves. Now the reflected environment will vary according to the direction we are looking at it, so that it shows what is behind the camera at runtime, instead of always showing the area behind the camera when the cube map was generated, as a sphere map must do. In order for this to work properly, you should ensure that your camera is unrotated (that is, set_hpr(0, 0, 0) <.NodePath.set_hpr>) when you generate the cube map initially.\n\nEven with MWorldCubeMap, though, the image is still generated ahead of time, so the reflection doesn't actually show what is behind the camera at runtime. It just uses the current camera direction to figure out what part of the reflection image to show.\n\nHowever, you can make a cube map that truly does reflect dynamic objects in the scene, by rendering a dynamic cube map <dynamic-cube-maps>. This will be discussed in the next section.",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/20446138_environment-mapping-with-cube-maps.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/948b4838_20446138_environment-mapping-with-cube-maps.json",
    "doc_id": "doc_475"
  }
}