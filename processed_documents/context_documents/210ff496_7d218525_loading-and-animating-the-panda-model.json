{
  "content": "from math import pi, sin, cos\n\nfrom direct.showbase.ShowBase import ShowBase\nfrom direct.task import Task\nfrom direct.actor.Actor import Actor\n\n\nclass MyApp(ShowBase):\n    def __init__(self):\n        ShowBase.__init__(self)\n\n        # Load the environment model.\n        self.scene = self.loader.loadModel(\"models/environment\")\n        # Reparent the model to render.\n        self.scene.reparentTo(self.render)\n        # Apply scale and position transforms on the model.\n        self.scene.setScale(0.25, 0.25, 0.25)\n        self.scene.setPos(-8, 42, 0)\n\n        # Add the spinCameraTask procedure to the task manager.\n        self.taskMgr.add(self.spinCameraTask, \"SpinCameraTask\")\n\n        # Load and transform the panda actor.\n        self.pandaActor = Actor(\"models/panda-model\",\n                                {\"walk\": \"models/panda-walk4\"})\n        self.pandaActor.setScale(0.005, 0.005, 0.005)\n        self.pandaActor.reparentTo(self.render)\n        # Loop its animation.\n        self.pandaActor.loop(\"walk\")\n\n    # Define a procedure to move the camera.\n    def spinCameraTask(self, task):\n        angleDegrees = task.time * 6.0\n        angleRadians = angleDegrees * (pi / 180.0)\n        self.camera.setPos(20 * sin(angleRadians), -20 * cos(angleRadians), 3)\n        self.camera.setHpr(angleDegrees, 0, 0)\n        return Task.cont\n\n\napp = MyApp()\napp.run()\n",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/7d218525_loading-and-animating-the-panda-model.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/210ff496_7d218525_loading-and-animating-the-panda-model.json",
    "doc_id": "doc_0"
  }
}