{
  "content": "Render Attributes\n\nRender Attributes Basics\n\nAfter loading a model, you can alter its appearance by altering its attributes. For example, you can apply a color to the model, you can illuminate it with lights, you can cause it to be obscured by fog, you can make it partially transparent, and so forth. All of these are called render attributes.\n\nCollectively, all the attributes of an object are called the object's render state, or sometimes just the object's state.\n\nPropagation of Attributes\n\nAttributes can be stored on any node of the scene graph; setting an attribute on a node automatically applies it to that node as well as to all of the children of the node (unless an override is in effect, but that's a more advanced topic).\n\nIt is possible to create these attributes and assign them to a node directly:\n\npython\n\nnodePath.node().setAttrib(attributeObject)\n\ncpp\n\nnode_path.node()->set_attrib(attributeObject);\n\nBut in many cases, especially with the most commonly-modified attributes, you don't need to create the attributes directly as there is a convenience function on NodePath (e.g. .NodePath.set_fog()) that manages the creation of the attributes for you; there will also be a corresponding clear function on NodePath to remove the attribute (.NodePath.clear_fog()).\n\nRender Attribute Priorities\n\nEvery attribute has a priority. By default, that priority is zero. That priority value affects the inheritance of attributes.\n\nlist-of-all-attributes lighting materials depth-test-and-depth-write fog alpha-testing color-write-masks antialiasing clip-planes tinting-and-recoloring backface-culling-and-frontface-culling occlusion-culling/index light-ramps auxiliary-bitplane-control stencil-attribute",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/eeecab0d_index.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/330e2d4e_eeecab0d_index.json",
    "doc_id": "doc_508"
  }
}