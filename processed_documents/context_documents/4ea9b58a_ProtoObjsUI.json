{
  "content": "\"\"\"\nDefines ProtoObjs List UI\n\"\"\"\nimport wx\nimport os\n\nfrom panda3d.core import Filename\n\n\nclass ProtoDropTarget(wx.PyDropTarget):\n    \"\"\"Implements drop target functionality to receive files, bitmaps and text\"\"\"\n    def __init__(self, ui):\n        wx.PyDropTarget.__init__(self)\n        self.ui = ui\n        self.do = wx.DataObjectComposite()  # the dataobject that gets filled with the appropriate data\n        self.filedo = wx.FileDataObject()\n        self.textdo = wx.TextDataObject()\n        self.bmpdo = wx.BitmapDataObject()\n        self.do.Add(self.filedo)\n        self.do.Add(self.bmpdo)\n        self.do.Add(self.textdo)\n        self.SetDataObject(self.do)\n\n    def OnData(self, x, y, d):\n        \"\"\"\n        Handles drag/dropping files/text or a bitmap\n        \"\"\"\n        if self.GetData():\n            df = self.do.GetReceivedFormat().GetType()\n            if df in [wx.DF_UNICODETEXT, wx.DF_TEXT]:\n                text = self.textdo.GetText()\n                #self.editor.ui.protoFontsUI.tree.ChangeHierarchy(text, x, y)\n\n            elif df == wx.DF_FILENAME:\n                for name in self.filedo.GetFilenames():\n                    self.ui.AquireFile(name)\n\n            elif df == wx.DF_BITMAP:\n                bmp = self.bmpdo.GetBitmap()\n\n        return d  # you must return this\n\n\nclass ProtoObjsUI(wx.Panel):\n    def __init__(self, parent, editor, protoObjs, supportedExts):\n        wx.Panel.__init__(self, parent)\n\n        self.editor = editor\n        self.protoObjs = protoObjs\n        self.supportedExts = supportedExts\n\n        self.llist = wx.ListCtrl(self, -1, style=wx.LC_REPORT)\n        self.llist.InsertColumn(0, \"Files\")\n\n        sizer = wx.BoxSizer(wx.VERTICAL)\n        sizer.Add(self.llist, 1, wx.EXPAND, 0)\n        self.SetSizer(sizer)\n        self.Layout()\n\n        parentSizer = wx.BoxSizer(wx.VERTICAL)\n        parentSizer.Add(self, 1, wx.EXPAND, 0)\n        parent.SetSizer(parentSizer)\n        parent.Layout()\n\n        self.opDelete = \"Delete\"\n        self.menuItems = list()\n        self.menuItems.append(self.opDelete)\n\n        self.popupmenu = wx.Menu()\n        for item in self.menuItems:\n            menuItem = self.popupmenu.Append(-1, item)\n            self.Bind(wx.EVT_MENU, self.onPopupItemSelected, menuItem)\n        self.Bind(wx.EVT_CONTEXT_MENU, self.onShowPopup)\n\n        self.SetDropTarget(ProtoDropTarget(self))\n\n    def populate(self):\n        for key in list(self.protoObjs.data.keys()):\n            self.add(self.protoObjs.data[key])\n\n    # All subclasses should implement this method\n    def addObj(self, filename):\n        raise NotImplementedError\n\n    def onPopupItemSelected(self, event):\n        menuItem = self.popupmenu.FindItemById(event.GetId())\n        text = menuItem.GetText()\n        if text == self.opDelete:\n            self.remove()\n\n    def onShowPopup(self, event):\n        pos = event.GetPosition()\n        pos = self.ScreenToClient(pos)\n        self.PopupMenu(self.popupmenu, pos)\n\n    def findLabel(self, text):\n        found = False\n        for index in range(self.llist.GetItemCount()):\n            itemtext = self.llist.GetItemText(index)\n            if itemtext == text:\n                return True\n        return found\n\n    def removeItem(self, index):\n        if index != -1:\n            key = self.llist.GetItemText(index)\n            del self.protoObjs.data[key]\n            item = self.llist.DeleteItem(index)\n\n    def remove(self):\n        index = self.llist.GetFirstSelected()\n        self.removeItem(index)\n\n    def add(self, filename):\n        name = os.path.basename(filename)\n        for ext in self.supportedExts:\n            if name.upper().endswith(ext.upper()):\n                try:\n                    index = self.llist.InsertStringItem(self.llist.GetItemCount(), name)\n                    self.protoObjs.data[name] = filename\n                    self.addObj(filename)\n                except Exception:\n                    pass\n                break\n\n    def addNewItem(self, result):\n        ProtoObjsUI.AquireFile(self, result[1])\n\n    def AquireFile(self, filename):\n        label = self.findLabel(filename)\n        if label:\n            self.removeItem(label)\n        filenameFull = Filename.fromOsSpecific(filename).getFullpath()\n        self.add(filenameFull)\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/leveleditor/ProtoObjsUI.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/4ea9b58a_ProtoObjsUI.json",
    "doc_id": "doc_24"
  }
}