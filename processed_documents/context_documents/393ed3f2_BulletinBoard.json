{
  "content": "\"\"\"Contains the BulletinBoard class.\"\"\"\n\n__all__ = ['BulletinBoard']\n\nfrom direct.directnotify import DirectNotifyGlobal\nfrom direct.showbase.MessengerGlobal import messenger\n\n\nclass BulletinBoard:\n    \"\"\"This class implements a global location for key/value pairs to be\n    stored. Intended to prevent coders from putting global variables directly\n    on showbase, so that potential name collisions can be more easily\n    detected.\"\"\"\n    notify = DirectNotifyGlobal.directNotify.newCategory('BulletinBoard')\n\n    def __init__(self):\n        self._dict = {}\n\n    def get(self, postName, default=None):\n        return self._dict.get(postName, default)\n\n    def has(self, postName):\n        return postName in self._dict\n\n    def getEvent(self, postName):\n        return 'bboard-%s' % postName\n\n    def getRemoveEvent(self, postName):\n        return 'bboard-remove-%s' % postName\n\n    def post(self, postName, value=None):\n        if postName in self._dict:\n            BulletinBoard.notify.warning('changing %s from %s to %s' % (\n                postName, self._dict[postName], value))\n        self.update(postName, value)\n\n    def update(self, postName, value):\n        \"\"\"can use this to set value the first time\"\"\"\n        if postName in self._dict:\n            BulletinBoard.notify.info('update: posting %s' % (postName))\n        self._dict[postName] = value\n        messenger.send(self.getEvent(postName))\n\n    def remove(self, postName):\n        if postName in self._dict:\n            del self._dict[postName]\n            messenger.send(self.getRemoveEvent(postName))\n\n    def removeIfEqual(self, postName, value):\n        # only remove the post if its value is a particular value\n        if self.has(postName):\n            if self.get(postName) == value:\n                self.remove(postName)\n\n    def __repr__(self):\n        str  = 'Bulletin Board Contents\\n'\n        str += '======================='\n        for postName in sorted(self._dict):\n            str += '\\n%s: %s' % (postName, self._dict[postName])\n        return str\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/showbase/BulletinBoard.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/393ed3f2_BulletinBoard.json",
    "doc_id": "doc_266"
  }
}