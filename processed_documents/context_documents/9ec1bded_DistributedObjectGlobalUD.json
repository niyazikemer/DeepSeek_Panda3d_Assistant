{
  "content": "from panda3d.core import ConfigVariableInt\nfrom .DistributedObjectUD import DistributedObjectUD\nfrom direct.directnotify.DirectNotifyGlobal import directNotify\n\nimport sys\n\nclass DistributedObjectGlobalUD(DistributedObjectUD):\n    notify = directNotify.newCategory('DistributedObjectGlobalUD')\n\n    doNotDeallocateChannel = 1\n    isGlobalDistObj = 1\n\n    def __init__(self, air):\n        DistributedObjectUD.__init__(self, air)\n        self.ExecNamespace = {\"self\":self}\n\n    def announceGenerate(self):\n        self.air.registerForChannel(self.doId)\n        DistributedObjectUD.announceGenerate(self)\n\n    def delete(self):\n        self.air.unregisterForChannel(self.doId)\n        ## self.air.removeDOFromTables(self)\n        DistributedObjectUD.delete(self)\n\n    def execCommand(self, command, mwMgrId, avId, zoneId):\n        length = ConfigVariableInt(\"ai-debug-length\", 300)\n        text = str(self.__execMessage(command))[:length.value]\n        self.notify.info(text)\n\n    def __execMessage(self, message):\n        if not self.ExecNamespace:\n            # Import some useful variables into the ExecNamespace initially.\n            import panda3d.core\n\n            for key, value in panda3d.core.__dict__.items():\n                if not key.startswith('__'):\n                    self.ExecNamespace[key] = value\n            #self.importExecNamespace()\n\n        # Now try to evaluate the expression using ChatInputNormal.ExecNamespace as\n        # the local namespace.\n        try:\n            return str(eval(message, globals(), self.ExecNamespace))\n\n        except SyntaxError:\n            # Maybe it's only a statement, like \"x = 1\", or\n            # \"import math\".  These aren't expressions, so eval()\n            # fails, but they can be exec'ed.\n            try:\n                exec(message, globals(), self.ExecNamespace)\n                return 'ok'\n            except:\n                exception = sys.exc_info()[0]\n                extraInfo = sys.exc_info()[1]\n                if extraInfo:\n                    return str(extraInfo)\n                else:\n                    return str(exception)\n        except:\n            exception = sys.exc_info()[0]\n            extraInfo = sys.exc_info()[1]\n            if extraInfo:\n                return str(extraInfo)\n            else:\n                return str(exception)\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/distributed/DistributedObjectGlobalUD.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/9ec1bded_DistributedObjectGlobalUD.json",
    "doc_id": "doc_328"
  }
}