{
  "content": "from panda3d.core import CardMaker, LineSegs, TextNode, Texture, TransparencyAttrib\nfrom direct.showbase.DirectObject import DirectObject\nfrom direct.showbase import ShowBaseGlobal\n\n\nclass TexViewer(DirectObject):\n    \"\"\" A simple class to pop up a card onscreen to see the contents\n    of a texture. \"\"\"\n\n    def __init__(self, tex):\n        self.tex = tex\n        self.cleanedUp = False\n\n        self.root = ShowBaseGlobal.aspect2d.attachNewNode('texViewer')\n        self.root.setBin('gui-popup', 10000)\n\n        cards = self.root.attachNewNode('cards')\n\n        # We'll put the full-resolution texture on the left.\n        cm = CardMaker('left')\n        l, r, b, t = (-1.0, -0.1, 0.0, 0.9)\n        cm.setFrame(l, r, b, t)\n        left = cards.attachNewNode(cm.generate())\n        left.setTexture(self.tex)\n        left.setTransparency(TransparencyAttrib.MAlpha)\n\n        ls = LineSegs('frame')\n        ls.setColor(0, 0, 0, 1)\n        ls.moveTo(l, 0, b)\n        ls.drawTo(r, 0, b)\n        ls.drawTo(r, 0, t)\n        ls.drawTo(l, 0, t)\n        ls.drawTo(l, 0, b)\n        cards.attachNewNode(ls.create())\n\n\n        # And the \"simple\", reduced-resolution version goes on the\n        # right.\n        if self.tex.hasSimpleRamImage():\n            self.t2 = Texture('simple')\n            self.t2.setup2dTexture(self.tex.getSimpleXSize(),\n                                   self.tex.getSimpleYSize(),\n                                   Texture.TUnsignedByte,\n                                   Texture.FRgba8)\n            self.t2.setRamImage(self.tex.getSimpleRamImage())\n            self.t2.setMagfilter(Texture.FTNearest)\n\n            cm = CardMaker('right')\n            l, r, b, t = (0.1, 1, 0, 0.9)\n            cm.setFrame(l, r, b, t)\n            right = cards.attachNewNode(cm.generate())\n            right.setTexture(self.t2)\n            right.setTransparency(TransparencyAttrib.MAlpha)\n\n            ls = LineSegs('frame')\n            ls.setColor(0, 0, 0, 1)\n            ls.moveTo(l, 0, b)\n            ls.drawTo(r, 0, b)\n            ls.drawTo(r, 0, t)\n            ls.drawTo(l, 0, t)\n            ls.drawTo(l, 0, b)\n            cards.attachNewNode(ls.create())\n\n        # Scale both sides by the aspect ratio.\n        if self.tex.getXSize() > self.tex.getYSize():\n            cards.setScale(1, 1, float(self.tex.getYSize()) / self.tex.getXSize())\n        else:\n            cards.setScale(float(self.tex.getXSize()) / self.tex.getYSize(), 1, 1)\n\n        # Label the texture.\n        tn = TextNode('label')\n        tn.setShadow(0.1, 0.1)\n        tn.setText(self.tex.getName())\n        tn.setAlign(tn.ACenter)\n        tnp = self.root.attachNewNode(tn)\n        tnp.setScale(0.1)\n        tnp.setPos(0, 0, -tn.getHeight() * 0.1)\n\n    def cleanup(self):\n        if not self.cleanedUp:\n            self.root.removeNode()\n            self.cleanedUp = True\n            self.tex = None\n            self.t2 = None\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/showutil/TexViewer.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/4108ccf1_TexViewer.json",
    "doc_id": "doc_174"
  }
}