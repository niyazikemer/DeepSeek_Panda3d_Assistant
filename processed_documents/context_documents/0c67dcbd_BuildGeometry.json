{
  "content": "from panda3d.core import (\n    Geom,\n    GeomNode,\n    GeomTrifans,\n    GeomTristrips,\n    GeomVertexData,\n    GeomVertexFormat,\n    GeomVertexWriter,\n    Vec4,\n)\nfrom math import pi, cos, sin\n\n\nGEO_ID = 0\n\n\ndef circleX(angle, radius, centerX, centerY):\n    x = radius * cos(angle) + centerX\n    return x\n\n\ndef circleY(angle, radius, centerX, centerY):\n    y = radius * sin(angle) + centerY\n    return y\n\n\ndef getCirclePoints(segCount, centerX, centerY, radius, wideX= 1.0, wideY = 1.0):\n    returnShape = []\n    for seg in range(0, segCount):\n        coordX = wideX * (circleX(((pi * 2.0) * float(float(seg) / float(segCount))), radius, centerX, centerY))\n        coordY = wideY * (circleY(((pi * 2.0) * float(float(seg) / float(segCount))), radius, centerX, centerY))\n        returnShape.append((coordX, coordY, 1))\n\n    coordX = wideX * (circleX(((pi * 2.0) * float(0 / segCount)), radius, centerX, centerY))\n    coordY = wideY * (circleY(((pi * 2.0) * float(0 / segCount)), radius, centerX, centerY))\n    returnShape.append((coordX, coordY, 1))\n    return returnShape\n\n\ndef addCircle(attachNode, vertexCount, radius, color = Vec4(1.0, 1.0, 1.0, 1.0), centerColor = None, layer = 0):\n    targetGN = GeomNode(\"target Circle\")\n    if centerColor is None:\n        centerColor = color\n    zFloat = 0.025\n    targetCircleShape = getCirclePoints(5 + (vertexCount), 0.0, 0.0, radius)\n    gFormat = GeomVertexFormat.getV3c()\n    targetCircleVertexData = GeomVertexData(\"holds my vertices\", gFormat, Geom.UHDynamic)\n    targetCircleVertexWriter = GeomVertexWriter(targetCircleVertexData, \"vertex\")\n    targetCircleColorWriter = GeomVertexWriter(targetCircleVertexData, \"color\")\n    targetCircleVertexWriter.addData3f(0.0, 0.0, zFloat) #center\n    targetCircleColorWriter.addData4f(centerColor[0], centerColor[1], centerColor[2], centerColor[3])\n\n    for vertex in targetCircleShape:\n        targetCircleVertexWriter.addData3f(0.0 + vertex[0], 0.0 + vertex[1], zFloat)\n        targetCircleColorWriter.addData4f(color[0], color[1], color[2], color[3])\n        #targetCircleColorWriter.addData4f(1.0, 1.0, 1.0, 1.0)\n\n    targetTris = GeomTrifans(Geom.UHStatic) # triangle object\n\n    sizeTarget = len(targetCircleShape)\n    targetTris.addVertex(0)\n    for countVertex in range(1, sizeTarget + 1):\n        targetTris.addVertex(countVertex)\n    targetTris.addVertex(1)\n    targetTris.closePrimitive()\n\n    targetGeom = Geom(targetCircleVertexData)\n    targetGeom.addPrimitive(targetTris)\n    attachNode.addGeom(targetGeom)\n    return targetGeom\n\n\ndef addCircleGeom(rootNode,  vertexCount, radius, color = Vec4(1.0, 1.0, 1.0, 1.0), centerColor = None, layer = 0):\n    global GEO_ID\n    GN=GeomNode(\"Circle %s\" % (GEO_ID))\n    GEO_ID += 1\n    NodePathGeom = rootNode.attachNewNode(GN)\n    geo = addCircle(GN, vertexCount, radius, color, centerColor,layer)\n    return NodePathGeom, GN, geo\n\n\ndef addSquare(attachNode, sizeX, sizeY, color = Vec4(1.0, 1.0, 1.0, 1.0), layer = 0):\n    targetGN = GeomNode(\"Square Geom\")\n    sX = sizeX / 2.0\n    sY = sizeY / 2.0\n\n    color1 = color\n    color2 = color\n    color3 = color\n\n    gFormat = GeomVertexFormat.getV3n3ct2()\n    boxVertexData = GeomVertexData(\"vertices\", gFormat, Geom.UHDynamic)\n\n    boxVertexWriter = GeomVertexWriter(boxVertexData, \"vertex\")\n    boxNormalWriter = GeomVertexWriter(boxVertexData, \"normal\")\n    boxColorWriter = GeomVertexWriter(boxVertexData, \"color\")\n    boxTextureWriter = GeomVertexWriter(boxVertexData, \"texcoord\")\n\n    boxVertexWriter.addData3f(-sX, sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n    boxTextureWriter.addData2f(0.0, 1.0)\n\n    boxVertexWriter.addData3f(-sX, -sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n    boxTextureWriter.addData2f(0.0, 0.0)\n\n    boxVertexWriter.addData3f(sX, -sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n    boxTextureWriter.addData2f(1.0, 0.0)\n\n    boxVertexWriter.addData3f(sX, sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n    boxTextureWriter.addData2f(1.0, 1.0)\n\n    boxTris = GeomTristrips(Geom.UHStatic) # trianglestrip obejcet\n\n    boxTris.addVertex(1)\n    boxTris.addVertex(2)\n    boxTris.addVertex(0)\n    boxTris.addVertex(3)\n    boxTris.closePrimitive()\n\n    boxGeom = Geom(boxVertexData)\n    boxGeom.addPrimitive(boxTris)\n\n    attachNode.addGeom(boxGeom)\n    return boxGeom\n\n\ndef addSquareGeom(rootNode, sizeX, sizeY, color = Vec4(1.0, 1.0, 1.0, 1.0), layer = 0):\n    global GEO_ID\n    GN = GeomNode(\"Square %s\" % (GEO_ID))\n    GEO_ID += 1\n    NodePathGeom = rootNode.attachNewNode(GN)\n    geo = addSquare(GN, sizeX, sizeY, color, layer)\n    return NodePathGeom, GN, geo\n\n\ndef addBox(attachNode, sizeX, sizeY, sizeZ, color = Vec4(1.0, 1.0, 1.0, 1.0), darken = 0):\n    targetGN = GeomNode(\"Box Geom\")\n    sX = sizeX / 2.0\n    sY = sizeY / 2.0\n    sZ = sizeZ / 2.0\n\n    color1 = color\n    color2 = color\n    color3 = color\n    if darken:\n        color1 = color * 0.75 #Vec4(0.0, 0.0, 0.0, 1.0)\n        color2 = color * 0.50 #Vec4(0.0, 0.0, 0.0, 1.0)\n        color3 = color * 0.25 #Vec4(0.0, 0.0, 0.0, 1.0)\n\n    gFormat = GeomVertexFormat.getV3n3c()\n    boxVertexData = GeomVertexData(\"vertices\", gFormat, Geom.UHDynamic)\n\n    boxVertexWriter = GeomVertexWriter(boxVertexData, \"vertex\")\n    boxNormalWriter = GeomVertexWriter(boxVertexData, \"normal\")\n    boxColorWriter = GeomVertexWriter(boxVertexData, \"color\")\n\n    #Front\n\n    boxVertexWriter.addData3f(sX, sY, sZ)\n    boxNormalWriter.addData3f(0, 1, 0)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX, sY, -sZ)\n    boxNormalWriter.addData3f(0, 1, 0)\n    boxColorWriter.addData4f(color1[0], color1[1], color1[2], color1[3])\n\n    boxVertexWriter.addData3f(-sX, sY, -sZ)\n    boxNormalWriter.addData3f(0, 1, 0)\n    boxColorWriter.addData4f(color1[0], color1[1], color1[2], color1[3])\n\n    boxVertexWriter.addData3f(-sX, sY, sZ)\n    boxNormalWriter.addData3f(0, 1, 0)\n    boxColorWriter.addData4f(color1[0], color1[1], color1[2], color1[3])\n\n    #Back\n\n    boxVertexWriter.addData3f(-sX, -sY, sZ)\n    boxNormalWriter.addData3f(0, -1, 0)\n    boxColorWriter.addData4f(color2[0], color2[1], color2[2], color2[3])\n\n    boxVertexWriter.addData3f(-sX, -sY, -sZ)\n    boxNormalWriter.addData3f(0, -1, 0)\n    boxColorWriter.addData4f(color3[0], color3[1], color3[2], color3[3])\n\n    boxVertexWriter.addData3f(sX, -sY, -sZ)\n    boxNormalWriter.addData3f(0, -1, 0)\n    boxColorWriter.addData4f(color2[0], color2[1], color2[2], color2[3])\n\n    boxVertexWriter.addData3f(sX, -sY, sZ)\n    boxNormalWriter.addData3f(0, -1, 0)\n    boxColorWriter.addData4f(color2[0], color2[1], color2[2], color2[3])\n\n    #Top\n\n    boxVertexWriter.addData3f(-sX, sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(-sX, -sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX, -sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX, sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    #Bottom\n\n    boxVertexWriter.addData3f(sX, sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, -1)\n    boxColorWriter.addData4f(color3[0], color3[1], color3[2], color3[3])\n\n    boxVertexWriter.addData3f(sX, -sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, -1)\n    boxColorWriter.addData4f(color3[0], color3[1], color3[2], color3[3])\n\n    boxVertexWriter.addData3f(-sX, -sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, -1)\n    boxColorWriter.addData4f(color3[0], color3[1], color3[2], color3[3])\n\n    boxVertexWriter.addData3f(-sX, sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, -1)\n    boxColorWriter.addData4f(color3[0], color3[1], color3[2], color3[3])\n\n    #Right\n\n    boxVertexWriter.addData3f(sX, sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX, -sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color1[0], color1[1], color1[2], color1[3])\n\n    boxVertexWriter.addData3f(sX, -sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color1[0], color1[1], color1[2], color1[3])\n\n    boxVertexWriter.addData3f(sX, sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color1[0], color1[1], color1[2], color1[3])\n\n    #Left\n\n    boxVertexWriter.addData3f(-sX, sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color2[0], color2[1], color2[2], color2[3])\n\n    boxVertexWriter.addData3f(-sX, -sY, -sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color3[0], color3[1], color3[2], color3[3])\n\n    boxVertexWriter.addData3f(-sX, -sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color2[0], color2[1], color2[2], color2[3])\n\n    boxVertexWriter.addData3f(-sX, sY, sZ)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color2[0], color2[1], color2[2], color2[3])\n\n    boxTris = GeomTristrips(Geom.UHStatic) # trianglestrip obejcet\n    boxTris.addVertex(0)#(1)\n    boxTris.addVertex(1)#(2)\n    boxTris.addVertex(3)#(0)\n    boxTris.addVertex(2)#(3)\n    boxTris.closePrimitive()\n\n    boxTris.addVertex(5)\n    boxTris.addVertex(6)\n    boxTris.addVertex(4)\n    boxTris.addVertex(7)\n    boxTris.closePrimitive()\n\n    boxTris.addVertex(9)\n    boxTris.addVertex(10)\n    boxTris.addVertex(8)\n    boxTris.addVertex(11)\n    boxTris.closePrimitive()\n\n    boxTris.addVertex(13)\n    boxTris.addVertex(14)\n    boxTris.addVertex(12)\n    boxTris.addVertex(15)\n    boxTris.closePrimitive()\n\n    boxTris.addVertex(16) #(17)\n    boxTris.addVertex(17) #(18)\n    boxTris.addVertex(19) #(16)\n    boxTris.addVertex(18) #(19)\n    boxTris.closePrimitive()\n\n    boxTris.addVertex(21)\n    boxTris.addVertex(22)\n    boxTris.addVertex(20)\n    boxTris.addVertex(23)\n    boxTris.closePrimitive()\n\n    boxGeom = Geom(boxVertexData)\n    boxGeom.addPrimitive(boxTris)\n\n    attachNode.addGeom(boxGeom)\n    return boxGeom\n\n\ndef addBoxGeom(rootNode, sizeX, sizeY, sizeZ, color = Vec4(1.0, 1.0, 1.0, 1.0), darken = 0):\n    global GEO_ID\n    GN = GeomNode(\"Box %s\" % (GEO_ID))\n    GEO_ID += 1\n    nodePathGeom = rootNode.attachNewNode(GN)\n    geo = addBox(GN, sizeX, sizeY, sizeZ, color, darken)\n    return nodePathGeom, GN, geo\n\n\ndef addArrow(attachNode, sizeX, sizeY, color = Vec4(1.0, 1.0, 1.0, 1.0), layer = 0):\n    targetGN = GeomNode(\"Arrow Geom\")\n    sX = sizeX / 2.0\n    sY = sizeY / 2.0\n\n    color1 = color\n    color2 = color\n    color3 = color\n\n    gFormat = GeomVertexFormat.getV3n3c()\n    boxVertexData = GeomVertexData(\"vertices\", gFormat, Geom.UHDynamic)\n\n    boxVertexWriter = GeomVertexWriter(boxVertexData, \"vertex\")\n    boxNormalWriter = GeomVertexWriter(boxVertexData, \"normal\")\n    boxColorWriter = GeomVertexWriter(boxVertexData, \"color\")\n\n    boxVertexWriter.addData3f(-sX, sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(-sX, -sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX, -sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX, sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxTris = GeomTristrips(Geom.UHStatic) # trianglestrip obejcet\n\n    boxTris.addVertex(1)\n    boxTris.addVertex(2)\n    boxTris.addVertex(0)\n    boxTris.addVertex(3)\n    boxTris.closePrimitive()\n\n    boxVertexWriter.addData3f(-sX * 2.0, sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(sX * 2.0, sY, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxVertexWriter.addData3f(0.0, sY * 2.0, 0.0)\n    boxNormalWriter.addData3f(0, 0, 1)\n    boxColorWriter.addData4f(color[0], color[1], color[2], color[3])\n\n    boxTris.addVertex(4)\n    boxTris.addVertex(5)\n    boxTris.addVertex(6)\n    boxTris.closePrimitive()\n\n    boxGeom = Geom(boxVertexData)\n    boxGeom.addPrimitive(boxTris)\n\n    attachNode.addGeom(boxGeom)\n    return boxGeom\n\n\ndef addArrowGeom(rootNode, sizeX, sizeY, color = Vec4(1.0, 1.0, 1.0, 1.0), layer = 0):\n    global GEO_ID\n    GN = GeomNode(\"Arrow %s\" % (GEO_ID))\n    GEO_ID += 1\n    NodePathGeom = rootNode.attachNewNode(GN)\n    geo = addArrow(GN, sizeX, sizeY, color, layer)\n    return NodePathGeom, GN, geo\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/showutil/BuildGeometry.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/0c67dcbd_BuildGeometry.json",
    "doc_id": "doc_173"
  }
}