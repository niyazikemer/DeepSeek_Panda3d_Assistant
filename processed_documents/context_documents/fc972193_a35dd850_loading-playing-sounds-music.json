{
  "content": "Loading and Playing Sounds and Music\n\nArchitecture\n\nThe implementation of the sound system in Panda3D allows for a division of audio into two categories - Sound Effects and Music. This division is only a convenience for programmers as Panda3D allows these two audio groups to be treated individually. These differences are explained on the next page.\n\nBasics\n\nLoading a Sound\n\npython\n\nLoading sound is done through the ~direct.showbase.Loader class by supplying the path to the sound file as a parameter for ~direct.showbase.Loader.Loader.loadSfx(). Here's an example:\n\nbase = ShowBase()\nmySound = base.loader.loadSfx(\"path/to/sound_file.ogg\")\n\ncpp\n\nLoading sound is done through the AudioManager class by supplying the path to the sound file as a parameter for ~AudioManager.get_sound(). Here's an example:\n\nPT(AudioManager) AM = AudioManager::create_AudioManager();\nPT(AudioSound) mySound = AM->get_sound(\"path/to/sound_file.ogg\") ;\n\nThese will return an object of the type .AudioSound. It is necessary to put the extension in the sound filename.\n\nPlaying/Stopping a Sound\n\nTo play sounds you can do the following:\n\npython\n\nmySound.play()\n\ncpp\n\nmySound->play();\n\nTo stop a sound:\n\npython\n\nmySound.stop()\n\ncpp\n\nmySound->stop();\n\nQuerying Sound Status\n\nTo check the status of a sound, call ~.AudioSound.status():\n\npython\n\nstatus = mySound.status()\n\ncpp\n\nmySound->status();\n\n~.AudioSound.status() returns a constant depending on the status of the sound:\n\nConstant Status AudioSound.BAD The sound is not working properly. AudioSound.READY The sound is not currently playing and is ready to be played on\ncommand. AudioSound.PLAYING The sound is currently playing.\n\npython\n\nExample usage of this would be to stop a sound from playing only if it's currently playing.\n\nif mySound.status() == mySound.PLAYING:\n    mySound.stop()\n\nSetting Volume\n\nThe volume can be set between 0 and 1 and will linearly scale between these.\n\npython\n\nmySound.setVolume(0.5)\n\ncpp\n\nmySound->set_volume(0.5);\n\nPanning a Sound\n\nYou can change the balance of a sound. The range is between -1.0 to 1.0. Hard left is -1.0 and hard right is 1.0.\n\npython\n\nmySound.setBalance(-0.5)\n\ncpp\n\nmySound->set_balance(-0.5);\n\npython\n\nNote\n\nIf Panda3D is running from an interactive prompt, call ~.AudioManager.update() after you play a sound.\n\nbase.sfxManagerList[n].update()\n\nThis is because the ~.AudioManager.update() command is called every frame to reset a sound's channel. In interactive mode, however, Panda3D's frame update is suspended and does not run automatically.",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/a35dd850_loading-playing-sounds-music.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/fc972193_a35dd850_loading-playing-sounds-music.json",
    "doc_id": "doc_510"
  }
}