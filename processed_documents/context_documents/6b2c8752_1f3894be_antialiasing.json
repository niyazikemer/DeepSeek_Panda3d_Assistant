{
  "content": "Antialiasing\n\ncpp\n\nIt is recommended to include:\n\n#include \"antialiasAttrib.h\"\n\nThe antialias attribute of a node controls what kind of antialiasing is to be applied to that node. To choose one of the various forms of antialiasing, invoke one of the following variants:\n\npython\n\nnp.setAntialias(AntialiasAttrib.MNone)\nnp.setAntialias(AntialiasAttrib.MPoint)\nnp.setAntialias(AntialiasAttrib.MLine)\nnp.setAntialias(AntialiasAttrib.MPolygon)\nnp.setAntialias(AntialiasAttrib.MMultisample)\nnp.setAntialias(AntialiasAttrib.MAuto)\n\ncpp\n\nnodePath.set_antialias(AntialiasAttrib::M_none);\nnodePath.set_antialias(AntialiasAttrib::M_point);\nnodePath.set_antialias(AntialiasAttrib::M_line);\nnodePath.set_antialias(AntialiasAttrib::M_polygon);\nnodePath.set_antialias(AntialiasAttrib::M_multisample);\nnodePath.set_antialias(AntialiasAttrib::M_auto);\n\nIn general, when rendering polygonal models, multisample antialiasing looks best. However, when rendering lines and points, it usually looks better to choose one of the specialized antialiasing modes. The MAuto setting automatically selects the kind that usually works best for the geometry in question. Thus, if you want to enable antialiasing on the whole scene, just use:\n\npython\n\nrender.setAntialias(AntialiasAttrib.MAuto)\n\ncpp\n\nwindow->get_render().set_antialias(AntialiasAttrib::M_auto);\n\nNote\n\nOn some drivers, using the polygon smoothing mode (MPolygon, or MAuto with multisampling disabled) does not produce reliable results, or may have additional requirements to work properly, such as front-to-back sorting or a special alpha blend function. For optimal compatibility, it is recommended to either explicitly specify multisample antialiasing or leave antialiasing off.\n\nAlso see issue #993.\n\nIn order for multisample antialiasing to work, you have to have multisample bits available in your framebuffer. To request this, add:\n\nframebuffer-multisample 1\nmultisamples 2\n\nto your Config.prc file. Note that not all graphics cards have this capability. You may also be able to request more multisamples, such as 4 or 8, depending on your graphics card. If your card can provide additional samples, it produces a higher-quality antialiasing, at a small cost to render time.\n\nNote\n\nOn some graphics cards, enabling a multisample framebuffer will automatically enable multisample antialiasing, regardless of the setting of the antialias attribute. It is not possible to disable this. If you do not want the entire framebuffer to be multisample-antialiased, consider the use of render-to-texture.\n\nThe function ~.NodePath.clear_antialias() can be used to remove the antialias setting. The function ~.NodePath.set_antialias() takes an optional priority parameter, to control attribute overrides.",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/1f3894be_antialiasing.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/6b2c8752_1f3894be_antialiasing.json",
    "doc_id": "doc_355"
  }
}