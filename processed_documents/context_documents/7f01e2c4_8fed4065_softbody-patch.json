{
  "content": "Bullet Softbody Patch\n\nSoft body patches are two-dimensional rectangular meshes, which can be used to simulate for example a flag, a tapestry, or sheets of paper.\n\nSetup\n\nSetting up a soft body patch is similar to soft body ropes, but a few extra settings have to be done. The following code will create rectangular path with 31 by 31 segments, and thus 32 x 32 nodes.\n\npython\n\nfrom panda3d.bullet import BulletSoftBodyNode\n\ninfo = self.world.getWorldInfo()\ninfo.setAirDensity(1.2)\ninfo.setWaterDensity(0)\ninfo.setWaterOffset(0)\ninfo.setWaterNormal(Vec3(0, 0, 0))\n\nresx = 31\nresy = 31\n\np00 = Point3(-8, -8, 0)\np10 = Point3( 8, -8, 0)\np01 = Point3(-8,  8, 0)\np11 = Point3( 8,  8, 0)\n\nfixeds = 1+2+4+8\ngendiags = True\n\nbodyNode = BulletSoftBodyNode.makePatch(info, p00, p10, p01, p11, resx, resy, fixeds, gendiags)\n\nmaterial = bodyNode.appendMaterial()\nmaterial.setLinearStiffness(0.4)\nbodyNode.generateBendingConstraints(2, material)\n\nbodyNode.setTotalMass(50.0)\nbodyNode.getShape(0).setMargin(0.5)\nbodyNP = self.worldNP.attachNewNode(bodyNode)\nworld.attachSoftBody(bodyNode)\n\ncpp\n\nTODO\n\nFirst we have to configure the soft body world properties, like we did for soft body ropes too. Next we define variables for the resolution in x- and y-direction, and for the four corner points of the patch.\n\nThe variable fixeds is set to the value 1+2+4+8=15, meaning that the patch should be attached to the world on all four corners. To attach it to the first and third corner (diagonal) we would set the value to 1+8=9, and to not attach it at all we would set it to 0.\n\nNow we can create the soft body node using the factory method makePatch. The following configuration differs from what we have seen for soft body ropes.\n\nFirst we create an additional material attached to the soft body. Initially a soft body has already one material, but for this example we want a second one.\n\nOn the material we set the linear stiffness, and the create bending constraints for this material.\n\nFinally we choose a value of about the grid spacing for the soft bodies margin. Other bodies colliding with the soft body could fall through in between the nodes if the value is too small, and if it is too large they will already collide with the soft body when still noticeably far away.\n\nVisualisation\n\nIn order to have a visual representation of the soft body patch we need a GeomNode. Panda3D's Bullet module has a helper method which will do the work for us. The following code snippet shows how use this helper method.\n\npython\n\nfrom panda3d.core import GeomVertexFormat\nfrom panda3d.bulletimport BulletHelper\n\nfmt = GeomVertexFormat.getV3n3t2()\ngeom = BulletHelper.makeGeomFromFaces(bodyNode, fmt, True)\nbodyNode.linkGeom(geom)\nvisNode = GeomNode('')\nvisNode.addGeom(geom)\nvisNP = bodyNP.attachNewNode(visNode)\n\ncpp\n\nTODO\n\nThe third parameter to makeGeomFromFaces is set to True, making the created geometry be two-sided. If set to False we would get a one-sided geometry, which might be enough, depending on your requirements.\n\nSo far the generated geometry has no texture and no texture coordinates. But the texture has already a column for texcoords, so we just need to write texcoords using a GeomVertexRewriter. The following code shows a convenience method which will do this for us.\n\npython\n\ntex = loader.loadTexture('models/panda.jpg')\nvisNP.setTexture(tex)\nBulletHelper.makeTexcoordsForPatch(geom, resx, resy)\n\ncpp\n\nTODO\n\nNote: It is also possible to render soft body patches using a NurbsSurfaceEvaluator and SheetNode, but results are usually better when rendering patches directly, that is using linked Geom.",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/8fed4065_softbody-patch.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/7f01e2c4_8fed4065_softbody-patch.json",
    "doc_id": "doc_427"
  }
}