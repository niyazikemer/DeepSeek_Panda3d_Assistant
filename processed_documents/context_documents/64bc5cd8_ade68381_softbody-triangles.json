{
  "content": "Bullet Softbody Triangles\n\nSoft bodies made from triangular meshes are similar to soft body patches. just that they are not restricted to rectangular meshes; any two-dimensional triangle mesh will do. An interesting use case for such a soft body is a triangular mesh which is closed. Bullet supports simulation of a pressure for the volume captured inside such a soft body.\n\nSetup\n\nThe following code snippet shows how to setup an gas-filled soft body. Instead of defining the triangle mesh ourselves we use the convenience method makeEllipsoid, which returns a ready-to-use soft body with the shape of an ellipsoid. The last parameter to this convenience method is the \"resolution\" of the ellipsoid. The soft body will have more faces if raising this value. Increasing the value will make the soft body more realistic, but it also requires more performance to simulate the soft body.\n\npython\n\n# Soft body world information\ninfo = world.getWorldInfo()\ninfo.setAirDensity(1.2)\ninfo.setWaterDensity(0)\ninfo.setWaterOffset(0)\ninfo.setWaterNormal(Vec3(0, 0, 0))\n\n# Softbody\ncenter = Point3(0, 0, 0)\nradius = Vec3(1, 1, 1) * 1.5\n\nbodyNode = BulletSoftBodyNode.makeEllipsoid(info, center, radius, 128)\nbodyNode.setName('Ellipsoid')\nbodyNode.getMaterial(0).setLinearStiffness(0.1)\nbodyNode.getCfg().setDynamicFrictionCoefficient(1)\nbodyNode.getCfg().setDampingCoefficient(0.001)\nbodyNode.getCfg().setPressureCoefficient(1500)\nbodyNode.setTotalMass(30, True)\nbodyNode.setPose(True, False)\n\nbodyNP = render.attachNewNode(bodyNode)\nbodyNP.setPos(15, 0, 12)\nbodyNP.setH(90.0)\nworld.attachSoftBody(bodyNP.node())\n\ncpp\n\nTODO\n\nWhen comparing the soft body setup with the previous page, the soft body patch setup, we will find that there are two differences:\n\nFirst, there are three lines which get the configuration objects for this soft body (getCfg), and then set different parameters on this configuration object, in particular the \"pressure coefficient\". For more detailed information on what these parameters do it is best to fall back to the original Bullet documentation. A mapping between the original Bullet members of the btSoftBodyConfig class and the Panda3D BulletSoftBodyConfig object returned by getCfg is given on the manual page softbody-config.\n\nSecond, the method setPose is called. This method sets the current state of the soft body as a \"default pose\" or \"lowest energy state\". The soft body will try to return to this state if possible. The first parameter to this method is the volume flag, and the second parameter the frame flag. It is usually the best thing to set both flags to True.\n\nVisualisation\n\nAgain, in order to have a visual representation of the soft body we need a GeomNode. We can use almost the same code as we have been using for soft body patches. The only difference is that we don't need to make the created geometry two-sided, since the inside of the closed mesh is usually not visible.\n\npython\n\nfrom panda3d.core import GeomVertexFormat\nfrom panda3d.bullet import BulletHelper\n\nfmt = GeomVertexFormat.getV3n3t2()\ngeom = BulletHelper.makeGeomFromFaces(bodyNode, fmt)\nbodyNode.linkGeom(geom)\nvisNode = GeomNode('EllipsoidVisual')\nvisNode.addGeom(geom)\nvisNP = bodyNP.attachNewNode(visNode)\n\ncpp\n\nTODO",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/ade68381_softbody-triangles.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/64bc5cd8_ade68381_softbody-triangles.json",
    "doc_id": "doc_418"
  }
}