{
  "content": "Egg Files\n\nThe Egg format is a file format unique to Panda3D. It is a text-based format, which means it can be opened in a text editor to inspect its contents.\n\nAn Egg file can contain static geometry, but it can also contain information for animating the model, as well as information about the model's material, ie. what color the material has, and how this color changes under the influence of lighting). However, unlike Bam, it cannot represent all of the things that are possible in Panda3D. For instance, light sources are not represented.\n\nTo create an Egg file, you will need to use a modeling program (like Autodesk Maya or 3ds Max) combined with either an export plugin or a file format converter. You can read more about this process in the following sections.\n\nThe Egg format supports, among other things:\n\nVertices\n\nTriangles and larger polygons\n\nJoints (aka Bones)\n\nVertex weights\n\nTexture pathnames (textures are not stored)\n\nBone-based animation keyframes\n\nMorph targets (aka Blend targets)\n\nMorph animation keyframes\n\nMany control flags\n\nNotably, these things are not represented:\n\nLight sources\n\nShaders\n\nThe paths (e.g. for textures) can be either relative (as seen from the Egg file) or absolute (full path). See filename-syntax for more info about Panda's Filename Syntax. In most cases the relative path makes more sense.\n\nAnimations\n\nThe EGG format is somewhat unique in that animations can be stored in a separate Egg file. In fact, the most common approach is to have one Egg file containing the model and its joint hierarchy, and to have a separate Egg file for each animation that acts on this joint hierarchy. These files are then specified together when loading the animated model <loading-actors-and-animations> into Panda3D. This is what you will see in the models that are shipped with the sample programs.\n\nHowever, this is not strictly necessary, and an Egg file can be produced that contains both the model and its associated animations.\n\nLimitations\n\nEgg files are less suitable as a format for storing whole scenes, because they lack the ability to store information about light sources. However, if need be, this information can still be passed from the modelling program via custom tags added to dummy objects.\n\nSample Files\n\nThere are a few models provided in the \"models\" folder of the Panda3D SDK installation that can be used as example files or as temporary stand-ins. Other models are provided with the sample programs available on the download page.\n\nIn addition, here are two sources containing an assortment of models in the Egg format:\n\nhttps://www.panda3d.org/download/noversion/art-gallery.zip\n\nhttps://www.alice.org/pandagallery/\n\nTable of Contents\n\nconverting-to-egg converting-egg-to-bam parsing-and-generating-egg-files syntax",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/eb570a99_index.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/9ad15c81_eb570a99_index.json",
    "doc_id": "doc_451"
  }
}