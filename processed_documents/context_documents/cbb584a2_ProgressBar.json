{
  "content": "\"\"\"\nA  basic widget for showing the progress being made in a task.\n\"\"\"\n\n__all__ = ['ProgressBar']\n\nimport tkinter as tk\n\n\nclass ProgressBar:\n    def __init__(self, master=None, orientation=\"horizontal\",\n                 min=0, max=100, width=100, height=18,\n                 doLabel=1, appearance=\"sunken\",\n                 fillColor=\"blue\", background=\"gray\",\n                 labelColor=\"yellow\", labelFont=\"Verdana\",\n                 labelText=\"\", labelFormat=\"%d%%\",\n                 value=50, bd=2):\n        # preserve various values\n        self.master=master\n        self.orientation=orientation\n        self.min=min\n        self.max=max\n        self.width=width\n        self.height=height\n        self.doLabel=doLabel\n        self.fillColor=fillColor\n        self.labelFont= labelFont\n        self.labelColor=labelColor\n        self.background=background\n        self.labelText=labelText\n        self.labelFormat=labelFormat\n        self.value=value\n        self.frame=tk.Frame(master, relief=appearance, bd=bd)\n        self.canvas=tk.Canvas(self.frame, height=height, width=width, bd=0,\n                              highlightthickness=0, background=background)\n        self.scale=self.canvas.create_rectangle(0, 0, width, height,\n                                                fill=fillColor)\n        self.label=self.canvas.create_text(self.canvas.winfo_reqwidth() / 2,\n                                           height / 2, text=labelText,\n                                           anchor=\"c\", fill=labelColor,\n                                           font=self.labelFont)\n        self.update()\n        self.canvas.pack(side='top', fill='x', expand='no')\n\n    def updateProgress(self, newValue, newMax=None):\n        if newMax:\n            self.max = newMax\n        self.value = newValue\n        self.update()\n\n    def update(self):\n        # Trim the values to be between min and max\n        value=self.value\n        if value > self.max:\n            value = self.max\n        if value < self.min:\n            value = self.min\n        # Adjust the rectangle\n        if self.orientation == \"horizontal\":\n            self.canvas.coords(self.scale, 0, 0,\n                     float(value) / self.max * self.width, self.height)\n        else:\n            self.canvas.coords(self.scale, 0,\n                     self.height - (float(value) / self.max*self.height),\n                     self.width, self.height)\n        # Now update the colors\n        self.canvas.itemconfig(self.scale, fill=self.fillColor)\n        self.canvas.itemconfig(self.label, fill=self.labelColor)\n        # And update the label\n        if self.doLabel:\n            if value:\n                if value >= 0:\n                    pvalue = int((float(value) / float(self.max)) * 100.0)\n                else:\n                    value = 0\n                self.canvas.itemconfig(self.label,\n                                       text=self.labelFormat % value)\n            else:\n                self.canvas.itemconfig(self.label, text='')\n        else:\n            self.canvas.itemconfig(self.label,\n                                   text=self.labelFormat % self.labelText)\n        self.canvas.update_idletasks()\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/tkwidgets/ProgressBar.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/cbb584a2_ProgressBar.json",
    "doc_id": "doc_200"
  }
}