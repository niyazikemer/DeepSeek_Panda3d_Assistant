{
  "content": "Steering Behaviors\n\nThese AI behaviors control the basic motion of NPC objects in a game and make it look realistic.\n\nPandAI is inbuilt with handling the functionality of the seven following basic steering behaviors :\n\nSeek\n\nFlee\n\nPursue\n\nEvade\n\nArrival\n\nWander\n\nFlock\n\nObstacle Avoidance\n\nPath Follow\n\nBefore you start exploring these various behaviors, let me give you a brief introduction on how it is setup and what you need to begin :\n\nAll the Steering Behaviors are part of the Behavior class of any AI Character. Hence, to use them you need to get a reference to it via 'getAiBehaviors()' function of the AICharacter class.\n\nOnce you get this reference, you can use it to call any steering behavior.\n\naiBehaviors = aiCharacter.getAiBehaviors();\naiBehaviors.seek(targetNodePath);\n\nOnce you have read this page, you can proceed to explore the individual pages for each AI Behavior for details and even an example demo for each one working.\n\nPRIORITIES :\n\nEvery steering behavior can also take a second parameter which is priority. This ranges from 0 to 1 and it defines the behaviors intensity when combined with other behaviors.\n\naiBehaviors.seek(targetNodePath_1, 0.5);\naiBehaviors.flee(targetNodePath_2, 0.5);\n\nThis will cause the AICharacter's resultant force to be an equal balance of seeking 'targetNodePath_1' and fleeing 'targetNodePath_2'.\n\nHELPER FUNCTIONS :\n\n(For beginners -> Come back to these when you need this functionality)\n\nFor the AIWorld class:\n\nvoid addAiChar(AICharacter aiChar);\n\nvoid removeAiChar(string name);\n\nvoid addFlock(Flock *flock);\n\nvoid flockOff(int ID);\n\nvoid flockOn(int ID);\n\nFlock getFlock(int ID);\n\nFor the AICharacter class:\n\ndouble getMass();\n\nvoid setMass(double m);\n\nLVecBase3 getVelocity();\n\ndouble getMaxForce();\n\nvoid setMaxForce(double max_force);\n\nNodePath getNodePath();\n\nvoid setNodePath(NodePath np);\n\nFor the AIBehaviors class:\n\naiBehaviors.behaviorStatus(string AIName)\n\nThis function returns the status of an AI Behavior whether it is active, paused, done or disabled. Returns -1 if an invalid string is passed.\n\nNote for pathfinding status, use pathfollow as the string name, since pathfinding is a subset of pathfollow.\n\nTo remove any AI after their call has been instantiated.\n\nvoid removeAi(string \"AIName\");\n\nNote for pathfinding removal, use pathfollow as the string name, since pathfinding is a subset of pathfollow.\n\nTo pause or resume any AI after their call has been instantiated.\n\nvoid pauseAi(string \"AIName\");\n\nvoid resumeAi(string \"AIName\");\n\nwhere AIName refers to:\n\n\"all\" - removes all the Ai's\n\n\"seek\" - removes seek\n\n\"flee\" - removes flee\n\n\"pursue\" - removes arrival\n\n\"evade\" - removes pursuit\n\n\"arrival\" - removes evade\n\n\"wander\" - removes wander\n\n\"flock\" - removes flock\n\n\"obstacle_avoidance\" - removes obstacle_avoidance\n\n\"pathfollow\" - removes pathfollow\n\nseek flee pursue evade wander flock obstacle-avoidance path-follow",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/c0a76b4d_index.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/735cd4df_c0a76b4d_index.json",
    "doc_id": "doc_700"
  }
}