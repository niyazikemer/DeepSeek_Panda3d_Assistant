{
  "content": "Flee\n\n'Flee' is an AI behavior where an AICharacter will move in the opposite direction to a target NodePath or position.\n\nhttps://www.youtube.com/watch?v=sXzzuK2Vnnk\n\nIn PandAI, 'Flee' is defined as:\n\naiBehaviors.flee(NodePath target, double panic_distance, double relax_distance, float priority)\naiBehaviors.flee(Vec3 position, double panic_distance, double relax_distance, float priority)\n\nwhere:\n\nPanic Distance is the radius of detection.\n\nRelax Distance is the distance from the panic distance radius after which the object should stop fleeing once flee has been initiated.\n\npriority is by default set to 1.0 and is used when using two or more steering behaviors on an AICharacter.\n\nThe velocity at which the AICharacter flees is determined when you first create your AICharacter object using the AICharacter constructor.\n\nNote: 'Flee' takes in a target or a position to be fled away from; this position should be static. (For moving objects use Evade).\n\nA fully working flee demo :\n\nimport direct.directbase.DirectStart\nfrom panda3d.core import *\nfrom direct.showbase.DirectObject import DirectObject\nfrom direct.task import Task\nfrom direct.actor.Actor import Actor\n#for Pandai\nfrom panda3d.ai import *\n\nclass World(DirectObject):\n\n    def __init__(self):\n        base.disableMouse()\n        base.cam.setPosHpr(0,0,55,0,-90,0)\n\n        self.loadModels()\n        self.setAI()\n\n    def loadModels(self):\n        # Seeker\n        ralphStartPos = Vec3(2, 0, 0)\n        self.fleer = Actor(\"models/ralph\",\n                                 {\"run\":\"models/ralph-run\"})\n        self.fleer.reparentTo(render)\n        self.fleer.setScale(0.5)\n        self.fleer.setPos(ralphStartPos)\n        # Target\n        self.target = loader.loadModel(\"models/arrow\")\n        self.target.setColor(1,0,0)\n        self.target.setPos(5,0,0)\n        self.target.setScale(1)\n        self.target.reparentTo(render)\n\n    def setAI(self):\n        #Creating AI World\n        self.AIworld = AIWorld(render)\n\n        self.AIchar = AICharacter(\"fleer\",self.fleer, 100, 0.05, 5)\n        self.AIworld.addAiChar(self.AIchar)\n        self.AIbehaviors = self.AIchar.getAiBehaviors()\n\n        self.AIbehaviors.flee(self.target, 5, 5)\n        self.fleer.loop(\"run\")\n\n        #AI World update\n        taskMgr.add(self.AIUpdate,\"AIUpdate\")\n\n    #to update the AIWorld\n    def AIUpdate(self,task):\n        self.AIworld.update()\n        return Task.cont\n\nw = World()\nbase.run()\n\nTo get a working demo of this example, please visit:\n\nhttps://sites.google.com/site/etcpandai/documentation/steering-behaviors/flee/PandAIFleeExample.zip?attredirects=0&d=1",
  "metadata": {
    "source": "corpus_panda3d/collected_docs/7765537e_flee.rst",
    "doc_type": "rst",
    "file_path": "processed_documents/context_documents/6e27ca21_7765537e_flee.json",
    "doc_id": "doc_461"
  }
}