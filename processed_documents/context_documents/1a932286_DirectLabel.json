{
  "content": "\"\"\"Contains the DirectLabel class.\n\nSee the :ref:`directlabel` page in the programming manual for a more in-depth\nexplanation and an example of how to use this class.\n\"\"\"\n\n__all__ = ['DirectLabel']\n\nfrom panda3d.core import PGItem\nfrom .DirectFrame import DirectFrame\n\n\nclass DirectLabel(DirectFrame):\n    \"\"\"\n    DirectLabel(parent) - Create a DirectGuiWidget which has multiple\n    states.  User explicitly chooses a state to display\n    \"\"\"\n\n    def __init__(self, parent = None, **kw):\n        # Inherits from DirectFrame\n        # A Direct Frame can have:\n        # - A background texture (pass in path to image, or Texture Card)\n        # - A midground geometry item (pass in geometry)\n        # - A foreground text Node (pass in text string or Onscreen Text)\n        # For a direct label:\n        # Each label has 1 or more states\n        # The same image/geom/text can be used for all states or each\n        # state can have a different text/geom/image\n        # State transitions happen under user control\n\n        optiondefs = (\n            # Define type of DirectGuiWidget\n            ('pgFunc',          PGItem,    None),\n            ('numStates',       1,         None),\n            ('state',           self.inactiveInitState, None),\n            ('activeState',     0,         self.setActiveState),\n        )\n        # Merge keyword options with default options\n        self.defineoptions(kw, optiondefs)\n\n        # Initialize superclasses\n        DirectFrame.__init__(self, parent)\n\n        # Call option initialization functions\n        self.initialiseoptions(DirectLabel)\n\n    def setActiveState(self):\n        \"\"\" setActiveState - change label to specifed state \"\"\"\n        self.guiItem.setState(self['activeState'])\n",
  "metadata": {
    "source": "corpus_panda3d/source_code/direct/src/gui/DirectLabel.py",
    "doc_type": "python",
    "file_path": "processed_documents/context_documents/1a932286_DirectLabel.json",
    "doc_id": "doc_86"
  }
}