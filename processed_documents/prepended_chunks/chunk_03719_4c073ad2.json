{
  "content": "This chunk is the initial module-level documentation and setup for the `AppShell` application framework. It provides context about the origin and purpose of `AppShell`, along with necessary imports, global variable initialization, and a function to reset widget dictionaries. This section introduces the core components and dependencies required for building GUI applications using this framework.\n\n```plaintext\nThis chunk is the initial module-level documentation, imports, and setup code for the AppShell application framework. It explains the origin and purpose of AppShell, imports necessary modules, initializes global dictionaries for widgets and variables, and provides a function to reset widget dictionaries.\n```\n\n\"\"\"\nAppShell provides a GUI application framework.\nThis is an adaption of AppShell.py found in Python and Tkinter Programming\nby John E. Grayson which is a streamlined adaptation of GuiAppD.py, originally\ncreated by Doug Hellmann (doughellmann@mindspring.com).\n\"\"\"\n\n__all__ = ['AppShell']\n\nfrom direct.showbase.DirectObject import DirectObject\nfrom . import Dial\nfrom . import Floater\nfrom . import Slider\nfrom . import EntryScale\nfrom . import VectorWidgets\nfrom . import ProgressBar\nimport Pmw\nimport tkinter as tk\nimport builtins\n\n\n# Create toplevel widget dictionary\nif not hasattr(builtins, \"widgetDict\"):\n    builtins.widgetDict = {}  # type: ignore[attr-defined]\n\n# Create toplevel variable dictionary\nif not hasattr(builtins, \"variableDict\"):\n    builtins.variableDict = {}  # type: ignore[attr-defined]\n\n\ndef resetWidgetDict():\n    builtins.widgetDict = {}",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_199",
    "parent": "processed_documents/context_documents/342b5b21_AppShell.json",
    "chunk_number": 3719
  }
}