{
  "content": "This section is part of a comprehensive guide on using the `MeshDrawer` class in Panda3D. It follows examples showing how to set up a draw task for rendering geometry efficiently, including setup steps for Python and C++ implementations. The chunk explains how to use `Vec4` frames to specify texture coordinates for billboards, which is useful for creating palletized textures or selecting specific regions of a texture for rendering. This section appears after the initial setup and task creation examples but before discussing the differences between `MeshDrawer` and its 2D counterpart, `MeshDrawer2D`.\n\n... your draw code ...\n\n  generator.end()\n}\n\nSee the ~panda3d.core.MeshDrawer page in the API Reference to see a complete overview of the available methods.\n\nMany of the calls take a frame of Vec4() type. The frame is the Vec4(x,y,width,height) coordinates inside the texture. Frame of Vec4(0,0,1,1) would be the entire texture while Vec4(0,0,.5.5) would be NW quarter of the texture. Note that the Vec4 coordinates starts counting from the bottom left, counting to the top right. If you had a 16x16 plate, the 15th field in the 11th row would be: Vec4(14.0/16,5.0/16,1.0/16,1.0/16.)\n\nThis is use full to create palletized textures and show only small parts of the texture per billboard. For instance you might have a images of the entire forest in one texture and only render the trees you want by specifying their UV cords.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_460",
    "parent": "processed_documents/context_documents/97490678_7fe92637_meshdrawer.json",
    "chunk_number": 6352
  }
}