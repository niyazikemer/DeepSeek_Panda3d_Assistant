{
  "content": "This chunk appears to be part of the `MainWindow` class in a 3D modeling application's UI codebase, specifically handling curve editing functionality within a viewport-based interface. The function manages state transitions between different modes (create/curve/edit) and validates whether a curve has been selected before initiating edit operations. It is likely triggered by menu item interactions related to curve manipulation, with the `editCurveMenuItem` and `createCurveMenuItem` playing key roles in mode management.\n\ndef onEditCurve(self, e):\n        \"\"\"Function to invoke curve editing and translate global information to local information. Need to check previous mode\"\"\"\n        if self.editor.mode == self.editor.EDIT_CURVE_MODE:\n            self.editCurveMenuItem.Check(False)\n            self.editor.curveEditor.onBaseMode()\n        else:\n            if self.editor.mode == self.editor.CREATE_CURVE_MODE:\n                self.editor.curveEditor.onBaseMode()\n                self.editCurveMenuItem.Check(True)\n                self.createCurveMenuItem.Check(False)\n                self.onEditCurve(None)\n            else:\n                if ShowBaseGlobal.direct.selected.last is None:\n                    dlg = wx.MessageDialog(None, 'Please select a curve first.', 'NOTICE', wx.OK)\n                    dlg.ShowModal()\n                    dlg.Destroy()\n                    self.editCurveMenuItem.Check(False)\n                if ShowBaseGlobal.direct.selected.last is not None:",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_29",
    "parent": "processed_documents/context_documents/36d4e032_LevelEditorUIBase.json",
    "chunk_number": 439
  }
}