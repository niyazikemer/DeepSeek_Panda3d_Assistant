{
  "content": "This code chunk is part of the initialization method (`__init__`) of a class called `DirectGrid`, which appears to be a grid implementation for 3D graphics using Panda3D library. The chunk specifically initializes various visual elements of the grid, including major and center lines with distinct colors and thicknesses, as well as a snap marker sphere used for highlighting points on the grid during snapping operations. It also sets initial values for grid characteristics such as XYZ/HPR snapping flags, grid size, spacing, and angle snapping parameters, before calling `enable` to activate the grid with specified parent arguments.\n\nself.majorLines = LineNodePath(self.lines)\n        self.majorLines.lineNode.setName('majorLines')\n        self.majorLines.setColor(VBase4(0.3, 0.55, 1, 1))\n        self.majorLines.setThickness(5)\n\n        self.centerLines = LineNodePath(self.lines)\n        self.centerLines.lineNode.setName('centerLines')\n        self.centerLines.setColor(VBase4(1, 0, 0, 0))\n        self.centerLines.setThickness(3)\n\n        # Small marker to hilight snap-to-grid point\n        self.snapMarker = ShowBaseGlobal.loader.loadModel('models/misc/sphere')\n        self.snapMarker.node().setName('gridSnapMarker')\n        self.snapMarker.reparentTo(self)\n        self.snapMarker.setColor(1, 0, 0, 1)\n        self.snapMarker.setScale(0.3)\n        self.snapPos = Point3(0)\n\n        # Initialize Grid characteristics\n        self.fXyzSnap = 1\n        self.fHprSnap = 1\n        self.gridSize = gridSize\n        self.gridSpacing = gridSpacing\n        self.snapAngle = 15.0\n        self.enable(parent = parent)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_183",
    "parent": "processed_documents/context_documents/fba96cb7_DirectGrid.json",
    "chunk_number": 3356
  }
}