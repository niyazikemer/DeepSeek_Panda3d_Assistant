{
  "content": "This document discusses the concept of alpha testing in computer graphics rendering, explaining its purpose and behavior when applied to nodes with textures. The chunk specifically focuses on how alpha testing is used to control rendering based on the alpha value of a texture, differentiating it from alpha transparency effects, and includes an example implementation in Python.\n\nAlpha Testing\n\nThe alpha test attribute governs whether or not a part of a node will be rendered based on the alpha value of its texture. This is particularly useful for rendering complex geometry into the depth or stencil buffer with a textured card rather than explicitly creating the shapes. This test is different from rendering with respect to alpha transparency value. If you set an alpha test attribute on a node which is rendering into the color buffer, you may be surprised by the result. All pixels that pass the alpha test will be rendered just as if no test had been performed, including their appropriate transparency and pixels that fail the test will not be rendered at all.\n\nRemember to set your attribute's priority to override any other alpha test attributes inherited from higher in the scene graph. In the following example, we create an attribute that would cause objects to render only if their alpha value is below one quarter intensity.\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_671",
    "parent": "processed_documents/context_documents/85b935fd_a1fa5974_alpha-testing.json",
    "chunk_number": 7585
  }
}