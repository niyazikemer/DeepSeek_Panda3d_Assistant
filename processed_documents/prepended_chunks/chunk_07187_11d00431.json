{
  "content": "The chunk appears in the section explaining how to integrate new geometry into the scene graph. It follows the creation of a `Geom` object and its primitive addition. The context details the requirements for naming a `GeomNode`, its capacity to hold multiple `Geoms`, each with primitives of a consistent type, ensuring compatibility and proper rendering.\n\n**Context:**  \nWithin the process of integrating new geometry into the scene graph after creating `Geom` objects and adding their primitives, this section explains the naming convention and structural capabilities of `GeomNode`, emphasizing the need for consistency in primitive types across multiple geometries within a node.\n\nThe GeomNode constructor requires a name, which is the name of the node and will be visible in the scene graph. It can be any name you like that means something to you.\n\nIn the above example, we have created only one Geom, and added only one GeomPrimitive to the Geom. This is the most common case when you are creating geometry at runtime, although in fact a GeomNode may include multiple Geoms, and each Geom may include multiple GeomPrimitives. (However, all of the primitives added to a Geom must have the same fundamental primitive type: triangles, lines, or points. You can add GeomTriangles and GeomTristrips to the same Geom, or you can add GeomLines and GeomLinestrips, but if you have GeomTriangles and GeomLinestrips, you must use two different Geoms.)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_601",
    "parent": "processed_documents/context_documents/e898ffb8_1faeee63_putting-geometry-in-scene-graph.json",
    "chunk_number": 7187
  }
}