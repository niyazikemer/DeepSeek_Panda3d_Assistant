{
  "content": "This chunk introduces Bullet Softbody Tetrahedron, which is a type of soft body simulation using tetrahedral meshes. It explains that tetrahedral meshes are volume-based, filling out a 3D space unlike surface-only meshes, and sets up the context for how these can be created and utilized in simulations. The focus is on understanding the basic structure and setup requirements for tetrahedral soft bodies, including the complexity involved compared to other soft body types and the need for specific data formats or tools (like Tetgen) to generate the required mesh data.\n\nBullet Softbody Tetrahedron\n\nThe last kind of soft bodies are those made up from tetrahedral meshes. A tetrahedral mesh is a mesh where the single elements are not triangles, but tetrahedrons, that is \"pyramids\" with four corners. Tetrahedral meshes are sometimes called \"volume\" meshes, since they fill out a volume and not just the surface of the mesh.\n\nSetup\n\nSetup for tetrahedral soft bodies is more complicated than the previously shown soft body types, since we first have to get the data which describes a tetrahedral mesh. Common 3D modelling packages usually don't support for modelling tetrahedral meshes.\n\nIf we somehow have assumed the tetrahedral data we can set up the soft body directly from the vertices and indices. Let's assume we have the vertices as a list of triples (three times a floating point coordinate), and we have the tetrahedron indices as a list of four-tuples (four indices make up one tetrahedron).\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_596",
    "parent": "processed_documents/context_documents/44951a7f_af197370_softbody-tetrahedron.json",
    "chunk_number": 7153
  }
}