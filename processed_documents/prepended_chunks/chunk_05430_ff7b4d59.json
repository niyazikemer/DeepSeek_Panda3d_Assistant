{
  "content": "The code chunk defines several methods for managing and retrieving distributed objects, including accessing owner-specific object views, performing callbacks on owner-view objects, switching between different object tables (owner view vs. regular), and searching through all distributed objects to find those matching a specific string pattern.\n\ndef getOwnerView(self, doId):\n        assert self.hasOwnerView()\n        return self.doId2ownerView.get(doId)\n\n    def callbackWithOwnerView(self, doId, callback):\n        assert self.hasOwnerView()\n        do = self.doId2ownerView.get(doId)\n        if do is not None:\n            callback(do)\n        else:\n            pass #relatedObjectMgr(doId, allCallback=callback)\n\n    def getDoTable(self, ownerView):\n        if ownerView:\n            assert self.hasOwnerView()\n            return self.doId2ownerView\n        else:\n            return self.doId2do\n\n    def doFind(self, str):\n        \"\"\"\n        Returns list of distributed objects with matching str in value.\n        \"\"\"\n        for value in self.doId2do.values():\n            if repr(value).find(str) >= 0:\n                return value",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_314",
    "parent": "processed_documents/context_documents/e16b9605_DoCollectionManager.json",
    "chunk_number": 5430
  }
}