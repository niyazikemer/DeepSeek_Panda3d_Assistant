{
  "content": "The chunk defines a function `_model_to_bam` which converts model files into Panda3D's optimized binary format (.bam). This function uses Panda3D's Loader to load models from various formats, processes them, and writes them out as .bam files. It is intended to be used during the build process to optimize 3D assets for faster loading and reduced file size in the final application.\n\nTo integrate this into the document:\n\n```python\nclass bdist_apps(distutils.command.bdist.bdist):\n    # ... existing code ...\n\n    def _model_to_bam(self, srcpath, dstpath):\n        \"\"\"Converts a model file to Panda3D's binary BAM format for optimization.\"\"\"\n        if dstpath.endswith('.gz') or dstpath.endswith('.pz'):\n            dstpath = dstpath[:-3]\n        dstpath += '.bam'\n\n        src_fn = p3d.Filename.from_os_specific(srcpath)\n        dst_fn = p3d.Filename.from_os_specific(dstpath)\n        dst_fn.set_binary()\n\n        _register_python_loaders()\n\n        loader = p3d.Loader.get_global_ptr()\n        options = p3d.LoaderOptions(p3d.LoaderOptions.LF_report_errors |\n                                    p3d.LoaderOptions.LF_no_ram_cache)\n        node = loader.load_sync(src_fn, options)\n        if not node:\n            raise IOError(f'Failed to load model: {srcpath}')\n\n        stream = p3d.OFileStream()\n        if not dst_fn.open_write(stream):\n            raise IOError(f'Failed to open .bam file for writing: {dstpath}')\n```\n\nThis function is added as a method within the `bdist_apps` class, allowing it to be called during the build process to optimize model files.\n\ndef _model_to_bam(_build_cmd, srcpath, dstpath):\n    if dstpath.endswith('.gz') or dstpath.endswith('.pz'):\n        dstpath = dstpath[:-3]\n    dstpath = dstpath + '.bam'\n\n    src_fn = p3d.Filename.from_os_specific(srcpath)\n    dst_fn = p3d.Filename.from_os_specific(dstpath)\n    dst_fn.set_binary()\n\n    _register_python_loaders()\n\n    loader = p3d.Loader.get_global_ptr()\n    options = p3d.LoaderOptions(p3d.LoaderOptions.LF_report_errors |\n                                p3d.LoaderOptions.LF_no_ram_cache)\n    node = loader.load_sync(src_fn, options)\n    if not node:\n        raise IOError('Failed to load model: %s' % (srcpath))\n\n    stream = p3d.OFileStream()\n    if not dst_fn.open_write(stream):\n        raise IOError('Failed to open .bam file for writing: %s' % (dstpath))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_132",
    "parent": "processed_documents/context_documents/871bb042_commands.json",
    "chunk_number": 1921
  }
}