{
  "content": "The chunk is part of a function (likely `handleScale`) that manages node scaling based on direct mouse manipulation. The code adjusts the selected object's scale relative to its position, using hit points to calculate scaling factors while avoiding division-by-zero errors. It handles both initialization and subsequent scaling operations, ensuring smooth and stable scaling behavior during user interaction.\n\nif self.fScaleInit1:\n                    # First time through just record hit point\n                    self.fScaleInit1 = 0\n                    self.prevHitScale.assign(self.hitPtScale)\n                    self.origScale = direct.widget.getScale()\n                else:\n                    widgetPos = direct.widget.getPos()\n                    d0 = (self.prevHitScale - widgetPos).length()\n                    if d0 == 0: #make sure we don't divide by zero\n                        d0 = 0.001\n                    d1 = (self.hitPtScale - widgetPos).length()\n                    if d1 == 0:\n                        d1 = 0.001  #make sure we don't set scale to zero\n                    currScale = self.origScale\n                    currScale = currScale * d1/d0\n                    direct.widget.setScale(currScale)\n                return\n        # Scale the selected node based upon up down mouse motion\n        # Mouse motion from edge to edge results in a factor of 4 scaling",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_179",
    "parent": "processed_documents/context_documents/4f678cc8_DirectManipulation.json",
    "chunk_number": 3251
  }
}