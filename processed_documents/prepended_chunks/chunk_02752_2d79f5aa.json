{
  "content": "The chunk defines a `LerpScaleInterval` class, which inherits from `LerpNodePathInterval`. This class handles time-based scaling of node paths in 3D graphics applications. It allows specifying start and end scales, with optional functors for dynamic parameter evaluation, making it part of a suite of classes for function evaluation over intervals.\n\nclass LerpScaleInterval(LerpNodePathInterval):\n    def __init__(self, nodePath, duration, scale, startScale = None,\n                 other = None, blendType = 'noBlend',\n                 bakeInStart = 1, fluid = 0, name = None):\n        LerpNodePathInterval.__init__(self, name, duration, blendType,\n                                      bakeInStart, fluid, nodePath, other)\n        # Check for functors in the input parameters.\n        self.paramSetup = self.anyCallable(scale, startScale)\n        if self.paramSetup:\n            self.endScale = scale\n            self.startScale = startScale\n            self.inPython = 1\n        else:\n            self.setEndScale(scale)\n            if startScale is not None:\n                self.setStartScale(startScale)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_156",
    "parent": "processed_documents/context_documents/d377e678_LerpInterval.json",
    "chunk_number": 2752
  }
}