{
  "content": "This code chunk defines a utility function `relHpr()` within a collection of Python functions focused on 3D transformations, matrix operations, vector math, and quaternion interpolation. The function calculates the relative heading (h), pitch (p), and roll (r) orientation adjustments needed to transform a node's coordinate system relative to a base reference frame in a 3D space. It uses matrix composition and decomposition to compute the desired rotational transformation for applying to a nodePath object, which is commonly used in 3D graphics or game development contexts.\n\ndef relHpr(nodePath, base, h, p, r):\n    # Compute nodePath2newNodePath relative to base coordinate system\n    # nodePath2base\n    mNodePath2Base = nodePath.getMat(base)\n    # delta scale, orientation, and position matrix\n    mBase2NewBase = Mat4(Mat4.identMat()) # [gjeon] fixed to give required argument\n    composeMatrix(mBase2NewBase, UNIT_VEC, VBase3(h, p, r), ZERO_VEC,\n                  CSDefault)\n    # base2nodePath\n    mBase2NodePath = base.getMat(nodePath)\n    # nodePath2 Parent\n    mNodePath2Parent = nodePath.getMat()\n    # Compose the result\n    resultMat = mNodePath2Base * mBase2NewBase\n    resultMat = resultMat * mBase2NodePath\n    resultMat = resultMat * mNodePath2Parent\n    # Extract and apply the hpr\n    hpr = Vec3(0)\n    decomposeMatrix(resultMat, VBase3(), hpr, VBase3(),\n                    CSDefault)\n    nodePath.setHpr(hpr)\n\n# Quaternion interpolation",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_187",
    "parent": "processed_documents/context_documents/e315e4bf_DirectGeometry.json",
    "chunk_number": 3486
  }
}