{
  "content": "This function calculates the closest angle to rotate from a source to destination angle by adjusting the direction if necessary, ensuring the shortest path when rotating around a circle (e.g., handling angles that wrap around 360 degrees).\n\ndef closestDestAngle2(src, dest):\n    # The function above didn't seem to do what I wanted. So I hacked\n    # this one together. I can't really say I understand it. It's more\n    # from impirical observation... GRW\n    diff = src - dest\n    if diff > 180:\n        # if the difference is greater that 180 it's shorter to go the other way\n        return dest - 360\n    elif diff < -180:\n        # or perhaps the OTHER other way...\n        return dest + 360\n    else:\n        # otherwise just go to the original destination\n        return dest",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_263",
    "parent": "processed_documents/context_documents/34ee3f4f_PythonUtil.json",
    "chunk_number": 4619
  }
}