{
  "content": "The chunk provides code examples in Python and C++ demonstrating how to load a model and apply a custom material, followed by an explanation of various material properties such as ambient color, shininess, and specular highlights. This content is situated within a comprehensive guide on working with materials in Panda3D, including creating, inspecting, replacing, and understanding the properties of materials used for 3D models.\n\nmyNode = loader.loadModel(\"panda\") # Load the model to apply the material to\nmyNode.setMaterial(myMaterial) # Apply the material to this nodePath\n\ncpp\n\nPT(Material) mat = new Material;\nmat->set_shininess(5.0); // Make this material shiny\nmat->set_ambient(LColor(0, 0, 1, 1)); // Make this material blue\n\nNodePath model = window->load_model(window->get_render(), \"panda\"); // Load the model to apply the material to\nmodel.set_material(mat); // Apply the material to this nodePath\n\nMaterial Properties\n\nThe following table details the properties available in a material, its effects as well as the relevant setter method. Most of these properties have additional get and clear methods as well.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_549",
    "parent": "processed_documents/context_documents/d6e133e8_bf37414e_materials.json",
    "chunk_number": 6916
  }
}