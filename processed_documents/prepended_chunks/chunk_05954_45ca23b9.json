{
  "content": "The chunk is situated within the section titled \"Compiling Panda3D with threading support,\" which discusses how to enable, disable, or modify threading behavior during the compilation process of Panda3D. This includes details about defining HAVE_THREADS and SIMPLE_THREADS for different threading models and provides guidance on debugging threading-related issues by enabling debug tools.\n\n```plaintext\nThe chunk is part of the \"Compiling Panda3D with threading support\" section, which explains how to configure threading options during compilation, including disabling threading or using a simple model, and offers tips for debugging threading bugs.\n```\n\nNote that you will have to define both HAVE_THREADS and SIMPLE_THREADS at the same time to enable the simple interface, or you will not have threading.\n\nThe public builds enable true threading by default, so you will not need to build Panda3D yourself if you want to take advantage of true threading.\n\nIf you wish to disable threading, you can pass the option --override HAVE_THREADS=UNDEF to makepanda.py. If you wish to use the simple threading model, you may pass --override SIMPLE_THREADS=1 instead.\n\nDebugging Threading Bugs\n\nDue to the nature of threading-related bugs, it can be very difficult to track down the source of a problem if a piece of code is crashing due to a threading problem. It may be useful to recompile Panda3D with the DEBUG_THREADS=1 option enabled. This will enable various debug checking tools that will alert you of incorrect use of threading, rather than crashing. However, there is a significant performance cost associated with this option.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_378",
    "parent": "processed_documents/context_documents/e1cb27da_d50d13d2_threading.json",
    "chunk_number": 5954
  }
}