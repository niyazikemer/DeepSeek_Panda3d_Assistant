{
  "content": "This code chunk is part of a function responsible for creating an AND mask for icons when the image has an alpha channel and the bits per pixel (bpp) is 8 or lower. The AND mask is used to define transparent areas in icon images, aligning the mask data to a 4-byte boundary for proper memory alignment. If the image doesn't have an alpha channel or if bpp exceeds 8, it writes zeros for the AND mask area.\n\nThe chunk appears within a method that handles writing icon files (likely `writeICO` or similar), ensuring transparency is correctly represented in lower-color-depth icons.\n\n# Create an AND mask, aligned to 4-byte boundary\n        if image.hasAlpha() and bpp <= 8:\n            rowalign = b'\\0' * (-((size + 7) >> 3) & 3)\n            for y in range(size):\n                mask = 0\n                num_bits = 7\n                for x in range(size):\n                    a = image.get_alpha_val(x, size - y - 1)\n                    if a <= 1:\n                        mask |= (1 << num_bits)\n                    num_bits -= 1\n                    if num_bits < 0:\n                        fp.write(struct.pack('<B', mask))\n                        mask = 0\n                        num_bits = 7\n                if num_bits < 7:\n                    fp.write(struct.pack('<B', mask))\n                fp.write(rowalign)\n        else:\n            andsize = (size + 7) >> 3\n            if andsize % 4 != 0:\n                andsize += 4 - (andsize % 4)\n            fp.write(b'\\x00' * (andsize * size))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_135",
    "parent": "processed_documents/context_documents/7b38a77d_icon.json",
    "chunk_number": 2193
  }
}