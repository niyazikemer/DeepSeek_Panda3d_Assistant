{
  "content": "The provided code chunk contains two methods (`updateObjectColor` and `updateObjectModel`) from an object editor class. These methods are used to modify object properties in real-time within a 3D scene: \n\n- `updateObjectColor` updates the color (RGBA values) of an object and its children while managing transparency.\n- `updateObjectModel` replaces an object's current model with a new one, handling deselection of other objects.\n\nThe methods integrate closely with node path management, selection controls, and scene graph updates to maintain visual consistency across the editor interface.\n\ndef updateObjectColor(self, r, g, b, a, np=None):\n        if np is None:\n            np = self.currNodePath\n\n        obj = self.findObjectByNodePath(np)\n        if not obj:\n            return\n        obj[OG.OBJ_RGBA] = (r,g,b,a)\n        for child in np.getChildren():\n            if not child.hasTag('OBJRoot') and\\\n               not child.hasTag('_le_sys') and\\\n               child.getName() != 'bboxLines':\n                child.setTransparency(1)\n                child.setColorScale(r, g, b, a)\n        self.editor.fNeedToSave = True\n\n    def updateObjectModel(self, model, obj, fSelectObject=True):\n        \"\"\" replace object's model \"\"\"\n        if obj[OG.OBJ_MODEL] != model:\n            base.direct.deselectAllCB()\n\n            objNP = obj[OG.OBJ_NP]\n            objDef = obj[OG.OBJ_DEF]\n            objRGBA = obj[OG.OBJ_RGBA]\n            uid = obj[OG.OBJ_UID]",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_34",
    "parent": "processed_documents/context_documents/a86148df_ObjectMgrBase.json",
    "chunk_number": 510
  }
}