{
  "content": "The provided chunk explains how to configure the `WM_border_color` texture wrap mode in Panda3D using both Python and C++ code. This section follows explanations of other wrap modes like `WM_repeat`, `WM_clamp`, and `WM_mirror`, and precedes discussions on setting different wrap modes for u and v directions, as well as common wrap mode errors. The chunk details how to set the border color, noting hardware limitations for non-standard colors, and suggests using the texture's background color for seamless results. It also mentions fallback behavior when graphics drivers do not support `WM_`border_color.\n\nWM_border_color\n\npython\n\ntexture.setWrapU(Texture.WM_border_color)\ntexture.setWrapV(Texture.WM_border_color)\ntexture.setBorderColor((0.4, 0.5, 1, 1))\n\ncpp\n\ntexture->set_wrap_u(Texture::WM_border_color);\ntexture->set_wrap_v(Texture::WM_border_color);\ntexture->set_border_color(LColor(0.4, 0.5, 1, 1));\n\nThe above blue color was chosen for illustration purposes; you can use any color you like for the border color. (However, some hardware may not efficiently support a border color other than opaque white, transparent white, opaque black and transparent black.) Normally, you would use the background color of the texture as the border color, like this:\n\npython\n\ntexture.setWrapU(Texture.WMBorderColor)\ntexture.setWrapV(Texture.WMBorderColor)\n\ncpp\n\ntexture->set_wrap_u(Texture::WM_border_color);\ntexture->set_wrap_v(Texture::WM_border_color);\ntexture->set_border_color(LColor(1, 1, 1, 1));",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_668",
    "parent": "processed_documents/context_documents/46006720_0b25daa5_texture-wrap-modes.json",
    "chunk_number": 7571
  }
}