{
  "content": "This chunk is part of a method in a class for managing particle systems. The code handles writing sprite animation configurations to a particle renderer. It cleans up existing animations and adds new ones based on user input from UI widgets, supporting both texture-based and model-node-based animations. This functionality is essential for customizing the visual appearance of particles over time.\n\n```python\ndef writeSpriteRendererAnimations(self):\n    \"\"\"\n    Configure sprite renderer animations by removing old animations and adding \n    new ones based on specified texture or model node sources.\n    \"\"\"\n    ren  = self.particles.getRenderer()\n\n    for x in range(ren.getNumAnims()):  # Remove existing animations\n        ren.removeAnimation(0)\n\n    for x in range(len(self.rendererSpriteAnimationWidgetList)):  # Add new animations based on UI inputs\n        widget  = self.rendererSpriteAnimationWidgetList[x]\n        if widget and widget.valid:\n            if widget.animSourceType == SpriteAnim.STTexture:  # Handle texture-based animation\n                texSource  = self.getVariable('Sprite Renderer', repr(x) + ' Anim Texture').get()\n                ren.addTextureFromFile(texSource)\n            else:  # Handle model node-based animation\n                modelSource = self.getVariable('Sprite Renderer', repr(x) + ' Anim Model').get()\n                nodeSource  = self.getVariable('Sprite Renderer', repr(x) + ' Anim Node').get()\n                ren.addTextureFromNode(modelSource, nodeSource)\n```\n\n# set animation info from panel into renderer\n    def writeSpriteRendererAnimations(self):\n        ren = self.particles.getRenderer()\n\n        for x in range(ren.getNumAnims()):\n            ren.removeAnimation(0)\n\n        for x in range(len(self.rendererSpriteAnimationWidgetList)):\n            widget = self.rendererSpriteAnimationWidgetList[x]\n            if widget and widget.valid:\n                if widget.animSourceType == SpriteAnim.STTexture:\n                    texSource = self.getVariable('Sprite Renderer', repr(x) + ' Anim Texture').get()\n                    ren.addTextureFromFile(texSource)\n                else:\n                    modelSource = self.getVariable('Sprite Renderer', repr(x) + ' Anim Model').get()\n                    nodeSource = self.getVariable('Sprite Renderer', repr(x) + ' Anim Node').get()\n                    ren.addTextureFromNode(modelSource, nodeSource)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_56",
    "parent": "processed_documents/context_documents/44a6f4d1_ParticlePanel.json",
    "chunk_number": 877
  }
}