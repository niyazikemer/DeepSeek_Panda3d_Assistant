{
  "content": "The code defines a `ParticleEffect` class that manages particle effects in a 3D graphics engine. The chunk is part of the `writeEmitterParams()` method, which writes out the configuration parameters for the particle system's emitter component to a file. Specifically, the chunk handles writing emitter type settings (e.g., explicit vs radiate vs custom), amplitude controls, and offset forces.\n\nfile.write('# Emitter parameters\\n')\n        emissionType = self.emitter.getEmissionType()\n        eType = \"ETEXPLICIT\"\n        if emissionType == BaseParticleEmitter.ETEXPLICIT:\n            eType = \"ETEXPLICIT\"\n        elif emissionType == BaseParticleEmitter.ETRADIATE:\n            eType = \"ETRADIATE\"\n        elif emissionType == BaseParticleEmitter.ETCUSTOM:\n            eType = \"ETCUSTOM\"\n        file.write(targ + '.emitter.setEmissionType(BaseParticleEmitter.' + eType + ')\\n')\n        file.write(targ + '.emitter.setAmplitude(%.4f)\\n' % self.emitter.getAmplitude())\n        file.write(targ + '.emitter.setAmplitudeSpread(%.4f)\\n' % self.emitter.getAmplitudeSpread())\n        oForce = self.emitter.getOffsetForce()\n        file.write((targ + '.emitter.setOffsetForce(Vec3(%.4f, %.4f, %.4f))\\n' % (oForce[0], oForce[1], oForce[2])))\n        oForce = self.emitter.getExplicitLaunchVector()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_69",
    "parent": "processed_documents/context_documents/b3935c67_Particles.json",
    "chunk_number": 1292
  }
}