{
  "content": "The chunk about loaderOptions is inserted into the `loadModel` method's docstring within the `Loader` class. This addition provides detailed information about how models are loaded, including cache handling and instance options, guiding users to the `LoaderOptions` class for further control.\n\n```python\ndef loadModel(self, modelPath, noCache=False, allowInstance=True):\n    \"\"\"\n    Loads a 3D model from the indicated path.\n    \n    loaderOptions may optionally be passed in to control details about the way \n    the model is searched and loaded. See the `LoaderOptions` class for more.\n\n    The default is to look in the ModelPool (RAM) cache first, returning a copy if found. \n    If the bam cache is enabled (via config variable), it will be consulted next. \n    If both caches fail, the file is loaded from disk. With noCache=True, neither \n    cache is used.\n\n    allowInstance controls whether a shared instance is returned from ModelPool. \n    By default, this is False to ensure each load returns a unique copy.\n    \n    Returns: NodePath of the model\n    \"\"\"\n    # Method implementation...\n```\n\nloaderOptions may optionally be passed in to control details\n        about the way the model is searched and loaded.  See the\n        `.LoaderOptions` class for more.\n\n        The default is to look in the `.ModelPool` (RAM) cache first,\n        and return a copy from that if the model can be found there.\n        If the bam cache is enabled (via the `model-cache-dir` config\n        variable), then that will be consulted next, and if both\n        caches fail, the file will be loaded from disk.  If noCache is\n        True, then neither cache will be consulted or updated.\n\n        If allowInstance is True, a shared instance may be returned\n        from the `.ModelPool`.  This is dangerous, since it is easy to\n        accidentally modify the shared instance, and invalidate future\n        load attempts of the same model.  Normally, you should leave\n        allowInstance set to False, which will always return a unique\n        copy.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_250",
    "parent": "processed_documents/context_documents/7b86925a_Loader.json",
    "chunk_number": 4373
  }
}