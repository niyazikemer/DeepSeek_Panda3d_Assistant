{
  "content": "\"\"\"\nThe chunk provides an introduction to basic performance diagnostics in Panda3D, explaining the use of tools like pstats and the frame-rate meter. It discusses how to enable the frame-rate meter through configuration or runtime settings in both Python and C++, emphasizing its role as a lightweight utility for immediate feedback on program efficiency.\n\"\"\"\n\nBasic Performance Diagnostics\n\nIntroductory Performance Diagnostics\n\nIn Panda3D, the \"big gun\" of performance analysis is called pstats. This program gives you real-time diagnostic analysis of a running Panda3D virtual world broken down into hundreds of different categories.\n\nBut sometimes, when you've just encountered a problem, you don't want that much information. Sometimes, you just want a simple question answered, like \"how many meshes do I have,\" or \"is this a fill-rate problem?\" For simple questions like that, there are lots of things you can do to get a quick-and-dirty answer.\n\nThe Frame-Rate Meter\n\nThe frame-rate meter doesn't tell you why your program is running slow, but it does have one important purpose: it's a lightweight and unobtrusive utility that you can leave on throughout the entire development process. This is valuable in that it gives you immediate feedback when you do something inefficient. To turn on the frame-rate meter, put this in your config file:",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_550",
    "parent": "processed_documents/context_documents/1b8754eb_00560618_basic-performance-diagnostics.json",
    "chunk_number": 6923
  }
}