{
  "content": "This chunk provides a code example for loading a model in C++ using Panda3D, following the discussion of handling OS-specific paths when working with standard library functions versus using Panda's API.\n\n// Now load the model:\nwindow->load_model(framework.get_models(), mydir + \"/models/mymodel.egg\");\n\nYou need to keep in mind that standard library functions provided by the system or the programming language runtime work with OS-specific paths. So do not forget to convert your Panda paths to OS-specific paths when using these built-in functions. In cases where Panda's API offers equivalent functions through the .Filename or .VirtualFileSystem class, however, it is recommended to use those instead, as they will natively understand Panda Filenames.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_638",
    "parent": "processed_documents/context_documents/ff34a7e6_33cbbc72_filename-syntax.json",
    "chunk_number": 7408
  }
}