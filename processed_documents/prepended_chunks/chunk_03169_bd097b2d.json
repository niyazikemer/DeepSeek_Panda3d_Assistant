{
  "content": "The chunk contains code related to copying animation control dictionaries from one actor instance to another, asserting that certain properties match between instances, and defining a method for creating an ActorInterval. This is situated within a larger document detailing an Actor class with various animation and level-of-detail management functionalities.\n\nContext: The code chunk is part of the implementation for managing animations and levels of detail in a 3D actor class, specifically handling deep copying of animation controls across different levels of detail (LODs) and defining a method to create animation intervals.\n\nassert other.mergeLODBundles == self.mergeLODBundles\n\n        for lodName in other.__animControlDict:\n            self.__animControlDict[lodName] = {}\n            for partName in other.__animControlDict[lodName]:\n                self.__animControlDict[lodName][partName] = {}\n                for animName in other.__animControlDict[lodName][partName]:\n                    anim = other.__animControlDict[lodName][partName][animName]\n                    anim = anim.makeCopy()\n                    self.__animControlDict[lodName][partName][animName] = anim\n\n\n    def actorInterval(self, *args, **kw):\n        from direct.interval import ActorInterval\n        return ActorInterval.ActorInterval(self, *args, **kw)\n\n    def getAnimBlends(self, animName=None, partName=None, lodName=None):\n        \"\"\"Returns a list of the form::",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3169
  }
}