{
  "content": "\"\"\"\nThis chunk introduces the concept of subclassing between Python and C++, emphasizing the challenges when creating Python classes that inherit from C++ classes. It sets up the theoretical foundation for understanding the limitations and approaches discussed later in the document.\n\"\"\"\n\nSubclassing\n\nIntroduction\n\nBoth Python and C++, being object-oriented programming languages, take advantage of the concept known as \"Inheritance\", to allow for a class to subclass one or more other classes. This allows for the creation of a sub-class (or descendent class) that is said to \"inherit\" all the attributes of the super class (or ancestor class), usually with the purpose of expanding upon them.\n\nSubclassing pure-python classes from python or C++ classes from C++ is fairly straightforward and there's plenty of literature on the subject. The Wikipedia article on inheritance is a good starting point before proceeding to the language-specific documentation.\n\nSpecial care however must be taken when creating a Python class that subclasses from a C++ class, as there are limitations to it.\n\nThe Theory",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_628",
    "parent": "processed_documents/context_documents/0cbeff75_8d61bbfe_subclassing.json",
    "chunk_number": 7333
  }
}