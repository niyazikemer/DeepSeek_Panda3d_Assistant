{
  "content": "The provided code snippet demonstrates how to load a Cg shader and apply it to a model in Panda3D, followed by an explanation of shader application within the scene graph, including propagation and priority management.\n\ncpp\n\nPT(Shader) shader = Shader::load(Shader.SL_Cg, \"myvertexshader.sha\", \"myfragmentshader.sha\", \"mygeometryshader.sha\");\nmodel.set_shader(shader);\n\nApplying the Shader\n\nShaders can be applied to any part of the scene graph. The call to .NodePath.set_shader() causes the model to be rendered with the shader passed to it as a parameter. Shaders propagate down the scene graph, like any other render attribute; the node and everything beneath it will use the shader.\n\nAs with other state changes, it is possible to pass a second priority parameter to indicate that the shader specified at that node should override shaders specified on a higher or lower node that have a lower priority value.\n\nFetching Data from the Panda3D Runtime",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_462",
    "parent": "processed_documents/context_documents/8ddfa146_94b58d23_shader-basics.json",
    "chunk_number": 6366
  }
}