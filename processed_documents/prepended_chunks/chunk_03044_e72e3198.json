{
  "content": "The provided code chunk is part of an Actor class constructor in a 3D graphics or animation framework. The code initializes internal data structures such as bundle handles, part dictionaries, and LOD (Level of Detail) configurations. It sets default values for subparts completion status, scene graph nodes, and centers. If no other object is provided, it creates a base hierarchy with a root PandaNode named 'actor' and assigns it to the NodePath, preparing the geometric node structure for further operations. This initialization is essential for managing animations, joints, and parts within the Actor class.\n\n# create data structures\n        self.__commonBundleHandles = {}\n        self.__partBundleDict = {}\n        self.__subpartDict = {}\n        self.__sortedLODNames = []\n        self.__animControlDict = {}\n\n        self.__subpartsComplete = False\n\n        self.__LODNode = None\n        self.__LODAnimation = None\n        self.__LODCenter = Point3(0, 0, 0)\n        self.switches = None\n\n        if other is None:\n            # act like a normal constructor\n\n            # create base hierarchy\n            self.gotName = 0\n\n            if flattenable:\n                # If we want a flattenable Actor, don't create all\n                # those ModelNodes, and the GeomNode is the same as\n                # the root.\n                root = PandaNode('actor')\n                self.assign(NodePath(root))\n                self.setGeomNode(NodePath(self))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3044
  }
}