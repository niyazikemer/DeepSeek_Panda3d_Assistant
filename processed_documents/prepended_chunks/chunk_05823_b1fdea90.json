{
  "content": "The chunk describes how NodePath searches can utilize standard filename globbing characters (*, ?, [a-z]) to match node names partially. It also covers the use of \"@@\" at the start of a node name to indicate a stashed node and provides examples of specific path patterns. This section is part of a broader discussion on NodePath search syntax and criteria in scene graph traversal.\n\nFurthermore, a node name may itself contain standard filename globbing characters, like *, ?, and [a-z], that will be accepted as a partial match. (In fact, the '*' special name may be seen as just a special case of this.) The globbing characters may not be used with the typename matches or with tag matches, but they may be used to match a tag's value in the =tag=value syntax.\n\nThe special characters \"@@\", appearing at the beginning of a node name, indicate a stashed node. Normally, stashed nodes are not returned by a find (but see the special flags, below), but a stashed node may be found if it is explicitly named with its leading @@ characters. By extension, \"@@*\" may be used to identify any stashed node.\n\nExamples:\n\n\"room//graph\" will look for a node named \"graph\", which is a child of an unnamed node, which is a child of a node named \"room\", which is a child of the starting path.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_352",
    "parent": "processed_documents/context_documents/5c5edf9d_4e620445_searching-scene-graph.json",
    "chunk_number": 5823
  }
}