{
  "content": "This chunk of code is part of a method in the Actor class responsible for managing model data across different Levels of Detail (LODs). It merges animation and joint bundles from various LODs into a single common bundle, ensuring consistency. After merging, it invalidates existing animations by unloading them to force reloading with the updated bundle structure, maintaining correct functionality.\n\n```text\nThe code chunk is part of a method that handles model data consolidation across different Levels of Detail (LODs) in an Actor class, ensuring consistent animation and joint management.\n```\n\nif self.mergeLODBundles:\n            # Re-merge all bundles, and restore the common bundle map.\n            self.__commonBundleHandles = {}\n            for lodName, bundleDict in self.__partBundleDict.items():\n                for partName, partDef in bundleDict.items():\n                    loadedBundleHandle = self.__commonBundleHandles.get(partName, None)\n                    node = partDef.partBundleNP.node()\n                    if loadedBundleHandle:\n                        node.mergeBundles(partDef.partBundleHandle, loadedBundleHandle)\n                        partDef.partBundleHandle = loadedBundleHandle\n                    else:\n                        self.__commonBundleHandles[partName] = partDef.partBundleHandle\n\n        # Since we may have merged together some bundles, all of\n        # our anims are now suspect.  Force them to reload.\n        self.unloadAnims()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3155
  }
}