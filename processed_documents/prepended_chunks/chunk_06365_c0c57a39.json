{
  "content": "The chunk provides examples of loading both single-file and multi-file Cg shaders using the `Shader.load()` function in Python and C++. It explains how to specify the vertex, fragment, and geometry shaders separately when dealing with multiple files. Additionally, it covers setting shader inputs and priorities for managing shader attributes across the scene graph. The context is crucial for understanding how to correctly apply shaders to nodes in Panda3D, ensuring proper rendering and handling potential compilation issues on different hardware.\n\n```context\nThe chunk provides essential examples and explanations for loading and applying Cg shaders in both Python and C++ using Panda3D's Shader API. It demonstrates how to load single-file and multi-file Cg shaders, including specifying the vertex, fragment, and geometry shader paths when necessary. The context also covers setting shader inputs with priorities, which is crucial for managing complex shader attributes across the scene graph.\n```\n\nshader = Shader.load(\"myshader.sha\", Shader.SL_Cg)\nmodel.setShader(shader)\n\ncpp\n\n#include \"shader.h\"\n\nPT(Shader) shader = Shader::load(\"myshader.sha\", Shader.SL_Cg);\nmodel.set_shader(shader);\n\nLoading a multi-file Cg shader requires a different set of parameters for the ~.Shader.load() function; the first being the shader language, and the second, third and fourth being paths to the vertex, fragment and geometry shaders respectively. Here is an example:\n\npython\n\nshader = Shader.load(Shader.SL_Cg,\n                     vertex=\"myvertexshader.sha\",\n                     fragment=\"myfragmentshader.sha\",\n                     geometry=\"mygeometryshader.sha\")\nmodel.setShader(shader)\n\ncpp\n\nPT(Shader) shader = Shader::load(Shader.SL_Cg, \"myvertexshader.sha\", \"myfragmentshader.sha\", \"mygeometryshader.sha\");\nmodel.set_shader(shader);\n\nApplying the Shader",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_462",
    "parent": "processed_documents/context_documents/8ddfa146_94b58d23_shader-basics.json",
    "chunk_number": 6365
  }
}