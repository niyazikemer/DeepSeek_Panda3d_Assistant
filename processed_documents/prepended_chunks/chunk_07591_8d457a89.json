{
  "content": "The chunk discusses Panda3D's built-in capabilities for implementing normal mapping, a technique that enhances surface textures by simulating bumps through light reflection, without requiring custom shader programming. It provides an example using the \"abstractroom\" model to demonstrate how normal maps can be applied and viewed in Panda3D.\n\nContext: This section explains how to use normal mapping in Panda3D by leveraging built-in features, including an example with the abstractroom model.\n\nPanda's built-in Normal Mapping Capabilities\n\nNormally, to use fancy rendering techniques like normal mapping, you would have to write special GPU code called \"shaders.\" However, in Panda3D version 1.5.0, panda gained the ability to synthesize many shaders for you. What that means is that you can use many modern rendering techniques (including normal mapping) without having to know shader programming at all.\n\nLook in the models subdirectory for a model called \"abstractroom\". It was created in Maya, and a normal map was applied in Maya. The maya exporter was used to convert this into panda's model file format, abstractroom.egg. During the conversion process, the maya exporter noticed the normal map and included information about it in the egg file: if you examine the egg file with a text editor, you will see the references in there. You can view the model using panda's model viewer:\n\npview abstractroom.egg",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_674",
    "parent": "processed_documents/context_documents/fe2c6f57_65327729_bump-mapping.json",
    "chunk_number": 7591
  }
}