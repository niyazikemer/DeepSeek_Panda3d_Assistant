{
  "content": "The chunk describes how to enable a multithreaded render pipeline by splitting the rendering process into separate threads for App, Cull, and Draw, with App remaining on the main thread while Cull and Draw are moved to dedicated threads. This is part of a broader explanation of optimizing performance through parallel execution of these phases in a graphics rendering system.\n\nNow that we have the frame time divided into three more-or-less equal pieces, the threaded pipeline code can take effect, by splitting each phase into a different thread, so that it can run (potentially) on a different CPU, like this:\n\nNote that App remains on the first, or main thread; we have only moved Cull and Draw onto separate threads. This is important, because it means that all of your application code can continue to be single-threaded (and therefore much easier and faster to develop). Of course, there's also nothing preventing you from using additional threads in App if you wish (and if you have enough additional CPU's to make it worthwhile).",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_519",
    "parent": "processed_documents/context_documents/0cd108d5_dab687d3_multithreaded-render-pipeline.json",
    "chunk_number": 6610
  }
}