{
  "content": "To add the specified menu items to the AnimPanel class:\n\n1. **Modify the `createGui()` method** in the AnimPanel class to include the new menu structure.\n\n2. **Add cascade menus** for 'Control Status' and 'Display Units' under the existing 'AnimPanel' menu.\n\n3. **Implement command methods** `enableActorControls` and `disableActorControls` if they don't already exist.\n\nHere's the updated code:\n\n```python\nclass AnimPanel:\n    def __init__(self, actors=None):\n        # ... existing initialization code ...\n        \n    def createGui(self):\n        menuBar = base.menuBar  # Assuming base has a menu bar\n\n        # Add 'AnimPanel' menu if not already present\n        if not hasattr(menuBar, 'AnimPanel'):\n            menuBar.addmenu('AnimPanel', 'Anim Panel Operations')\n\n        # Control Status submenu\n        menuBar.addcascademenu('AnimPanel', 'Control Status',\n                              'Enable/disable actor control panels')\n        menuBar.addmenuitem('Control Status', 'command',\n                           'Enable all actor controls',\n                           label='Enable all',\n                           command=self.enableActorControls)\n        menuBar.addmenuitem('Control Status', 'command',\n                           'Disable all actor controls',\n                           label='Disable all',\n                           command=self.disableActorControls)\n\n        # Display Units submenu\n        menuBar.addcascademenu('AnimPanel', 'Display Units',\n                              'Select display units')\n        menuBar.addmenuitem('Display Units', 'command',\n                           'Display frame counts',\n                           label='Frame count',\n                           command=self.toggleFrameCountDisplay)\n        \n        # ... rest of the GUI creation code ...\n\n    def enableActorControls(self):\n        \"\"\"Enable all actor control panels.\"\"\"\n        # Implement enabling logic here\n        pass\n\n    def disableActorControls(self):\n        \"\"\"Disable all actor control panels.\"\"\"\n        # Implement disabling logic here\n        pass\n\n    def toggleFrameCountDisplay(self):\n        \"\"\"Toggle the display of frame counts.\"\"\"\n        # Implement display toggling logic here\n        pass\n\n    # ... other methods ...\n```\n\n**Note:** Replace `pass` in the method implementations with actual functionality as needed.\n\nmenuBar.addmenu('AnimPanel', 'Anim Panel Operations')\n        # Actor control status\n        menuBar.addcascademenu('AnimPanel', 'Control Status',\n                               'Enable/disable actor control panels')\n        menuBar.addmenuitem('Control Status', 'command',\n                            'Enable all actor controls',\n                            label = 'Enable all',\n                            command = self.enableActorControls)\n        menuBar.addmenuitem('Control Status', 'command',\n                            'Disable all actor controls',\n                            label = 'Disable all',\n                            command = self.disableActorControls)\n        # Frame Slider units\n        menuBar.addcascademenu('AnimPanel', 'Display Units',\n                               'Select display units')\n        menuBar.addmenuitem('Display Units', 'command',\n                            'Display frame counts', label = 'Frame count',",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_61",
    "parent": "processed_documents/context_documents/c5cd6f61_AnimPanel.json",
    "chunk_number": 979
  }
}