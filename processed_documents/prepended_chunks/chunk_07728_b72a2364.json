{
  "content": "To implement a TimeManager accessible to clients based on their zone interest:\n\n1. **Create TimeManagerAI Instance**: Use `createDistributedObject` with className 'TimeManagerAI' and specify the desired zoneId (e.g., 1) in your AI server code.\n\n2. **Client Interest Handling**: Ensure clients express interest in the relevant zone to receive updates from the TimeManager.\n\n3. **Access on Clients**: Clients access the TimeManager through a variable like `timeManager` in their Client Repository (CR) once it's created and they've shown interest.\n\nThis setup allows for efficient propagation of time-related data only to interested clients, optimizing resource usage.\n\nTime Manager\n\nA very specific distributed object which usually resides on the AI server is the .TimeManager. This object, when created is also propagated to the clients if they define interest in the specific zone the manager has been created in.\n\nClients may also simply access the time manager from the timeManager variable defined in the CR when it has been created on the AI and the client has stated interest in the zone the time manager lives in.\n\nTo make the time manager available from the AI server, create a .TimeManagerAI instance. Simply do the same as you\u2019d do to create a DirectObject.\n\nself.timeManager = self.createDistributedObject(\n    className = 'TimeManagerAI',\n    zoneId = 1)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_704",
    "parent": "processed_documents/context_documents/a1599872_179f5de1_time-manager.json",
    "chunk_number": 7728
  }
}