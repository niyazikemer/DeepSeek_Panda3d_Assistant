{
  "content": "The chunk provides details about excluding specific joints when creating a subpart within an actor. It explains how `excludeJoints` works, including glob patterns and their exclusion from animation even if included by parent joints. Additionally, it covers the overlapping parameter for error handling on shared joints. This is part of the `makeSubpart` method in an actor class, which manages joint subsets for subparts.\n\nexcludeJoints is a list of joint names that are *not* to be\n        animated by the subpart.  As in includeJoints, each name can\n        include globbing characters.  If a joint is named by\n        excludeJoints, it will not be included (and neither will any\n        of its descendents), even if a parent joint was named by\n        includeJoints.\n\n        if overlapping is False, an error is raised (in the dev build)\n        if this subpart shares joints with any other subparts.  If\n        overlapping is True, no such error is raised.\n\n        parent is the actual partName that this subpart is based\n        on.\"\"\"\n\n        assert partName not in self.__subpartDict\n\n        subpartDef = self.__subpartDict.get(parent, Actor.SubpartDef(''))\n\n        subset = PartSubset(subpartDef.subset)\n        for name in includeJoints:\n            subset.addIncludeJoint(GlobPattern(name))\n        for name in excludeJoints:\n            subset.addExcludeJoint(GlobPattern(name))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3144
  }
}