{
  "content": "The chunk describes the initial steps for compiling a C++ file using GCC or Clang on non-Windows platforms like Linux and macOS, focusing on creating an object file with specific compiler flags and include paths pointing to Panda3D's header files.\n\nCompiling your Program with GCC or Clang\n\nOn platforms other than Windows, we use the GNU compiler or a compatible alternative like Clang. Most Linux distributions ship with GCC out of the box; some provide an easily installable package such as build-essential on Ubuntu or the XCode Command-Line Tools on macOS. To obtain the latter, you may need to register for an account on the Apple developer site.\n\nHaving these two components, we can proceed to compile. The first step is to create an .o file from our .cxx file. We need to specify the location of the Panda3D include files. Please change the paths in these commands to the appropiate locations. If using clang, use clang++ instead of g++.\n\ng++ -c filename.cxx -o filename.o -std=gnu++11 -O2 -I{panda3dinclude}",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_696",
    "parent": "processed_documents/context_documents/aaa30a21_73dc92f9_running-your-program.json",
    "chunk_number": 7706
  }
}