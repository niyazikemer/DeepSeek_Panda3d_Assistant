{
  "content": "This section introduces the Virtual File System (VFS) in Panda3D, which allows unified access to files and directories from multiple sources, and explains how to use a Python file module replacement that integrates with the VFS through direct.stdpy.file, providing seamless file I/O operations.\n\nThe Virtual File System\n\nGeneral file reading in Panda is handled by the Virtual File System.\n\nAlthough it presents the files and directories that it provides access to as a single, unbroken file system, it can in fact include files from multiple sources (such as multifiles) in the hierarchy, regardless of the underlying structure.\n\nThis has the advantage of allowing one to access files and directories without worrying overmuch about where they actually reside, and even access Multifile archives as a directory hierarchy.\n\npython\n\nPython Interface\n\nPanda3D offers a replacement for the Python file module that supports the virtual file system. You can find it in direct.stdpy.file. The interface is exactly the same as Python's, so it's safe to put this import above all the files where you want to use the open() function:\n\nfrom direct.stdpy.file import *",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_383",
    "parent": "processed_documents/context_documents/07c63f10_c8f13f02_virtual-file-system.json",
    "chunk_number": 5971
  }
}