{
  "content": "\"\"\"\nModule providing a class for managing prototype data objects.\n\nProtoObjs:\n    A class for handling prototype data loading and saving operations.\n    \n    __init__(self, name):\n        Initializes ProtoObjs instance with given name and sets up file paths.\n        \n    populate(self):\n        Loads prototype data from specified module into self.data.\n        \n    saveProtoData(self, f):\n        Writes prototype data to file handle in formatted string format.\n        \n    saveToFile(self):\n        Saves the prototype data to a .py file in dictionary format.\n\"\"\"\nclass ProtoObjs:\n    def __init__(self, name):\n        self.dirname  = os.path.dirname(__file__)\n        self.name     = name\n        self.filename = f\"/{name}.py\"\n        self.data     = {}\n\n    # Methods for loading and saving prototype data omitted...\n\nclass ProtoObjs:\n    def __init__(self, name):\n        self.dirname = os.path.dirname(__file__)\n        self.name = name\n        self.filename = f\"/{name}.py\"\n        self.data = {}\n\n    def populate(self):\n        moduleName = self.name\n        try:\n            file, pathname, description = imp.find_module(moduleName, [self.dirname])\n            module = imp.load_module(moduleName, file, pathname, description)\n            self.data = module.protoData\n        except Exception:\n            print(f\"{self.name} doesn't exist\")\n            return\n\n    def saveProtoData(self, f):\n        if not f:\n            return\n\n        for key, value in self.data.items():\n            f.write(f\"\\t'{key}':'{value}',\\n\")\n\n    def saveToFile(self):\n        try:\n            f = open(self.dirname + self.filename, 'w')\n            f.write(\"protoData = {\\n\")\n            self.saveProtoData(f)\n            f.write(\"}\\n\")\n            f.close()\n        except Exception:\n            pass",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_39",
    "parent": "processed_documents/context_documents/14723e5d_ProtoObjs.json",
    "chunk_number": 569
  }
}