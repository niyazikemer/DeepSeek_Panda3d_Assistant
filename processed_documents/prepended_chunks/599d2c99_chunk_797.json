{
  "content": "This chunk appears within a class responsible for managing particle effects, specifically handling the graphical user interface (GUI) components related to force groups in a particle effect editor. The `updateForceGroupMenus` method is part of a larger system that allows users to interactively create, modify, and control various forces affecting particles in a 3D environment.\n\nThe chunk focuses on maintaining and updating two menus:\n1. `forceGroupEnableMenu`: A menu containing checkbuttons for enabling/disabling force groups.\n2. `forceGroupLabelMenu`: A menu listing available force groups with commands to select them.\n\nThe method iterates through all force groups in the particle effect, updating their representation in these menus to reflect their current state (enabled/disabled) and allowing users to toggle their status or select them for further editing.\n\nThis functionality is part of a broader system that includes methods for creating, configuring, and managing different types of forces (e.g., vector forces, distance-based forces), with the goal of providing a comprehensive toolset for simulating particle effects in a graphical application.\n\ndef updateForceGroupMenus(self):\n        # Get rid of old forceGroup entries if any\n        self.forceGroupEnableMenu.delete(0, 'end')\n        self.forceGroupLabelMenu.delete(2, 'end')\n        self.forceGroupLabelMenu.add_separator()\n        # Add in a checkbutton for each effect (to toggle on/off)\n        forceGroupList = self.particleEffect.getForceGroupList()\n        for name in sorted(x.getName() for x in forceGroupList):\n            force = self.particleEffect.getForceGroupNamed(name)\n            self.forceGroupLabelMenu.add_command(\n                label = name,\n                command = (lambda s = self,\n                           n = name: s.selectForceGroupNamed(n))\n            )\n            forceActive = tk.IntVar()\n            forceActive.set(force.isEnabled())\n            self.forceGroupEnableMenu.add_checkbutton(\n                label = name,\n                variable = forceActive,\n                command = (lambda s = self,\n                           f = force,",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_56",
    "parent": "processed_documents/context_documents/44a6f4d1_ParticlePanel.json",
    "chunk_number": 797
  }
}