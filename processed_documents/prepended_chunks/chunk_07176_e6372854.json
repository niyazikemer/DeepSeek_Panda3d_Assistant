{
  "content": "The chunk demonstrates how to create a dummy node, apply a compute shader, and dispatch it with specific work groups in both Python and C++ for use in Panda3D applications.\n\npython\n\n# Create a dummy node and apply the shader to it\nshader = Shader.load_compute(Shader.SL_GLSL, \"compute_shader.glsl\")\ndummy = NodePath(\"dummy\")\ndummy.set_shader(shader)\ndummy.set_shader_input(\"fromTex\", myTex1)\ndummy.set_shader_input(\"toTex\", myTex2)\n\n# Retrieve the underlying ShaderAttrib\nsattr = dummy.get_attrib(ShaderAttrib)\n\n# Dispatch the compute shader, right now!\nbase.graphicsEngine.dispatch_compute((32, 32, 1), sattr, base.win.get_gsg())\n\ncpp\n\n// Create a dummy node and apply the shader to it\nPT(Shader) shader = Shader::load_compute(Shader::SL_GLSL, \"compute_shader.glsl\");\nNodePath dummy(\"dummy\");\ndummy.set_shader(shader);\ndummy.set_shader_input(\"fromTex\", myTex1);\ndummy.set_shader_input(\"toTex\", myTex2);\n\n// Retrieve the underlying ShaderAttrib\nCPT(ShaderAttrib) sattr = DCAST(ShaderAttrib,\n  dummy.get_attrib(ShaderAttrib::get_class_type()));\n\n// Our image has 32x32 tiles\nLVecBase3i work_groups(512/16, 512/16, 1);",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_599",
    "parent": "processed_documents/context_documents/98f01149_902376c6_compute-shaders.json",
    "chunk_number": 7176
  }
}