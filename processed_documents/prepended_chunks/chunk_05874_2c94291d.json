{
  "content": "The document discusses lighting techniques in Panda3D, including types of lights, shadow mapping, performance considerations, and per-pixel lighting. The chunk focuses on optimizing lighting in large virtual environments by selectively assigning lights to objects for efficiency and the role of color in defining light properties (RGB components), with alpha being largely irrelevant.\n\nBecause of this, when you create a big virtual world, you need to pick and choose which lights affect which objects. For example, if you had a dungeon containing a hundred torches, it would not be practical to tell every object to be illuminated by every torch. Instead, for each object in the dungeon, you would want to search for the three or four nearest torches, and tell the object to be illuminated only by those three or four torches.\n\nWhen per-pixel lighting is enabled, lights are considerably more costly.\n\nColored Lights\n\npython\n\nAll lights have a color, which is specified by light.color = (r, g, b, a) <.Light.color>. The default color is full white: light.color = (1, 1, 1, 1) <.Light.color>. The alpha component is largely irrelevant.\n\ncpp\n\nAll lights have a color, which is specified by light.set_color(LColor(r, g, b, a)) <.Light.set_color>. The default color is full white: light.set_color(LColor(1, 1, 1, 1)) <.Light.set_color>. The alpha component is largely irrelevant.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_365",
    "parent": "processed_documents/context_documents/2104fbbc_293663ad_lighting.json",
    "chunk_number": 5874
  }
}