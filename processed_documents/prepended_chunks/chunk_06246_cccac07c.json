{
  "content": "This chunk provides an introduction to Bullet Queries, specifically focusing on Ray Tests, which are essential for detecting collisions in game development scenarios. It explains the two types of ray testing methods available and their use cases within the context of a physics simulation framework.\n\nBullet Queries\n\nBullet offers a bunch of different queries for retrieving information about collision objects. A common usecase is sensors needed by game logic components. For example to find out if the space in front of an NPC object is blocked by a solid obstacle, or to find out if an NPC can see some other object.\n\nRay Test\n\nRaycasting is to shoot a ray from one position (the from-position) to another position (the to-position). Both the from-position and the to-position have to be specified in global coordinates. The ray test methods will then return a result object which contains information about which objects the ray has hit.\n\nThere are two different ray test method: The first method (rayTestAll) returns all collision objects hit by the ray. But sometimes we are only interested in the first collision object hit by the ray. Then we can use the second ray test method (rayTestClosest).\n\nExample for closest hit:\n\npython\n\npFrom = Point3(0, 0, 0)\npTo = Point3(10, 0, 0)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_444",
    "parent": "processed_documents/context_documents/1bf2fda4_32b65eff_queries.json",
    "chunk_number": 6246
  }
}