{
  "content": "The chunk adds three new methods (`displayFrameCounts`, `displaySeconds`, and `play`) to the `AnimPanel` class. These methods enhance the animation control functionality by allowing users to switch between frame-based and time-based displays and manage animation playback with looping capabilities.\n\nThe context is an object-oriented Python application utilizing Tkinter for GUI, specifically managing 3D character animations through Actor controls. The new methods integrate into the existing `AnimPanel` class structure, enhancing user interaction and animation management features.\n\ndef displayFrameCounts(self):\n        self.unitsVar.set(FRAMES)\n        self.updateDisplay()\n\n    def displaySeconds(self):\n        self.unitsVar.set(SECONDS)\n        self.updateDisplay()\n\n    def play(self, deltaT, fLoop):\n        if self.frameActiveVar.get():\n            # Compute new time\n            self.currT = self.currT + deltaT\n            if fLoop and self.duration:\n                # If its looping compute modulo\n                loopT = self.currT % self.duration\n                self.goToT(loopT)\n            else:\n                if self.currT > self.maxSeconds:\n                    # Clear this actor control from play list\n                    self['animPanel'].playList.remove(self)\n                else:\n                    self.goToT(self.currT)\n        else:\n            # Clear this actor control from play list\n            self['animPanel'].playList.remove(self)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_61",
    "parent": "processed_documents/context_documents/c5cd6f61_AnimPanel.json",
    "chunk_number": 1006
  }
}