{
  "content": "The chunk introduces the fundamental concepts of coordinate spaces in Panda3D shaders, detailing their importance for complex shader operations. It outlines major spaces such as model, world, view, and clip, noting OpenGL equivalences, and explains how to manage transformations using specific matrices. This foundational knowledge is crucial for effective shader programming in Panda3D.\n\nShaders and Coordinate Spaces\n\nThe Major Coordinate Spaces\n\nWhen writing complex shaders, it is often necessary to do a lot of coordinate system conversion. In order to get this right, it is important to be aware of all the different coordinate spaces that panda uses. You must know what \"space\" the coordinate is in. Here is a list of the major coordinate spaces:\n\nIn OpenGL, \"clip space\" and \"API clip space\" are equivalent.\n\nSupplying Translation Matrices to a Shader",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_557",
    "parent": "processed_documents/context_documents/84f019c6_7f49f363_coordinate-spaces.json",
    "chunk_number": 6954
  }
}