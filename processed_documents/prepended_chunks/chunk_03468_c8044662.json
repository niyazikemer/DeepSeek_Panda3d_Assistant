{
  "content": "The provided chunk is part of a Python class `SelectionRay` that inherits from `SelectionQueue`, which appears to be a base class for various selection tools (e.g., ray, sphere, segment) used for collision detection. The `SelectionRay` class initializes a collision ray and provides functionality to pick objects in 3D space based on mouse input coordinates. This tool is likely part of a larger system for interactive 3D applications or game development.\n\nclass SelectionRay(SelectionQueue):\n    def __init__(self, parentNP = None):\n        if parentNP is None:\n            parentNP = render\n        # Initialize the superclass\n        SelectionQueue.__init__(self, parentNP)\n        self.addCollider(CollisionRay())\n\n    def pick(self, targetNodePath, xy = None):\n        # Determine ray direction based upon the mouse coordinates\n        if xy:\n            mx = xy[0]\n            my = xy[1]\n        elif base.direct:\n            mx = base.direct.dr.mouseX\n            my = base.direct.dr.mouseY\n        else:\n            if not base.mouseWatcherNode.hasMouse():\n                # No mouse in window.\n                self.clearEntries()\n                return\n            mx = base.mouseWatcherNode.getMouseX()\n            my = base.mouseWatcherNode.getMouseY()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_186",
    "parent": "processed_documents/context_documents/eebfe557_DirectSelection.json",
    "chunk_number": 3468
  }
}