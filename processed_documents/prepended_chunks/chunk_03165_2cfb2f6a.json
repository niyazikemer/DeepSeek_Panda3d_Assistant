{
  "content": "The chunk is part of a method responsible for initializing animations on all levels of detail (LODs) for an actor. It handles loading and binding either an existing `animBundle` or a new animation file to a specific subset of the actor's parts, allowing asynchronous operations if permitted. The code stores the resulting `AnimControl` object and logs debug information about the binding process.\n\nif anim.animBundle:\n            # We already have a bundle; just bind it.\n            animControl = bundle.bindAnim(anim.animBundle, -1, subpartDef.subset)\n\n        else:\n            # Load and bind the anim.  This might be an asynchronous\n            # operation that will complete in the background, but if so it\n            # will still return a usable AnimControl.\n            animControl = bundle.loadBindAnim(\n                self.loader, Filename(anim.filename), -1,\n                subpartDef.subset, allowAsyncBind and self.allowAsyncBind)\n\n        if not animControl:\n            # Couldn't bind.  (This implies the binding operation was\n            # not attempted asynchronously.)\n            return None\n\n        # store the animControl\n        anim.animControl = animControl\n        assert Actor.notify.debug(\"binding anim: %s to part: %s, lod: %s\" %\n                                  (animName, partName, lodName))\n        return animControl",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3165
  }
}