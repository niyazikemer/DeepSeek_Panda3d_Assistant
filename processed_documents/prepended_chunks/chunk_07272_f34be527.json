{
  "content": "The chunk introduces the concept of Bullet Collision Shapes in Panda3D, providing an overview of various collision shape types (both primitive and complex) used in physics simulations. It includes Python and C++ code examples for implementing these shapes, such as spheres, planes, boxes, cylinders, capsules, cones, compound shapes, convex hulls, triangle meshes, heightfields, soft bodies, multi-spheres, and point cloud shapes. This section serves as an essential guide for developers working with physics-based interactions in Panda3D environments.\n\nBullet Collision Shapes\n\nOn the previous page we have been introduced to Bullet basics. Two simple collision shapes - a box and a plane - have been used in this simple script. This page will now introduce more collision shapes provided by Bullet, starting with primitive shapes and then moving on to more complex ones.\n\nPrimitive shapes:\n\nSphere Shape\n\nPlane Shape\n\nBox Shape\n\nCylinder Shape\n\nCapsule Shape\n\nCone Shape\n\nComplex shapes:\n\nCompound Shape\n\nConvex Hull Shape\n\nTriangle Mesh Shape\n\nHeightfield Shape\n\nSoft Body Shape\n\nMulti Sphere Shape\n\nConvex Point Cloud Shape\n\nSphere Shape\n\nThe most basic collision shape, a sphere with radius radius. The sphere is centered around its origin.\n\npython\n\nfrom panda3d.bullet import BulletSphereShape\nradius = 0.5\nshape = BulletSphereShape(radius)\n\ncpp\n\n#include \"bulletSphereShape.h\"\n...\ndouble radius = 0.5;\nPT(BulletSphereShape) sphere_shape = new BulletSphereShape(radius);\n\nPlane Shape",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_620",
    "parent": "processed_documents/context_documents/7f3fb0c5_06f2dc6d_collision-shapes.json",
    "chunk_number": 7272
  }
}