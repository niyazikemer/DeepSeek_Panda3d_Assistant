{
  "content": "This chunk is part of a method that manages and displays animations from a particle renderer's sprite system. It iterates over available animations, creates corresponding UI widgets (either texture-based or node-based), and updates a list of these widgets for display purposes. The code ensures old widgets are cleaned up before creating new ones to reflect the current state of the particle renderer's animations.\n\nreturn frame\n\n    # get animation info from renderer into panel\n    def readSpriteRendererAnimations(self):\n        ren = self.particles.getRenderer()\n\n        for widget in self.rendererSpriteAnimationWidgetList:\n            if widget:\n                widget.pack_forget()\n                widget.destroy()\n\n        self.rendererSpriteAnimationWidgetList = []\n\n        for anim in [ren.getAnim(x) for x in range(ren.getNumAnims())]:\n            if anim.getSourceType() == SpriteAnim.STTexture:\n                w = self.createSpriteAnimationTextureWidget(self.rendererSpriteAnimationFrame, anim, repr(len(self.rendererSpriteAnimationWidgetList)))\n            else:\n                w = self.createSpriteAnimationNodeWidget(self.rendererSpriteAnimationFrame, anim, repr(len(self.rendererSpriteAnimationWidgetList)))\n            self.rendererSpriteAnimationWidgetList.append(w)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_56",
    "parent": "processed_documents/context_documents/44a6f4d1_ParticlePanel.json",
    "chunk_number": 876
  }
}