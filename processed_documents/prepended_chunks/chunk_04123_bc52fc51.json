{
  "content": "The code chunk implements jump mechanics and updates the airborne state for an avatar within the `handleAvatarControls` method of the `BattleWalker` class. It checks if the avatar is grounded and the jump button is pressed (via `jump` flag and `mayJump` condition), then triggers a jump by adjusting velocity, sending a \"jumpStart\" message, and setting `isAirborne`. If not grounded, it ensures `isAirborne` is set to 1.\n\nself.priorParent = Vec3.zero()\n            if jump and self.mayJump:\n                # The jump button is down and we're close\n                # enough to the ground to jump.\n                self.lifter.addVelocity(self.avatarControlJumpForce)\n                messenger.send(\"jumpStart\")\n                self.isAirborne = 1\n                assert self.debugPrint(\"isAirborne 1 due to jump\")\n        else:\n            if self.isAirborne == 0:\n                assert self.debugPrint(\"isAirborne 1 due to isOnGround() false\")\n            self.isAirborne = 1",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_230",
    "parent": "processed_documents/context_documents/df5d144c_BattleWalker.json",
    "chunk_number": 4123
  }
}