{
  "content": "The chunk is situated in a section explaining how to properly set up and use a client repository in a Panda3D application, specifically detailing the process of connecting to a server, handling successful and failed connections, and managing object creation and visibility through zones. It provides guidance on ensuring correct DO ID generation, setting interest zones for object visibility, and integrating the client repository into the ShowBase instance for proper functionality within the 3D application framework.\n\n**Context:** This section discusses configuring a client repository in Panda3D, including connecting to a server, handling connection outcomes, ensuring valid object IDs, managing visible zones, and integrating the repository into the application's base setup.\n\nIn the syncReady and gotCreateReady methods you\u2019ll see the .ClientRepository.haveCreateAuthority function called. This is a check to see if we are already able to create DOs and give them a correct doId. You can create DOs earlier already, but they may have invalid doIds <doId> then.\n\nAt the end of the gotCreateReady method you can fully use the client and create whatever DOs you may need and add other client related logic.\n\nAt this stage, you may also want to set interest in different zones for the client to see objects created by the server and other clients which are placed in those specific zones. You can do this by calling the .ClientRepository.setInterestZones() method which you simply pass a number of zoneIds that this client should see.\n\nShowBase Client Repository\n\nAfter setting up your main client repository, you should add it to your ShowBase instance in a variable called cr, as in the following example:\n\nbase.cr = MyMainClientRepository()",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_613",
    "parent": "processed_documents/context_documents/64e9d680_48c65d6c_client-repositories.json",
    "chunk_number": 7238
  }
}