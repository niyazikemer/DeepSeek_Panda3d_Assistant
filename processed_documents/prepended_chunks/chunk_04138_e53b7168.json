{
  "content": "This code chunk configures keyboard inputs for forward, reverse, and turning movements in an input handling system, specifically when using WASD navigation. It is part of a larger class that manages user input and avatar movement, utilizing functions like `inputState.isSet` to monitor key presses and mouse events. The context involves setting up controls for player movement based on keyboard inputs within a game or interactive application.\n\nist.append(inputState.watchWithModifiers(\"forward\", \"arrow_up\", inputSource=inputState.ArrowKeys))\n        ist.append(inputState.watch(\"forward\", \"force-forward\", \"force-forward-stop\"))\n\n        ist.append(inputState.watchWithModifiers(\"reverse\", \"arrow_down\", inputSource=inputState.ArrowKeys))\n        ist.append(inputState.watchWithModifiers(\"reverse\", \"mouse4\", inputSource=inputState.Mouse))\n\n        if self.wantWASD:\n            ist.append(inputState.watchWithModifiers(\"turnLeft\", \"arrow_left\", inputSource=inputState.ArrowKeys))\n            ist.append(inputState.watch(\"turnLeft\", \"mouse-look_left\", \"mouse-look_left-done\"))\n            ist.append(inputState.watch(\"turnLeft\", \"force-turnLeft\", \"force-turnLeft-stop\"))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_231",
    "parent": "processed_documents/context_documents/76ec7b1d_ControlManager.json",
    "chunk_number": 4138
  }
}