{
  "content": "The provided chunk contains methods related to managing the Iris transition effect within a larger codebase focused on implementing visual effects like fade-ins and fade-outs using Panda3D. The `loadIris()` method initializes and positions an Iris model, while `getIrisInIval()` sets up an interval for transitioning into the Iris effect, allowing it to be integrated seamlessly into cutscenes or other sequences without blocking execution. This chunk is part of a comprehensive system for managing visual transitions and maintaining smooth animations in a game or interactive application.\n\n##################################################\n    # Iris\n    ##################################################\n\n    def loadIris(self):\n        if self.iris is None:\n            self.iris = base.loader.loadModel(self.IrisModelName)\n            self.iris.setPos(0, 0, 0)\n\n    def getIrisInIval(self, t=0.5, finishIval=None, blendType='noBlend'):\n        \"\"\"\n        Returns an interval without starting it.  This is particularly useful in\n        cutscenes, so when the cutsceneIval is escaped out of we can finish the iris immediately\n        \"\"\"\n        self.noTransitions()\n        self.loadIris()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_244",
    "parent": "processed_documents/context_documents/04f671e4_Transitions.json",
    "chunk_number": 4296
  }
}