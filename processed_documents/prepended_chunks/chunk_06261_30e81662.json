{
  "content": "This chunk introduces the concept of controlling render order in Panda3D, explaining why manual control may be necessary despite automatic handling, and sets up discussions on factors influencing render order like state sorting, transparency, front-to-back vs. back-to-front rendering, and performance optimizations, ultimately leading into how bins are used to manage these complexities.\n\nHow to Control Render Order\n\nIn most simple scenes, you can naively attach geometry to the scene graph and let Panda decide the order in which objects should be rendered. Generally, it will do a good enough job, but there are occasions in which it is necessary to step in and take control of the process.\n\nTo do this well, you need to understand the implications of render order. In a typical OpenGL- or DirectX-style Z-buffered system, the order in which primitives are sent to the graphics hardware is theoretically unimportant, but in practice there are many important reasons for rendering one object before another.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_447",
    "parent": "processed_documents/context_documents/861b8e8f_31d3f668_controlling-render-order.json",
    "chunk_number": 6261
  }
}