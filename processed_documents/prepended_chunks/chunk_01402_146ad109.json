{
  "content": "The provided chunk contains methods related to component management in a megawidget GUI class, including creating, checking existence of, and destroying components, as well as cleanup during destruction. This is situated within a larger DirectGUI base class that manages GUI elements and their properties, such as text, borders, state nodes, and hooks for Panda3D applications. The methods in the chunk handle component lifecycle management and are part of the megawidget design framework.\n\ndef components(self):\n        # Return a list of all components.\n        return sorted(self.__componentInfo)\n\n    def hascomponent(self, component):\n        return component in self.__componentInfo\n\n    def destroycomponent(self, name):\n        # Remove a megawidget component.\n        # This command is for use by megawidget designers to destroy a\n        # megawidget component.\n        self.__componentInfo[name][0].destroy()\n        del self.__componentInfo[name]\n\n    def destroy(self):\n        # Clean out any hooks\n        self.ignoreAll()\n        del self._optionInfo\n        del self.__componentInfo\n        del self.postInitialiseFuncList",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_78",
    "parent": "processed_documents/context_documents/414a65d1_DirectGuiBase.json",
    "chunk_number": 1402
  }
}