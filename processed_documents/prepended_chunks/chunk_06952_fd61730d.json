{
  "content": "```python\n\"\"\"\nDescribes how color write masks in Panda can block writes to specific Red, Green, Blue, or Alpha channels of the framebuffer, their applications for red-blue 3D rendering, updating individual monitors in Battletech Battle Pods, and storing data in the alpha-channel. Also notes that using a color write mask incurs additional performance overhead due to read-modify-write cycles.\n\"\"\"\n```\n\nColor Write Masks\n\nColor Write Masks\n\nColor write masks enable you to block writes to the Red, Green, Blue, or Alpha channels of the framebuffer. This is not a frequently-used capability, but it does have a few applications:\n\nWhen using red-blue 3D glasses, you might want to render the red image, then the blue image. (In fact, Panda uses this technique automatically when you set red-blue-stereo 1 in your Config.prc file.)\n\nBattletech Battle Pods connect 3 black-and-white monitors to a single R,G,B video card output (really!) With the help of color write masks, you could update an individual monitor.\n\nSometimes, one wants to store data in the alpha-channel of the framebuffer. Using a color mask can avoid accidentally overwriting that data.\n\nUsing a color write-mask is not free. During normal rendering, each pixel written to the frame buffer requires a memory write. With a color-mask active, a memory read-modify-write cycle is needed, which is more expensive.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_556",
    "parent": "processed_documents/context_documents/d0e17217_7846c3d9_color-write-masks.json",
    "chunk_number": 6952
  }
}