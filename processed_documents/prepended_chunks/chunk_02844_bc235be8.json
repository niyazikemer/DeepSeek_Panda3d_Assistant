{
  "content": "This code chunk is part of a Python class designed to manage interval playback controls, including timing calculations and playback direction adjustments for forward or reverse play rates. The methods initialize play parameters, set up resume points based on current time, and handle step-by-step playback timing updates.\n\nself.__clockStart = ClockObject.getGlobalClock().getFrameTime()\n        self.__playRate = playRate\n        self.__doLoop = doLoop\n        self.__loopCount = 0\n\n    def setupResume(self):\n        now = ClockObject.getGlobalClock().getFrameTime()\n        if self.__playRate > 0:\n            self.__clockStart = now - ((self.getT() - self.__startT) / self.__playRate)\n        elif self.__playRate < 0:\n            self.__clockStart = now - ((self.getT() - self.__endT) / self.__playRate)\n        self.__loopCount = 0\n\n    def stepPlay(self):\n        now = ClockObject.getGlobalClock().getFrameTime()\n        if self.__playRate >= 0:\n            t = (now - self.__clockStart) * self.__playRate + self.__startT\n\n            if self.__endTAtEnd:\n                self.__endT = self.getDuration()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_164",
    "parent": "processed_documents/context_documents/2f6531c1_Interval.json",
    "chunk_number": 2844
  }
}