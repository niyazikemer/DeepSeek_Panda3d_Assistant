{
  "content": "The document discusses matrix storage and transformation conventions in computer graphics, focusing on the differences between row-major and column-major formats. It examines how these conventions affect data storage, typesetting, and interoperability across libraries like Panda3D, OpenGL, and DirectX. The chunk explains that matrix coefficients represent derivatives of output variables with respect to input variables, providing a clear way to reference groups of coefficients without ambiguity about storage or display order. This explanation is crucial for understanding the terminology used throughout the document, particularly when discussing how Panda3D structures its matrices and interacts with other graphics APIs.\n\nThe equations above contain sixteen coefficients. Those coefficients are derivatives. For example, the coefficient \"G\" could also be called \"the derivative of yo with respect to zi.\"\n\nThis gives us a handy way to refer to groups of coefficients. Collectively, the coefficients \"A,B,C,D\" could also be called \"the derivatives of xo with respect to $\\begin{pmatrix}x_i&y_i&z_i&w_i\\end{pmatrix}$\" or just \"the derivatives of xo\" for short. The coefficients \"A,E,J,N\" could also be called \"the derivatives of $\\begin{pmatrix}x_o&y_o&z_o&w_o\\end{pmatrix}$ with respect to xi\" or just \"the derivatives with respect to xi\" for short.\n\nThis is a good way to refer to groups of four coefficients because it unambiguously names four of them without reference to which storage option or which typesetting option you choose.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_380",
    "parent": "processed_documents/context_documents/b47f4c51_26b6fb2e_matrix-representation.json",
    "chunk_number": 5959
  }
}