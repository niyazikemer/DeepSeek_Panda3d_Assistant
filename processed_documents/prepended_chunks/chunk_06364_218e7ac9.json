{
  "content": "The provided document comprehensively covers using shaders in Panda3D, detailing aspects from loading single-file and multi-file Cg shaders to handling attributes and deferred compilation. The specific chunk focuses on writing a fragment shader function in Cg, illustrating how to output color correctly. It also explains that Cg shaders can be split into multiple files\u2014vertex, fragment, and geometry\u2014each requiring functions named `vshader()`, `fshader()`, and `gshader()` respectively. The document includes examples for both Python and C++ on loading these multi-file shaders, serving as a guide for developers to integrate complex visual effects into their projects using Panda3D.\n\n**Context:**\nThe chunk is part of a comprehensive guide explaining how to create and load Cg shaders in Panda3D. It provides examples of fragment shader functions and demonstrates organizing Cg shaders across multiple files, essential for developers implementing intricate visual effects.\n\nvoid fshader(float4 l_color0 : COLOR0,\n             out float4 o_color : COLOR)\n{\n  o_color = l_color0.grba;\n}\n\nMulti-File Cg Shaders\n\nCg shaders can be divided into several files as well; one for the vertex shader, another for the fragment shader, and a third for the geometry shader. The procedure names are still required to be vshader(), fshader() and gshader() in their respective shader files.\n\nLoading a Cg Shader\n\nLoading a single-file Cg shader is done with the .Shader.load() procedure. The first parameter is the path to the shader file, and the second is the shader language, which in this case is .Shader.SL_Cg. The following is an example of using this procedure:\n\npython\n\nfrom panda3d.core import Shader\n\nshader = Shader.load(\"myshader.sha\", Shader.SL_Cg)\nmodel.setShader(shader)\n\ncpp\n\n#include \"shader.h\"\n\nPT(Shader) shader = Shader::load(\"myshader.sha\", Shader.SL_Cg);\nmodel.set_shader(shader);",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_462",
    "parent": "processed_documents/context_documents/8ddfa146_94b58d23_shader-basics.json",
    "chunk_number": 6364
  }
}