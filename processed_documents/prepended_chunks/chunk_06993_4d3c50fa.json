{
  "content": "The chunk introduces an example of optimizing a scene with 50 dancers by using a single model instance across multiple nodes, reducing computational overhead while maintaining individual renderable instances.\n\nContext: This example illustrates the concept of instancing in Panda3D, demonstrating how to efficiently create and manage multiple copies of a model (such as dancers) by reusing a single animation source. The code shows how each instance is attached to different placeholder nodes, allowing the renderer to treat them as separate entities despite sharing underlying data. This technique highlights how instancing can optimize rendering performance while maintaining individual transformations for each instance.\n\n```plaintext\nThe chunk provides an example of using instancing in Panda3D to create multiple renderable copies of a single model (dancers) with reduced computational overhead, by attaching each instance to different placeholder nodes.\n```\n\nThe idea is this: instead of creating 50 separate dancers, create only one dancer, so that the engine only has to update her animation once. Cause the engine to render her 50 times, by inserting her into the scene graph in 50 different places. Here is how it is done:\n\ndancer = Actor.Actor(\"chorus-line-dancer.egg\", {\"kick\":\"kick.egg\"})\ndancer.loop(\"kick\")\ndancer.setPos(0,0,0)\nfor i in range(50):\n    placeholder = render.attachNewNode(\"Dancer-Placeholder\")\n    placeholder.setPos(i*5, 0, 0)\n    dancer.instanceTo(placeholder)\n\nHere is a diagram of the scene graph we just created:\n\nIt's not a tree anymore, it is a directed acyclic graph. But the renderer still traverses the graph using a recursive tree-traversal algorithm. As a result, it ends up traversing the dancer node 50 times. Here is a diagram of the depth-first traversal that the renderer takes through the graph. Note that this is not a diagram of the scene graph - it's a diagram of the renderer's path through the scene graph:",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_565",
    "parent": "processed_documents/context_documents/fd216bec_f62cc0c7_instancing.json",
    "chunk_number": 6993
  }
}