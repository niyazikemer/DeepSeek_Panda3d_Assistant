{
  "content": "The chunk defines the `pickBitMask3D` method within the `SelectionQueue` class, which facilitates 3D collision detection using bitmasks. This method allows users to query collisions between geometric objects (like points or lines) by specifying a bitmask filter for object types, an origin point, and a direction vector. It is part of a broader framework for managing collision queries in a 3D environment.\n\ndef pickBitMask3D(self, bitMask = BitMask32.allOff(),\n                      targetNodePath = None,\n                      origin = Point3(0), dir = Vec3(0, 0, -1),\n                      skipFlags = DG.SKIP_ALL):\n        if targetNodePath is None:\n            targetNodePath = render\n        self.collideWithBitMask(bitMask)\n        self.pick3D(targetNodePath, origin, dir)\n        # Determine collision entry\n        return self.findCollisionEntry(skipFlags)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_186",
    "parent": "processed_documents/context_documents/eebfe557_DirectSelection.json",
    "chunk_number": 3471
  }
}