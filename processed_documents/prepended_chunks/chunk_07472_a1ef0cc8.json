{
  "content": "The chunk discusses troubleshooting graphics timing issues in Panda3D by enabling `gl-finish` for accurate bottleneck analysis, despite performance impacts. It then introduces the PStats server's graphical user interface (GUI) across Unix and Windows platforms, emphasizing its role in visualizing performance metrics and facilitating detailed data exploration.\n\nIf your card does not support it or does not give reliable timer query information, a crude way of working around this and getting more accurate timing breakdown, you can set this:\n\ngl-finish 1\n\nSetting this option forces Panda to call glFinish() after every major graphics operation, which blocks until all graphics commands sent to the graphics processor have finished executing. This is likely to slow down rendering performance substantially, but it will make PStats graphs more accurately reflect where the graphics bottlenecks are.\n\nTHE PSTATS SERVER (The user interface)\n\nThe GUI for managing the graphs and drilling down to view more detail is entirely controlled by the PStats server program. At the time of this writing, there are two different versions of the PStats server, one for Unix and one for Windows, both called simply pstats. The interfaces are similar but not identical; the following paragraphs describe the Windows version.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_653",
    "parent": "processed_documents/context_documents/778374a5_284cb360_using-pstats.json",
    "chunk_number": 7472
  }
}