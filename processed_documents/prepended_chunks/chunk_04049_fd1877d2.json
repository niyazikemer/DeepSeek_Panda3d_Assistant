{
  "content": "This chunk defines two methods, `addBlastForce` and `displayDebugInfo`, within a Python class. The `displayDebugInfo` method adds debug information about the avatar's physics state, including airborne status, contact normal, velocity, and other relevant metrics, to an on-screen debug display. This provides developers with real-time feedback during testing and debugging of the avatar's movement and physics interactions.\n\n```python\n    def addBlastForce(self, vector):\n        \"\"\"Applies a blast force in the specified direction.\"\"\"\n        pass\n\n    def displayDebugInfo(self):\n        \"\"\"\n        Displays debug information about the avatar's physics state,\n        including airborne status, contact normal, velocity, impact\n        velocity, and other relevant metrics.\n        \"\"\"\n```\n\ndef addBlastForce(self, vector):\n        pass\n\n    def displayDebugInfo(self):\n        \"\"\"\n        For debug use.\n        \"\"\"\n        onScreenDebug.add(\"w controls\", \"PhysicsWalker\")\n\n        if self.useLifter:\n            onScreenDebug.add(\"w airborneHeight\", self.lifter.getAirborneHeight())\n            onScreenDebug.add(\"w isOnGround\", self.lifter.isOnGround())\n            #onScreenDebug.add(\"w gravity\", self.lifter.getGravity())\n            onScreenDebug.add(\"w contact normal\", self.lifter.getContactNormal().pPrintValues())\n            onScreenDebug.add(\"w impact\", self.lifter.getImpactVelocity())\n            onScreenDebug.add(\"w velocity\", self.lifter.getVelocity())\n            onScreenDebug.add(\"w hasContact\", self.lifter.hasContact())\n        #onScreenDebug.add(\"w falling\", self.falling)\n        #onScreenDebug.add(\"w jumpForce\", self.avatarControlJumpForce)\n        #onScreenDebug.add(\"w mayJump\", self.mayJump)\n        onScreenDebug.add(\"w isAirborne\", self.isAirborne)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_225",
    "parent": "processed_documents/context_documents/29172b8e_PhysicsWalker.json",
    "chunk_number": 4049
  }
}