{
  "content": "The chunk of code is part of a larger project that sets up a graphical user interface (GUI) using Tkinter and possibly integrates with Panda3D. The specific code creates a 'Crop Page' in the application, which allows users to adjust cropping parameters for curves by setting start and end times using sliders and execute the crop operation via a button.\n\n```python\n## CROP PAGE ##\n# Creates UI elements for adjusting curve cropping parameters.\ncropFrame = tk.Frame(...)\nlabel = tk.Label(...)\nwidget = self.createSlider(\n    cropFrame, 'Crop Page', 'Crop From',\n    'Delete all curve points before this time',\n    resolution=0.01,\n    command=self.setCropFrom)\nwidget = self.createSlider(\n    cropFrame, 'Crop Page', 'Crop To',\n    'Delete all curve points after this time',\n    resolution=0.01,\n    command=self.setCropTo)\nself.createButton(cropFrame, 'Crop Page', 'Crop Curve',\n                  'Crop curve to specified from to times',\n                  self.cropCurve, fill=tk.NONE)\ncropFrame.pack(...)\n```\n\n## CROP PAGE ##\n        cropFrame = tk.Frame(self.cropPage, relief = tk.SUNKEN,\n                             borderwidth = 2)\n        label = tk.Label(cropFrame, text = 'CROP CURVE',\n                         font=('MSSansSerif', 12, 'bold'))\n        label.pack(fill = tk.X)\n\n        widget = self.createSlider(\n            cropFrame,\n            'Crop Page', 'Crop From',\n            'Delete all curve points before this time',\n            resolution = 0.01,\n            command = self.setCropFrom)\n\n        widget = self.createSlider(\n            cropFrame,\n            'Crop Page', 'Crop To',\n            'Delete all curve points after this time',\n            resolution = 0.01,\n            command = self.setCropTo)\n\n        self.createButton(cropFrame, 'Crop Page', 'Crop Curve',\n                          'Crop curve to specified from to times',\n                          self.cropCurve, fill = tk.NONE)\n        cropFrame.pack(fill = tk.X)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_65",
    "parent": "processed_documents/context_documents/78026bc9_MopathRecorder.json",
    "chunk_number": 1148
  }
}