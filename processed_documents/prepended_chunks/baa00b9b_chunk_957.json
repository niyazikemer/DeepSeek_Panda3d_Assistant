{
  "content": "The provided code chunk includes methods for managing node paths and selecting Joybox modes within a larger class that handles various utilities such as scene graph editing, Joybox configuration, and undo/redo functionality. The `addNodePath` method adds a node path to dictionaries and menus, while the `selectJBModeNamed` method configures different operating modes for the Joybox input system based on the specified mode name.\n\ndef addNodePath(self, nodePath):\n        self.addNodePathToDict(nodePath, self.nodePathNames,\n                               self.nodePathMenu, self.nodePathDict)\n\n    def selectJBModeNamed(self, name):\n        if name == 'Joe Mode':\n            ShowBaseGlobal.direct.joybox.joeMode()\n        elif name == 'Drive Mode':\n            ShowBaseGlobal.direct.joybox.driveMode()\n        elif name == 'Orbit Mode':\n            ShowBaseGlobal.direct.joybox.orbitMode()\n        elif name == 'Look At Mode':\n            ShowBaseGlobal.direct.joybox.lookAtMode()\n        elif name == 'Look Around Mode':\n            ShowBaseGlobal.direct.joybox.lookAroundMode()\n        elif name == 'Walkthru Mode':\n            ShowBaseGlobal.direct.joybox.walkthruMode()\n        elif name == 'Demo Mode':\n            ShowBaseGlobal.direct.joybox.demoMode()\n        elif name == 'HPRXYZ Mode':\n            ShowBaseGlobal.direct.joybox.hprXyzMode()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_60",
    "parent": "processed_documents/context_documents/65f40986_DirectSessionPanel.json",
    "chunk_number": 957
  }
}