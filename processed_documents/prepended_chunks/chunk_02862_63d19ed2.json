{
  "content": "The given code chunk is part of an initialization process within a class handling animation intervals. It determines whether the animation plays forward or backward based on the play rate and frame positions, calculates the number of frames, computes the duration if unspecified, initializes the superclass with the computed duration, and includes a method to retrieve the current frame during playback. This setup ensures proper animation flow and final poses.\n\n# Must we play the animation backwards?  We play backwards if\n        # either (or both) of the following is true: the playRate is\n        # negative, or endFrame is before startFrame.\n        self.reverse = playRate < 0\n        if self.endFrame < self.startFrame:\n            self.reverse = 1\n            t = self.endFrame\n            self.endFrame = self.startFrame\n            self.startFrame = t\n\n        self.numFrames = self.endFrame - self.startFrame + 1\n\n        # Compute duration if no duration specified\n        self.implicitDuration = 0\n        if duration is None:\n            self.implicitDuration = 1\n            duration = float(self.numFrames) / self.frameRate\n\n        # Initialize superclass\n        Interval.Interval.__init__(self, name, duration)\n\n    def getCurrentFrame(self):\n        \"\"\"Calculate the current frame playing in this interval.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_165",
    "parent": "processed_documents/context_documents/0899ec70_AnimControlInterval.json",
    "chunk_number": 2862
  }
}