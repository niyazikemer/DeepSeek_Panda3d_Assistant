{
  "content": "This chunk sits within a comprehensive guide on working with glTF files in Panda3D. It explains the importance of using the `gltf-viewer` utility for accurate model rendering, discusses methods for embedding binary data efficiently, and introduces the concept of extensible functionality through glTF extensions.\n\nYou should instead use the gltf-viewer utility that is included with panda3d-gltf, since it ensures that the panda3d-gltf plug-in is being used. It also includes a default PBR shader that is able to render any PBR materials that are specified by the glTF asset.\n\nEmbedding Binary Data\n\nWhile the glTF format is a text-based format, some data that is part of a model is required to be in a binary form. This concerns such things as vertex and animation data, which would use considerably more space if it were written out a text form. The glTF standard provides three ways to store this binary data:\n\nThe choice of these options is usually available in the exporter plug-in for the modelling program. Which option you choose is up to you; all three are supported by Panda3D.\n\nExtensions\n\nThe glTF format is defined as an extensible format. A glTF asset can opt-in to a number of externally defined extensions that add additional functionality not provided by the base standard.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_610",
    "parent": "processed_documents/context_documents/e7861abe_e146aead_gltf-files.json",
    "chunk_number": 7225
  }
}