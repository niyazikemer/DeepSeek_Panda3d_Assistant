{
  "content": "The chunk discusses how to manipulate node positions in the scene graph using Panda3D's NodePath operations, including setting relative positions, rotating a model to face another object, and using debugging tools to adjust nodes. This section is part of a larger document detailing various NodePath functionalities such as changing parents, storing custom information, removing nodes, and debugging techniques.\n\npython\n\n# Move myNodePath 3 units forward in the x\nmyNodePath.setPos(myNodePath, 3, 0, 0)\n\ncpp\n\n// Move myNodePath 3 units forward in the x\nmyNodePath.set_pos(myNodePath, 3, 0, 0);\n\nThese relative sets and gets are a very powerful feature of Panda's scene graph, but they can also be confusing; don't worry if it doesn't make sense right now.\n\nThe ~.NodePath.look_at() method rotates a model to face another object; that is, it rotates the first object so that its +Y axis points toward the second object. Note that a particular model might or might not have been generated with the +Y axis forward, so this doesn't necessarily make a model \"look at\" the given object.\n\npython\n\nmyNodePath.lookAt(otherObject)\n\ncpp\n\nmyNodePath.look_at(otherObject);\n\npython\n\nTip\n\nIf you have trouble to place, scale or rotate your nodes you can use the place() function to bring up a small GUI which will help you. You need to have Tkinter installed to use it.\n\nmyNodePath.place()\n\nChanging the Parent",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_568",
    "parent": "processed_documents/context_documents/029b082e_cabddac1_common-state-changes.json",
    "chunk_number": 7015
  }
}