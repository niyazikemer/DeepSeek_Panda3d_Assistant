{
  "content": "The document discusses how to manage display regions within a window, including techniques for clearing regions before drawing content. The chunk focuses on controlling clear operations per DisplayRegion when overlapping or requiring different backgrounds, emphasizing the importance of setting clear colors and using specific methods like setClearColorActive() and setClearColor(). This is crucial for ensuring correct rendering and performance in scenes with multiple display regions.\n\n**Context:** Managing display regions involves specifying whether to perform a clear operation before drawing. The chunk explains how to control these clears per region, which affects the background color and overall rendering process.\n\nHowever, when your DisplayRegions overlap, or when they each need to have a different background color, you may need to clear the DisplayRegions individually. Consider the following example:\n\nPanda must draw this scene by first clearing the window to a gray background, then drawing the contents of the larger display region (with the panda), then clearing the smaller, nested display region to a black background, and then finally drawing the contents of the smaller display region.\n\nYou can control the clear operations per DisplayRegion, as well as on the overall GraphicsOutput. The following methods are defined for both DisplayRegions and GraphicsOutputs:\n\npython\n\nwin.setClearColorActive(flag)\nwin.setClearColor((r, g, b, a))\n\ncpp\n\nwin->set_clear_color_active(flag);\nwin->set_clear_color(LVecBase4(r, g, b, a));",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_597",
    "parent": "processed_documents/context_documents/e33eb321_9af630d5_clearing-display-regions.json",
    "chunk_number": 7159
  }
}