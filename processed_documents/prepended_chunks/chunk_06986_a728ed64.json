{
  "content": "The document provides guidance on using Panda3D with Python and C++. The specific chunk discusses compiler options for UNIX-like systems, such as Linux and macOS, and notes key differences when translating Python code to C++, including method naming conventions (camelCase in Python vs. snake_ case in C++). It also highlights the availability of certain Python classes in the C++ API.\n\nOn UNIX-like operating systems, such as Linux and macOS, you can use the LLVM Clang or GNU G++ compiler.\n\nNote\n\nWhile many resources for Panda3D are written with Python users in mind, in many cases the code can be fairly easily translated to C++. Of particular note is the fact that sample code in Python may use the camelCase() naming convention for methods, which is not available in the C++ API. You will need to translate these to the equivalent snake_case() names.\n\nAny Python classes in the panda3d package are also available in the C++ API, whereas Python classes in the direct package are not.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_562",
    "parent": "processed_documents/context_documents/75a5f7d2_a25f414d_preparation.json",
    "chunk_number": 6986
  }
}