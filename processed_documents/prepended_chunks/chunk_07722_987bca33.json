{
  "content": "This chunk describes the prioritization of steering behaviors and provides helper functions for managing AI characters and their behaviors, situating it after the initial explanation of how to use steering behaviors.\n\nOnce you have read this page, you can proceed to explore the individual pages for each AI Behavior for details and even an example demo for each one working.\n\nPRIORITIES :\n\nEvery steering behavior can also take a second parameter which is priority. This ranges from 0 to 1 and it defines the behaviors intensity when combined with other behaviors.\n\naiBehaviors.seek(targetNodePath_1, 0.5);\naiBehaviors.flee(targetNodePath_2, 0.5);\n\nThis will cause the AICharacter's resultant force to be an equal balance of seeking 'targetNodePath_1' and fleeing 'targetNodePath_2'.\n\nHELPER FUNCTIONS :\n\n(For beginners -> Come back to these when you need this functionality)\n\nFor the AIWorld class:\n\nvoid addAiChar(AICharacter aiChar);\n\nvoid removeAiChar(string name);\n\nvoid addFlock(Flock *flock);\n\nvoid flockOff(int ID);\n\nvoid flockOn(int ID);\n\nFlock getFlock(int ID);\n\nFor the AICharacter class:\n\ndouble getMass();\n\nvoid setMass(double m);\n\nLVecBase3 getVelocity();\n\ndouble getMaxForce();",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_700",
    "parent": "processed_documents/context_documents/735cd4df_c0a76b4d_index.json",
    "chunk_number": 7722
  }
}