{
  "content": "This chunk is part of an example script illustrating how to apply StencilAttributes to nodes in a scene for creating masking effects. The code sets up two nodes: `viewingSquare` writes to the stencil buffer without rendering color, while a panda model reads from it using `stencilReader`, demonstrating selective rendering based on stencil values.\n\n**Context:**  \nThe provided code is an example of applying StencilAttributes in a scene to create a masking effect. It uses `constantOneStencil` on a square node to write to the stencil buffer and `stencilReader` on a panda model to selectively render only where the stencil value matches, demonstrating how nodes interact with the stencil buffer for visual effects.\n\n**Keywords:**  \nStencilAttributes, example script, selective rendering, invisible mask, Stencil buffer manipulation\n\nviewingSquare.node().setAttrib(constantOneStencil)\nviewingSquare.node().setAttrib(ColorWriteAttrib.make(0))\nviewingSquare.setBin('background',0)\nviewingSquare.setDepthWrite(0)\n\nview = loader.loadModel(\"panda\")\nview.reparentTo(render)\nview.setScale(3)\nview.setY(150)\nview.node().setAttrib(stencilReader)\n\nbase.run()\n\nYou can get a little more insight into stencils in this thread on the forums: https://discourse.panda3d.org/t/using-stencils-solved/7409/7",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_426",
    "parent": "processed_documents/context_documents/110b2e47_d82698ba_stencil-attribute.json",
    "chunk_number": 6166
  }
}