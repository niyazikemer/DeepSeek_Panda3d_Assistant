{
  "content": "This section explains how the PStatClient manages data transmission once connected. It details how each `start()` and `stop()` call records timestamps and collector IDs, compiles them into datagrams at each frame end, and transmits via UDP or TCP based on packet size and a configurable ratio setting.\n\nOnce connected, each call to start() and stop() adds a collector number and timestamp to an array maintained by the PStatClient. At the end of each frame, the PStatClient boils this array into a datagram for shipping to the server. Each start() and stop() event requires 6 bytes; if the resulting datagram will fit within a UDP packet (1K bytes, or about 84 start/stop pairs), it is sent via UDP; otherwise, it is sent on the TCP channel. (Some fraction of the packets that are eligible for UDP, from 0% to 100%, may be sent via TCP instead; you can specify this with the pstats-tcp-ratio Config.prc variable.)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_653",
    "parent": "processed_documents/context_documents/778374a5_284cb360_using-pstats.json",
    "chunk_number": 7493
  }
}