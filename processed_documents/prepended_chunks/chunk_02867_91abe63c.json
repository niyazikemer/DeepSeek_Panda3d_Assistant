{
  "content": "This chunk contains foundational setup code for a module that defines meta-interval classes (Sequence, Parallel, etc.) used to manage and execute other intervals either sequentially or in parallel. The imports include core Panda3D components and interval management utilities, while the constants define relationship types between intervals (e.g., PREVIOUS_END, TRACK_START). This section is essential for setting up the interval management framework.\n\n\"\"\"\nThis module defines the various \"meta intervals\", which execute other\nintervals either in parallel or in a specified sequential order.\n\"\"\"\n\n__all__ = ['MetaInterval', 'Sequence', 'Parallel', 'ParallelEndTogether', 'Track']\n\nfrom panda3d.core import PStatCollector, ostream\nfrom panda3d.direct import CInterval, CMetaInterval\nfrom direct.directnotify.DirectNotifyGlobal import directNotify\nfrom .IntervalManager import ivalMgr\nfrom . import Interval\nfrom direct.task.Task import TaskManager\n#if __debug__:\n#    import direct.showbase.PythonUtil as PythonUtil\n\nPREVIOUS_END = CMetaInterval.RSPreviousEnd\nPREVIOUS_START = CMetaInterval.RSPreviousBegin\nTRACK_START = CMetaInterval.RSLevelBegin",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_166",
    "parent": "processed_documents/context_documents/4dc28cd4_MetaInterval.json",
    "chunk_number": 2867
  }
}