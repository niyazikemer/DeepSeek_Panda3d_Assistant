{
  "content": "The chunk consists of methods that handle navigation in the InspectorWindow class. The `inspect()` method allows diving into a selected part, while `pop()` and `dive()` manage moving up and down through the hierarchy of inspectors by modifying the `inspectors` list. These methods work alongside the UI updates handled by the `update()` method to provide a hierarchical inspection experience.\n\n# Menu Events\n    def inspect(self):\n        inspector = self.inspectorForSelectedPart()\n        if inspector is None:\n            return\n        InspectorWindow(inspector).open()\n\n    def pop(self):\n        if len(self.inspectors) > 1:\n            self.inspectors = self.inspectors[:-1]\n            self.update()\n\n    def dive(self):\n        inspector = self.inspectorForSelectedPart()\n        if inspector is None:\n            return\n        self.inspectors.append(inspector)\n        self.update()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_62",
    "parent": "processed_documents/context_documents/5e6b5c95_Inspector.json",
    "chunk_number": 1032
  }
}