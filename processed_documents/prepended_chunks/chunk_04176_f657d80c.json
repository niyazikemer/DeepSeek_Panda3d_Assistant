{
  "content": "The chunk defines methods for managing collisions in a 3D environment, including activating/deactivating colliders using a traverser (`cTrav`) and pusher (`pusher`), setting tags on collider nodes, deleting collision objects, and handling their state. These functions are essential for enabling realistic movement and interaction within the virtual space by preventing avatars from passing through objects.\n\n# activate the collider with the traverser and pusher\n        self.setCollisionsActive(1)\n\n    def deleteCollisions(self):\n        del self.cTrav\n\n        del self.cSphere\n        self.cSphereNodePath.removeNode()\n        del self.cSphereNodePath\n\n        del self.cRay\n        self.cRayNodePath.removeNode()\n        del self.cRayNodePath\n\n        del self.pusher\n        del self.lifter\n\n    def setTag(self, key, value):\n        self.cSphereNodePath.setTag(key, value)\n\n    def setCollisionsActive(self, active = 1):\n        assert self.debugPrint(\"setCollisionsActive(active%s)\"%(active,))\n        if self.collisionsActive != active:\n            self.collisionsActive = active\n            if active:\n                self.cTrav.addCollider(self.cSphereNodePath, self.pusher)\n                self.cTrav.addCollider(self.cRayNodePath, self.lifter)\n            else:\n                self.cTrav.removeCollider(self.cSphereNodePath)\n                self.cTrav.removeCollider(self.cRayNodePath)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_236",
    "parent": "processed_documents/context_documents/a0f2d386_NonPhysicsWalker.json",
    "chunk_number": 4176
  }
}