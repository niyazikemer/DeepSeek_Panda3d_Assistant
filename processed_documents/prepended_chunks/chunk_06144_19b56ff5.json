{
  "content": "[Interrogate] is a tool for analyzing C++ code and generating callable wrappers for use in scripting environments like Python.\n\nInterrogate\n\nInterrogate\n\nInterrogate is a program to parse a body of C++ code and build up a table of classes, methods, functions, and symbols found, for the purposes of calling into the codebase via a non-C++ scripting language like Python (Scheme and Smalltalk were also tried at some point) The design of interrogate is such that it should be able to produce wrappers for any other language without too much trouble. You'll have to be responsible for writing and maintaining the interface layer to produce the wrappers, though.\n\nIn addition to identifying all the classes and their relationships, interrogate will generate a wrapper function for each callable function. The wrapper functions will be callable directly from the scripting language, with no understanding of C++ necessary; these wrapper functions will in turn call the actual C++ functions or methods.\n\nC++ Parser",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_423",
    "parent": "processed_documents/context_documents/2e2b4b89_ca6cf7a0_interrogate.json",
    "chunk_number": 6144
  }
}