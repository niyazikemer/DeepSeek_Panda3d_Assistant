{
  "content": "The chunk implements cursor positioning logic in the `DirectEntryScroll` class, ensuring text remains visible within scroll limits. It handles centering the cursor when movement exceeds half the clip area and adjusts canvas position while managing boundary conditions to prevent unintended cursor jumps or over-scrolling, crucial for maintaining a smooth user experience in scrolling text entry fields.\n\nif abs(distanceToCenter) > (clipExtent * 0.5):\n            self.moveToCenterCursor()\n\n    def moveToCenterCursor(self):\n        cursorX = self.entry.guiItem.getCursorX() * self.entry['text_scale'][0]\n        canvasX = self.canvas.getX()\n        visXMin = self.clipXMin - canvasX\n        visXMax = self.clipXMax - canvasX\n        visXCenter = (visXMin + visXMax) * 0.5\n        distanceToCenter = visXCenter - cursorX\n        newX = canvasX + distanceToCenter\n\n        clipExtent = self.clipXMax - self.clipXMin\n\n        entryExtent = self.entry['text_scale'][0] * self.entry['width']\n        entryWiggle = entryExtent - clipExtent\n\n        if self.entry.guiItem.getCursorPosition() <= 0: #deals with the cursor jump bug\n            newX = 0.0\n        elif newX > 0.0:\n            newX = 0.0\n        elif newX < (-entryWiggle):\n            newX = -entryWiggle",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_87",
    "parent": "processed_documents/context_documents/2b07ca75_DirectEntryScroll.json",
    "chunk_number": 1530
  }
}