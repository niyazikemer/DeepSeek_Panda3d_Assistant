{
  "content": "This code chunk is part of an animation system in a 3D modeling editor. The `createKeyFrameAnimation` method generates sequences for animating non-spatial properties (excluding X, Y, Z) by creating interpolation functions (`LerpFunc`) for each property based on defined keyframes. It uses the `lerpFuncs` dictionary to map property names to their respective lerp functions and handles animation sequences using a parallel execution structure.\n\ndef createKeyFrameAnimation(self, parallel, startFrame, endFrame):\n        #generate key frame animation for normal property\n        self.editor.objectMgr.findNodes(render)\n        for node in self.editor.objectMgr.Nodes:\n            for property in list(self.keyFramesInfo.keys()):\n                if property[AG.UID] == node[OG.OBJ_UID] and property[AG.PROP_NAME] != 'X' and property[AG.PROP_NAME] != 'Y' and property[AG.PROP_NAME] != 'Z':\n                    mysequence = Sequence(name = node[OG.OBJ_UID])\n                    keyFramesInfo = self.keyFramesInfo[property]\n                    if len(keyFramesInfo) == 1:\n                        myLerp = LerpFunc(self.lerpFuncs[property[AG.PROP_NAME]],fromData=float(keyFramesInfo[0][AG.VALUE]),toData=float(keyFramesInfo[0][AG.VALUE]),duration = float(endFrame-startFrame)/float(24),blendType = 'noBlend',extraArgs = [node[OG.OBJ_NP]])\n                        mysequence.append(myLerp)\n                        parallel.append(mysequence)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_26",
    "parent": "processed_documents/context_documents/c3433415_AnimMgrBase.json",
    "chunk_number": 383
  }
}