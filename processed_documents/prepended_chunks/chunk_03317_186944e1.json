{
  "content": "This chunk defines two tasks related to camera translation and object selection in a 3D scene. `XZTranslateTask` handles freeform movement of the camera along the X and Z axes based on mouse input, while `OrthoTranslateTask` implements grid-aligned movement by tracing a ray from the camera to detect 3D positions within the scene, focusing on specific layers or objects marked with a particular bitmask (likely the scene's grid). These methods are part of an event-driven system for interacting with 3D content.\n\ndef XZTranslateTask(self, state):\n        direct = ShowBaseGlobal.direct\n        coaDist = Vec3(self.coaMarker.getPos(direct.camera)).length()\n        xlateSF = coaDist / direct.dr.near\n        direct.camera.setPos(direct.camera,\n                             (-0.5 * direct.dr.mouseDeltaX *\n                              direct.dr.nearWidth *\n                              xlateSF),\n                             0.0,\n                             (-0.5 * direct.dr.mouseDeltaY *\n                              direct.dr.nearHeight *\n                              xlateSF))\n        return Task.cont\n\n    def OrthoTranslateTask(self, state):\n        # create ray from the camera to detect 3d position\n        direct = ShowBaseGlobal.direct\n        iRay = SelectionRay(direct.camera)\n        iRay.collider.setFromLens(direct.camNode, direct.dr.mouseX, direct.dr.mouseY)\n        #iRay.collideWithBitMask(1)\n        iRay.collideWithBitMask(BitMask32.bit(21))\n        iRay.ct.traverse(direct.grid)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_181",
    "parent": "processed_documents/context_documents/b7d65bc2_DirectCameraControl.json",
    "chunk_number": 3317
  }
}