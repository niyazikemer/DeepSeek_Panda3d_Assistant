{
  "content": "The document explains the fundamentals of reference counting in Panda3D, a mechanism crucial for managing object lifetimes by tracking references. This section introduces how the system works, its parallels with Python's approach, and why Panda3D requires its own solution to handle objects that may outlive their Python counterparts.\n\nReference Counting\n\nReference Counts\n\nTo manage the lifetime of objects, Panda3D has a reference counting system for many objects. This means that for every object that uses this mechanism, a reference count is kept which counts the number of references exist to that object. Every time a new reference is made (eg. assigned to a new variable), the reference count is increased. When the reference count reaches zero, the object is deleted.\n\nThis is similar to Python's reference counting system, and in fact, the two systems interact when Panda3D is used with Python. However, since an object's lifetime may persist beyond the lifetime of an object in Python, Python's own reference counting system alone is not sufficient.\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_614",
    "parent": "processed_documents/context_documents/34116fa8_637658a3_reference-counting.json",
    "chunk_number": 7239
  }
}