{
  "content": "The functions provided are part of a class managing particle effects, specifically dealing with rendering settings such as alpha blending and orientation. They should be situated within the section dedicated to configuring visual properties of particles, distinct from force-related configurations like gravity or drag. This placement ensures they are accessible when adjusting how particles appear rather than their physical behavior.\n\n**Answer:**\n\nThese functions belong in the section handling particle renderer settings, focusing on visual aspects such as blending and transparency, separate from force configurations.\n\ndef setRendererSpriteNonAnimatedTheta(self, theta):\n        self.particles.renderer.setNonanimatedTheta(theta)\n\n    def setRendererSpriteBlendMethod(self, blendMethod):\n        if blendMethod == 'PP_NO_BLEND':\n            bMethod = BaseParticleRenderer.PPNOBLEND\n        elif blendMethod == 'PP_BLEND_LINEAR':\n            bMethod = BaseParticleRenderer.PPBLENDLINEAR\n        elif blendMethod == 'PP_BLEND_CUBIC':\n            bMethod = BaseParticleRenderer.PPBLENDCUBIC\n        else:\n            bMethod = BaseParticleRenderer.PPNOBLEND\n\n    def toggleRendererSpriteAlphaDisable(self):\n        self.particles.renderer.setAlphaDisable(\n            self.getVariable('Sprite Renderer', 'Alpha Disable').get())",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_56",
    "parent": "processed_documents/context_documents/44a6f4d1_ParticlePanel.json",
    "chunk_number": 848
  }
}