{
  "content": "This chunk appears to be part of a class that manages particle system parameters and their corresponding GUI widgets. The methods `selectFactoryPage`, `updateFactoryWidgets`, and `setFactoryLifeSpan` handle the configuration and update of factory-related settings such as lifespan, mass, and terminal velocity for particles. These methods interact with particle factory properties and update GUI elements to reflect or modify these values.\n\nThe code is related to managing particle emitter parameters and their representation in a user interface. It ensures that changes made via the UI are reflected in the underlying particle system configuration and vice versa.\n\ndef selectFactoryPage(self):\n        pass\n\n    def updateFactoryWidgets(self):\n        factory = self.particles.factory\n        lifespan = factory.getLifespanBase()\n        self.getWidget('Factory', 'Life Span').set(lifespan, 0)\n        lifespanSpread = factory.getLifespanSpread()\n        self.getWidget('Factory', 'Life Span Spread').set(lifespanSpread, 0)\n        mass = factory.getMassBase()\n        self.getWidget('Factory', 'Mass').set(mass, 0)\n        massSpread = factory.getMassSpread()\n        self.getWidget('Factory', 'Mass Spread').set(massSpread, 0)\n        terminalVelocity = factory.getTerminalVelocityBase()\n        self.getWidget('Factory', 'Terminal Velocity').set(terminalVelocity, 0)\n        terminalVelocitySpread = factory.getTerminalVelocitySpread()\n        self.getWidget('Factory', 'Terminal Vel. Spread').set(\n            terminalVelocitySpread, 0)\n\n    def setFactoryLifeSpan(self, value):\n        self.particles.factory.setLifespanBase(value)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_56",
    "parent": "processed_documents/context_documents/44a6f4d1_ParticlePanel.json",
    "chunk_number": 810
  }
}