{
  "content": "This chunk sits within a comprehensive guide on utilizing the Panda3D task manager across both Python and C++ environments. It specifically delves into the crucial concept of task return values, which dictate how the task manager processes tasks after their execution. Additionally, it clarifies the mechanism for scheduling delayed tasks in C++, akin to Python's `taskMgr.doMethodLater()`, providing essential insights for developers aiming to manage task behavior effectively.\n\nTask Return Values\n\nThe value returned from a task affects how the task manager handles that task going forward.\n\npython\n\nVariable Purpose Task.done Specifies that a task is finished and removes it from the task\nmanager. Task.cont Perform the task again next frame. Task.again Perform the task again, using the same delay as initially\nspecified.\n\ncpp\n\nVariable Purpose AsyncTask::DS_done Specifies that a task is finished and removes it from the task\nmanager. AsyncTask::DS_cont Perform the task again next frame. AsyncTask::DS_again Perform the task again, using the same delay as initially\nspecified.\n\nThe Do-Later Task\n\ncpp\n\nIf you have used Panda3D in Python, you might be familiar with the Python function taskMgr.doMethodLater(), which lets you schedule a task to be started after a certain delay. This isn't needed in C++, because you can set a delay on a task directly with task->set_delay(). An example will be provided below in the task manager section.\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_499",
    "parent": "processed_documents/context_documents/6c715f42_5c9f8c24_tasks.json",
    "chunk_number": 6504
  }
}