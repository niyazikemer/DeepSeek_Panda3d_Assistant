{
  "content": "To create and apply a clip plane in Panda3D:\n\n1. **Define the Plane**: Use either three points or a normal vector with an origin point. For example, a horizontal plane (like water) can be defined with a normal vector `(0, 0, 1)` and an origin at `(0, 0, height)`.\n\n2. **Create PlaneNode**: Instantiate `PlaneNode` with the defined plane to represent it in the scene.\n\n3. **Attach to Scene Graph**: Add the `PlaneNode` to the render tree using `render.attach_new_node()` to integrate it into the 3D environment.\n\n4. **Debug Visualization (Optional)**: Call `plane_node.show()` to visualize the clip plane for easier debugging.\n\n5. **Apply Clip Plane**: Use `setClipPlane(plane_node)` on a specific node, such as your model or `render`, to enable clipping based on the defined plane.\n\nThis setup ensures that only the desired side of the plane is rendered, effectively hiding the other half.\n\nClip Planes\n\nA clip plane fundamentally divides space into two halves: one half which is clipped (hidden from rendering), and one half which is rendered.\n\nA common use case is when rendering reflections of flat mirror surfaces (such as water), to ensure that a camera that is rendering the reflected scene will only render the part of the scene that is above the surface of the mirror.\n\nIt is possible to have multiple clip planes enabled at the same time. This will cause multiple areas to be culled away. There is an implementation-specific limit on the number of clip planes that can be active at any one time.\n\nA plane is defined by four coordinates. The first three represent the X, Y, Z of the plane's surface normal. The last parameter is used to determine the origin point of the plane. You can create a plane either using three points, or by using a normal vector and an origin point:\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_370",
    "parent": "processed_documents/context_documents/3c8dcf09_94575662_clip-planes.json",
    "chunk_number": 5909
  }
}