{
  "content": "This chunk provides an overview of AI Repositories in Panda3D, explaining their role in handling server-side game logic for networked games, emphasizing security considerations, and outlining the setup process using ClientRepository with specific parameters like dcSuffix='AI'.\n\nAI Repositories\n\nAI Servers are clients that reside on a server rather than on the end users' client machines. An AI server (usually called AI Repository) is used to create distributed objects which are usually used to handle game logic that should not be run by end user clients.\n\nIn networked games, most of the game logic should be handled by the server. Clients shouldn\u2019t be trusted as it\u2019s not possible to ensure that they haven\u2019t been compromised in one way or another.\n\nSimilar to the server repositories, for AI repositories most of the low-level networking code is neatly hidden by Panda3D which makes setting up a basic AI server rather simple too. Though rather than having a dedicated AIRepository class, we have to use the .ClientRepository as, as stated before, the AI repository is nothing else than a client.\n\nClientRepository.__init__(\n    self,\n    dcFileNames = dcFileNames,\n    dcSuffix = 'AI',\n    threadedNet = True)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_420",
    "parent": "processed_documents/context_documents/d5d9e7c2_47963ea2_ai-repositories.json",
    "chunk_number": 6136
  }
}