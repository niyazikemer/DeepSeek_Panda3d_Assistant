{
  "content": "The chunk provides an introduction to Finite State Machines (FSM) in Panda3D, explaining their role in managing game state changes and cleanup logic. It uses a simple example of an avatar transitioning between walking and swimming states, highlighting how each state requires different animations, sound effects, and active features. This context situates the chunk as part of a broader discussion on FSM implementation in game development, emphasizing the importance of state transitions and cleanup processes.\n\nFSM Introduction\n\npython\n\nIn Panda3D, FSM's are frequently used in game code to automatically handle the cleanup logic in game state changes. For instance, suppose you are writing a game in which the avatar spends most of his time walking around, but should go into swim mode when he enters the water. While he is walking around, you want certain animations and sound effects to be playing, and certain game features to be active; but while he is swimming, there should be a different set of animations, sound effects, and game features (this is just an example, of course):\n\nWalk state Should be playing \"walk\" animation Should hear footsteps sound effect Collision detection with doors should be active Swim state Should be playing \"swim\" animation Should hear underwater sound effect Should have fog on camera Should have an air timer running",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_537",
    "parent": "processed_documents/context_documents/1ec143d1_47834cc9_fsm-introduction.json",
    "chunk_number": 6678
  }
}