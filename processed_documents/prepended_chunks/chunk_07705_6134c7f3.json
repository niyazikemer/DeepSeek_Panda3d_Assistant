{
  "content": "The provided context is part of a comprehensive guide on compiling and running Panda3D programs. It specifically details the necessary steps to configure your environment in Visual Studio for Windows users by setting the PATH variable to include Panda3D DLLs, enabling successful execution of compiled projects. Additionally, it introduces alternative methods using GCC or Clang for non-Windows systems, ensuring a smooth transition to compiling on different platforms. This section serves as a crucial final setup step for running programs under Visual Studio and provides essential information for those transitioning to other compilers.\n\nThere is one more step that needs to be done in order to run the project, though. We need to tell Windows where to find the Panda3D DLLs when we run the project from Visual Studio. Go back to the project configuration, and under \"Debugging\", open the \"Environment\" option. Add the following setting, once again adjusting for your specific Panda3D installation directory:\n\nPATH=C:\\Panda3D-|release|-x64\\bin;%PATH%\n\nNow, assuming that the project built successfully, you can press F5 to run the program. Of course, not much will happen yet, because we don't have any particularly interesting code added. The following tutorial will describe the code that should be added to open a Panda3D window and start rendering objects.\n\nCompiling your Program with GCC or Clang",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_696",
    "parent": "processed_documents/context_documents/aaa30a21_73dc92f9_running-your-program.json",
    "chunk_number": 7705
  }
}