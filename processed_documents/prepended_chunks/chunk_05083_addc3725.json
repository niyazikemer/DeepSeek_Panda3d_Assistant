{
  "content": "The code chunk consists of two methods within a Python class related to statistical profiling. The `func_std_string` method formats function names into strings, while the `print_line` method outputs detailed statistics about each function call, including call counts and timing metrics, as part of generating human-readable profiling reports. These functions are integral to displaying formatted profiling results in a structured manner within the larger codebase.\n\n@staticmethod\n    def func_std_string(func_name): # match what old profile produced\n        return \"%s:%d(%s)\" % func_name\n\n    def print_line(self, func):\n        cc, nc, tt, ct, callers = self.stats[func]\n        c = str(nc)\n        # DCR\n        f8 = self.f8\n        if nc != cc:\n            c = c + '/' + str(cc)\n        print(c.rjust(9), end=' ')\n        print(f8(tt), end=' ')\n        if nc == 0:\n            print(' '*8, end=' ')\n        else:\n            print(f8(tt/nc), end=' ')\n        print(f8(ct), end=' ')\n        if cc == 0:\n            print(' '*8, end=' ')\n        else:\n            print(f8(ct/cc), end=' ')\n        # DCR\n        #print func_std_string(func)\n        print(PercentStats.func_std_string(func))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_288",
    "parent": "processed_documents/context_documents/1629146a_ProfileSession.json",
    "chunk_number": 5083
  }
}