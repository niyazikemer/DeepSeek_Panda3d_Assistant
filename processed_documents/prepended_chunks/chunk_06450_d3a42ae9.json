{
  "content": "The chunk describes how to implement collision detection for camera movement using `CollisionHandlerPusher` and integrate physics-based collision handling with `PhysicsCollisionHandler` in both Python and C++.\n\npython\n\nfromObject = base.camera.attachNewNode(CollisionNode('colNode'))\nfromObject.node().addSolid(CollisionSphere(0, 0, 0, 1))\n\npusher = CollisionHandlerPusher()\npusher.addCollider(fromObject, base.camera, base.drive.node())\n\ncpp\n\nfromObject = cam.attach_new_node(new CollisionNode(\"colNode\"))\nfromObject.node()->add_solid(new CollisionSphere(0, 0, 0, 1));\n\nPT(CollisionHandlerPusher) pusher = new CollisionHandlerPusher;\npusher.add_collider(fromObject, cam);\n\nPhysicsCollisionHandler\n\nThis kind of handler further specializes CollisionHandlerPusher to integrate with Panda's Physics Engine <panda3d-physics-engine>. It requires that the NodePath you pass as the second parameter to pusher.add_collider() <panda3d.physics.PhysicsCollisionHandler.add_collider> actually contains an ActorNode, the type of node that is moved by forces in the physics system.\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_485",
    "parent": "processed_documents/context_documents/43230ff3_7853f9ff_collision-handlers.json",
    "chunk_number": 6450
  }
}