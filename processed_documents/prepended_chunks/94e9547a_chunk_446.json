{
  "content": "This code chunk appears to be part of the event handling methods within a class responsible for managing user interactions in a graphical application, likely a 3D modeling or curve editing tool. The code snippet specifically handles mouse and keyboard events: it manages right-click context menu display and tracks modifier key states (Alt, Control, Shift), while also sending messages for navigation keys (arrow and page up/down). This suggests the chunk is situated within an `onMouse3` method that triggers when a user right-clicks in the viewport, displaying a context-specific menu and monitoring keyboard inputs for additional functionality.\n\nShowBaseGlobal.direct.fMouse3 = 0\n        self.PopupMenu(self.contextMenu, mpos)\n\n    def onKeyDownEvent(self, evt):\n        if evt.GetKeyCode() == wx.WXK_ALT:\n            ShowBaseGlobal.direct.fAlt = 1\n        elif evt.GetKeyCode() == wx.WXK_CONTROL:\n            ShowBaseGlobal.direct.fControl = 1\n        elif evt.GetKeyCode() == wx.WXK_SHIFT:\n            ShowBaseGlobal.direct.fShift = 1\n        elif evt.GetKeyCode() == wx.WXK_UP:\n            messenger.send('arrow_up')\n        elif evt.GetKeyCode() == wx.WXK_DOWN:\n            messenger.send('arrow_down')\n        elif evt.GetKeyCode() == wx.WXK_LEFT:\n            messenger.send('arrow_left')\n        elif evt.GetKeyCode() == wx.WXK_RIGHT:\n            messenger.send('arrow_right')\n        elif evt.GetKeyCode() == wx.WXK_PAGEUP:\n            messenger.send('page_up')\n        elif evt.GetKeyCode() == wx.WXK_PAGEDOWN:\n            messenger.send('page_down')\n        else:\n            evt.Skip()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_29",
    "parent": "processed_documents/context_documents/36d4e032_LevelEditorUIBase.json",
    "chunk_number": 446
  }
}