{
  "content": "The provided chunk of code is part of an object-oriented Python script, specifically a method `createActorControls(self)` in a class (likely named `AnimPanel`), which creates UI controls for managing animations of one or more actors. The purpose of this code is to organize and display available animations for each actor in a user-friendly manner within a graphical application.\n\nThe code retrieves the list of animation names from an actor, prioritizes certain key animations ('neutral', 'walk', 'run'), sorts the remaining animations alphabetically, and combines them into a final list. If no animations are available for an actor, it skips creating a control panel for that actor. The method creates a frame to hold these controls and iterates through each actor in a provided list to set up their respective animation controls.\n\nThis code is part of a larger system designed to facilitate animation management and playback for 3D actors, likely within a game development or 3D modeling/animation context.\n\ndef createActorControls(self):\n        # Create a frame to hold all the actor controls\n        self.actorFrame = tk.Frame(self.interior())\n        # Create a control for each actor\n        self.actorControlList = []\n        for actor in self['actorList']:\n            anims = actor.getAnimNames()\n            print(\"actor animnames: %s\"%anims)\n            topAnims = []\n            if 'neutral' in anims:\n                i = anims.index('neutral')\n                del anims[i]\n                topAnims.append('neutral')\n            if 'walk' in anims:\n                i = anims.index('walk')\n                del anims[i]\n                topAnims.append('walk')\n            if 'run' in anims:\n                i = anims.index('run')\n                del anims[i]\n                topAnims.append('run')\n            anims.sort()\n            anims = topAnims + anims\n            if len(anims) == 0:\n                # no animations set for this actor, don't\n                # display the control panel",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_61",
    "parent": "processed_documents/context_documents/c5cd6f61_AnimPanel.json",
    "chunk_number": 986
  }
}