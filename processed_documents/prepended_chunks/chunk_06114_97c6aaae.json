{
  "content": "The chunk provides an example implementation of using `DirectCheckButton` in a Panda3D application. It demonstrates creating a simple GUI with a checkbox that toggles between two states and updates displayed text accordingly. The code includes setting up text display, defining a callback function for state changes, and configuring the checkbox button. Additionally, it shows how to programmatically change the checkbox's state and customize its appearance using different images for checked and unchecked states.\n\nThis example is useful for understanding the basic usage of `DirectCheckButton`, handling user interactions, and modifying the checkbox's properties dynamically in a Panda3D application.\n\nExample\n\nimport direct.directbase.DirectStart\nfrom direct.gui.OnscreenText import OnscreenText\nfrom direct.gui.DirectGui import *\nfrom panda3d.core import *\n\n# Add some text\nbk_text = \"This is my Demo\"\ntextObject = OnscreenText(text=bk_text, pos=(0.95,-0.95), scale=0.07,\n                          fg=(1, 0.5, 0.5, 1), align=TextNode.ACenter,\n                          mayChange=1)\n\n# Callback function to set  text\ndef setText(status):\n    if status:\n        bk_text = \"Checkbox Selected\"\n    else:\n        bk_text = \"Checkbox Not Selected\"\ntextObject.setText(bk_text)\n\n# Add button\nb = DirectCheckButton(text = \"CheckButton\" ,scale=.05,command=setText)\n\n# Run the tutorial\nbase.run()\n\nProgrammatically changing the indicatorValue\n\nIf you programmatically want to change the checkbutton's indicatorValue, you need to call setIndicatorValue afterwards to update the checkbutton, like:\n\nb[\"indicatorValue\"] = True\nb.setIndicatorValue()\n\nboxImage and other box* keywords",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_416",
    "parent": "processed_documents/context_documents/a29373aa_eedf20ea_directcheckbutton.json",
    "chunk_number": 6114
  }
}