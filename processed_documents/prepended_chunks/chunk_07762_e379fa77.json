{
  "content": "The provided chunk is situated within a section discussing various methods for handling keyboard input, particularly focusing on player movement control using key polling. It illustrates how to continuously check if the 'W' or 'S' keys are pressed to adjust the player's position, highlighting the use of `base.mouseWatcherNode.is_button_down` for polling. This approach is contrasted with event-driven methods and precedes a discussion on keystroke events not being suitable for text input due to complexities with international characters requiring multiple key presses.\n\n# Check if the player is holding W or S\n    is_down = base.mouseWatcherNode.is_button_down\n\n    if is_down(forward_button):\n        speed += forward_speed\n\n    if is_down(backward_button):\n        speed -= backward_speed\n\n    # Move the player\n    y_delta = speed * globalClock.get_dt()\n    self.player.set_y(self.player, y_delta)\n\nKeystroke events\n\nThe interfaces described above are useful for listening for predetermined key presses, like navigational keys or hot keys, but not for text input. Not only are there no events for fancy keys in foreign languages, but a single key press may not necessarily associate with a single letter to be entered in a text field. This is because some international characters can only be typed using multiple key presses.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_711",
    "parent": "processed_documents/context_documents/66219fe4_571e1192_keyboard-support.json",
    "chunk_number": 7762
  }
}