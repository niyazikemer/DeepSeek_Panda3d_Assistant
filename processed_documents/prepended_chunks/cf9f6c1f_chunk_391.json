{
  "content": "This chunk is part of an animation system within a 3D modeling/game development editor. It handles the creation of interpolation (lerp) functions for animating object properties between keyframes. The code generates smooth transitions between values stored in `keyFramesInfo` by creating LerpFunc instances for each property, using frame duration calculations and appending them to sequences for parallel execution during animation playback.\n\nfor key in range(0,len(keyFramesInfo)-1):\n                                myLerp = LerpFunc(self.curveLerpFuncs[property[AG.PROP_NAME]][1],fromData=float(keyFramesInfo[key][AG.FRAME]),toData=float(keyFramesInfo[key+1][AG.FRAME]),duration = float(keyFramesInfo[key+1][AG.FRAME]-keyFramesInfo[key][AG.FRAME])/float(24),blendType = 'noBlend',extraArgs = [[node[OG.OBJ_NP], keyFramesInfo, key]])\n                                mysequence.append(myLerp)\n\n                            myLerp = LerpFunc(self.curveLerpFuncs[property[AG.PROP_NAME]][0],fromData=float(keyFramesInfo[len(keyFramesInfo)-1][AG.VALUE]),toData=float(keyFramesInfo[len(keyFramesInfo)-1][AG.VALUE]),duration = float(endFrame-keyFramesInfo[len(keyFramesInfo)-1][AG.FRAME])/float(24),blendType = 'noBlend',extraArgs = [node[OG.OBJ_NP]])\n                            mysequence.append(myLerp)\n                            parallel.append(mysequence)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_26",
    "parent": "processed_documents/context_documents/c3433415_AnimMgrBase.json",
    "chunk_number": 391
  }
}