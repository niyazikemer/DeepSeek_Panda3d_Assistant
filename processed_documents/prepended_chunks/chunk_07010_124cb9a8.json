{
  "content": "The document discusses strategies for optimizing performance in Panda3D by minimizing the number of polygons (meshes) sent to the graphics hardware. The chunk focuses on terrain rendering with GeoMipTerrain, addressing how it can create a large mesh count and suggesting methods like increasing block size or enabling AutoFlattening to reduce this issue while maintaining functionality.\n\nTerrain\n\nIf you are using the GeoMipTerrain <geometrical-mipmapping> for terrain rendering, that might also result in a large mesh count. (You can check the block count by calling terrain.getRoot().analyze().) If it is too high, try increasing the block size, or enable AutoFlattening, which will reduce the block count to only one. The autoflatten function was created because normally you can't flatten a terrain using the normal flattenX methods, because this will interfere with the GeoMipTerrain's updating system.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_567",
    "parent": "processed_documents/context_documents/342ef41e_d207c8ca_too-many-meshes.json",
    "chunk_number": 7010
  }
}