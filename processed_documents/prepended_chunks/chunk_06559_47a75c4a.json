{
  "content": "The document discusses how to alter the appearance of models through render attributes, including applying colors, lights, fog, transparency, and more. It explains that these attributes collectively form an object's render state and can be stored on any node in the scene graph, propagating to all child nodes unless overridden. The chunk provides a concise overview of render attribute basics, propagation, and direct assignment methods (e.g., Python `nodePath.\n\nRender Attributes\n\nRender Attributes Basics\n\nAfter loading a model, you can alter its appearance by altering its attributes. For example, you can apply a color to the model, you can illuminate it with lights, you can cause it to be obscured by fog, you can make it partially transparent, and so forth. All of these are called render attributes.\n\nCollectively, all the attributes of an object are called the object's render state, or sometimes just the object's state.\n\nPropagation of Attributes\n\nAttributes can be stored on any node of the scene graph; setting an attribute on a node automatically applies it to that node as well as to all of the children of the node (unless an override is in effect, but that's a more advanced topic).\n\nIt is possible to create these attributes and assign them to a node directly:\n\npython\n\nnodePath.node().setAttrib(attributeObject)\n\ncpp\n\nnode_path.node()->set_attrib(attributeObject);",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_508",
    "parent": "processed_documents/context_documents/330e2d4e_eeecab0d_index.json",
    "chunk_number": 6559
  }
}