{
  "content": "This chunk belongs to a method within a class handling user interface interactions, specifically managing event bindings for a time input component in an object property panel of a 3D application editor. The code binds mouse entry and exit events to specific handlers, ensuring that user interactions with the time UI elements trigger appropriate updates or actions in the application's object management system.\n\n```python\n\"\"\"\nBindings for Time Input UI Elements\n\nManages event bindings for AM/PM, hour, and minute input fields.\nHandles mouse entry/exits and value updates for time-based properties.\nEnsures UI interactions propagate changes to object properties.\n\"\"\"\n\ndef bindFunc(self, inFunc, outFunc, valFunc=None):\n    # Bind enter/exit events\n    self. uiAmPm .Bind(wx.EVT_ENTER_WINDOW, inFunc)\n    self. uiAmPm .Bind(wx.EVT_LEAVE_WINDOW, outFunc)\n    # Similar bindings for hour and minute fields\n    ...\n    if valFunc:\n        # Bind value change events to update function\n        self. uiAmPm .Bind(self.eventType, valFunc)\n        # Repeat for other UI components\n```\n\nminVal = float(self.uiMin.GetStringSelection())\n        value = float(hourVal) + minVal / 60.0\n        return value\n\n    def bindFunc(self, inFunc, outFunc, valFunc = None):\n        self.uiAmPm.Bind(wx.EVT_ENTER_WINDOW, inFunc)\n        self.uiAmPm.Bind(wx.EVT_LEAVE_WINDOW, outFunc)\n        self.uiHour.Bind(wx.EVT_ENTER_WINDOW, inFunc)\n        self.uiHour.Bind(wx.EVT_LEAVE_WINDOW, outFunc)\n        self.uiMin.Bind(wx.EVT_ENTER_WINDOW, inFunc)\n        self.uiMin.Bind(wx.EVT_LEAVE_WINDOW, outFunc)\n        if valFunc:\n            self.uiAmPm.Bind(self.eventType, valFunc)\n            self.uiHour.Bind(self.eventType, valFunc)\n            self.uiMin.Bind(self.eventType, valFunc)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_22",
    "parent": "processed_documents/context_documents/2853beeb_ObjectPropertyUI.json",
    "chunk_number": 328
  }
}