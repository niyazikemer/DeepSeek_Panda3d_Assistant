{
  "content": "The provided chunk is part of a class that implements a timeline or animation editor interface. The code in the chunk is responsible for drawing keyframe markers (as red vertical lines) on a custom control surface, handling window resize events to maintain visual consistency, and processing left mouse button click events for user interaction with the timeline. This functionality is likely integrated into an animation management system within a graphical application development environment or game engine editor.\n\ndc.SetPen(oldPen)\n        dc.SetBrush(oldBrush)\n        dc.SetLogicalFunction(oldMode)\n\n    def DrawKeys(self, dc):\n        if len(self._mainDialog.keys) != 0:\n            for key in self._mainDialog.keys:\n                keyFrame = key\n                i = keyFrame-self.sliderStartFrame\n                pos = float(self.unitWidth)*float(i)\n\n                oldPen, oldBrush, oldMode = dc.GetPen(), dc.GetBrush(), dc.GetLogicalFunction()\n\n                dc.SetPen(wx.Pen(\"red\"))\n                dc.SetBrush(wx.Brush(\"red\"))\n                dc.SetLogicalFunction(wx.AND)\n                dc.DrawLine(pos, float(0), pos, self.h)\n\n                dc.SetPen(oldPen)\n                dc.SetBrush(oldBrush)\n                dc.SetLogicalFunction(oldMode)\n        else:\n            pass\n\n    def OnSize(self, evt):\n        self.InitBuffer()\n\n    def OnLeftDown(self, evt):\n        point = (evt.GetX(), evt.GetY())",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_49",
    "parent": "processed_documents/context_documents/9260a80b_AnimControlUI.json",
    "chunk_number": 661
  }
}