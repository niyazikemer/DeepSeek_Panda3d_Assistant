{
  "content": "The given code chunk is part of a larger Python script managing particle effects. It specifically handles adding color interpolation functions to control how particle colors transition over time in a renderer. The chunk deals with two types of color transitions: linear and step wave, writing specific function calls based on the type of interpolation. This functionality is encapsulated within a method that adds interpolation functions for various particle attributes, enabling dynamic visual effects in particle systems.\n\nelif typ == 'ColorInterpolationFunctionLinear':\n                        c_a = fun.getColorA()\n                        c_b = fun.getColorB()\n                        file.write(targ+'.renderer.getColorInterpolationManager().addLinear('+repr(t_b)+','+repr(t_e)+','+ \\\n                                   'Vec4('+repr(c_a[0])+','+repr(c_a[1])+','+repr(c_a[2])+','+repr(c_a[3])+'),' + \\\n                                   'Vec4('+repr(c_b[0])+','+repr(c_b[1])+','+repr(c_b[2])+','+repr(c_b[3])+'),'+repr(mod)+')\\n')\n                    elif typ == 'ColorInterpolationFunctionStepwave':\n                        c_a = fun.getColorA()\n                        c_b = fun.getColorB()\n                        w_a = fun.getWidthA()\n                        w_b = fun.getWidthB()\n                        file.write(targ+'.renderer.getColorInterpolationManager().addStepwave('+repr(t_b)+','+repr(t_e)+','+ \\",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_69",
    "parent": "processed_documents/context_documents/b3935c67_Particles.json",
    "chunk_number": 1279
  }
}