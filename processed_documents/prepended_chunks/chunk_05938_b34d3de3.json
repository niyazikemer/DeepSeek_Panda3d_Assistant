{
  "content": "This chunk is located in a section of the document dedicated to explaining how to load model files in Panda3D using Python or C++ code. The section emphasizes the use of relative paths, model cache optimization, and considerations for path formatting across different operating systems. It serves as an introduction to loading models before discussing advanced topics like reparenting models to the scene graph, caching optimizations, compressed models, and asynchronous loading techniques.\n\nLoading a Model File\n\nYou can load a model file using the following code:\n\npython\n\nmyNodePath = loader.loadModel(\"path/to/models/myModel.egg\")\n\nThis call can take an absolute or relative path, although it is strongly recommended to use relative paths only. These relative paths are resolved using the \"model path\", which is set by default to the path of the main Python file. Do note that the path always uses forward slashes, even on Windows. See filename-syntax for more information about filenames.\n\ncpp\n\nNodePath myNodePath =\n  window->load_model(framework.get_models(), \"path/to/models/myModel.egg\");\n\nThis call can take an absolute or relative path, although it is strongly recommended to use relative paths only. These relative paths are resolved using the \"model path\", which is set by default to the path of the compiled executable file. Do note that the path always uses forward slashes, even on Windows. See filename-syntax for more information about filenames.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_375",
    "parent": "processed_documents/context_documents/f90847cd_c3bbc946_model-files.json",
    "chunk_number": 5938
  }
}