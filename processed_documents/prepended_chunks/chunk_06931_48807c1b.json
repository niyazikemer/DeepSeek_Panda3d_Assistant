{
  "content": "The chunk provides an introductory explanation within a Cg tutorial on why vertex shaders output `float4` instead of `float3`, emphasizing the necessity for operations like matrix multiplication and homogeneous coordinates, foundational to 3D graphics transformations.\n\nThe only requirements for a vertex shader is that it has to generate a position. In Panda, objects move in three dimensions so having an output of 3 positions should be enough but on reading the vertex shader you can see that its output is a float4. A float4 is an array of four float values, so what possible use is the fourth value to the vertex shader? With this fourth value, you can do some fancy stuff that you cannot do with a float3. In later examples we will multiply the output with a float4 matrix, in other words 16 float values. A float3 cannot be multiplied by a float4 matrix. You can think of the fourth value in the same way as the fourth component in an RGBA color, the alpha component. Its not often necessary but it allows you to do interesting things.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_552",
    "parent": "processed_documents/context_documents/c21812f2_917f801a_part-2.json",
    "chunk_number": 6931
  }
}