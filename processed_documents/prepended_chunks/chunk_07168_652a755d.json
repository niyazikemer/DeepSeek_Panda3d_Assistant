{
  "content": "The \"Work groups\" section explains the concept of how compute shader invocations are organized into batches (work groups) for parallel execution. It is crucial for understanding how compute shaders differ from regular shaders in terms of execution flow, as it specifies the amount of simultaneous invocations. This concept underpins the execution model and performance considerations when working with compute shaders.\n\nContext: \nThe \"Work groups\" section should be situated early in the document, likely after introducing the basic concepts of compute shaders but before diving into specific implementation details like texture setup, memory barriers, or image operations. It provides foundational knowledge necessary for understanding how to structure and optimize compute shader execution within Panda3D.\n\nWork groups\n\nNormally, a regular shader is executed on a predetermined set of data (such as an amount of vertices or pixels), in which case the amount of shader invocations is known beforehand. However, since compute shaders can operate on an arbitrary set of data, the amount of invocations has to be explicitly specified.\n\nCompute shader invocations are divided up in batches called work groups, which specify how many invocations happen simultaneously. The different invocations in a work group may occur at the same time, but you should never rely on the different work groups being executed in a particular order or simultaneous to each other; this is up to the graphics driver to decide.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_599",
    "parent": "processed_documents/context_documents/98f01149_902376c6_compute-shaders.json",
    "chunk_number": 7168
  }
}