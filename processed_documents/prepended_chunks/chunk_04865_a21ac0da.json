{
  "content": "The chunk contains key initialization code within a class (likely `ShowBase` or similar), defining important components such as physics management flags (`physicsMgr`, `physicsMgrEnabled`, `physicsMgrAngular`), input device tracking via `InputDeviceManager`, statistics creation, audio focus status (`AppHasAudioFocus`), and access to the global clock for time synchronization. These initializations set up core functionality for managing physics simulations, handling input devices, tracking performance stats, monitoring audio focus state, and synchronizing timing across the application.\n\n#: If `enableParticles()` has been called, this is the physics manager\n        #: as imported from :mod:`direct.showbase.PhysicsManagerGlobal`.\n        self.physicsMgr = None\n        self.physicsMgrEnabled = False\n        self.physicsMgrAngular = False\n\n        #: This is the global :class:`~panda3d.core.InputDeviceManager`, which\n        #: keeps track of connected input devices.\n        self.devices = InputDeviceManager.getGlobalPtr()\n        self.__inputDeviceNodes: dict[InputDevice, NodePath] = {}\n\n        self.createStats()\n\n        self.AppHasAudioFocus = True\n\n        # Get a pointer to Panda's global ClockObject, used for\n        # synchronizing events between Python and C.\n        clock = ClockObject.getGlobalClock()\n\n        #: This is the global :class:`~panda3d.core.ClockObject`.\n        self.clock = clock",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_283",
    "parent": "processed_documents/context_documents/be1afc59_ShowBase.json",
    "chunk_number": 4865
  }
}