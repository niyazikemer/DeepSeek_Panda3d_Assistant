{
  "content": "This chunk of code is part of the initialization and management logic for the `EventGroup` class in a Python module designed to handle grouped event processing. The code includes the handling of sub-events during initialization, methods for destroying event group resources (`destroy()`), retrieving the name of the event group (`getName()`), accessing the completion event name (`getDoneEvent()`), and checking if the event group has completed (`isCompleted()`). These methods provide core functionality for managing and tracking grouped events.\n\nif subEvents is not None:\n            # add the events that were passed in to start with, more may be added\n            # later via newEvent()\n            for event in subEvents:\n                self.addEvent(event)\n\n    def destroy(self):\n        if hasattr(self, '_name'):\n            # keep this around\n            #del self._doneEvent\n            del self._name\n            del self._subEvents\n            del self._completedEvents\n            self.ignoreAll()\n\n    def getName(self):\n        return self._name\n\n    def getDoneEvent(self):\n        return self._doneEvent\n\n    def isCompleted(self):\n        return self._completed",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_253",
    "parent": "processed_documents/context_documents/3322f876_EventGroup.json",
    "chunk_number": 4443
  }
}