{
  "content": "This chunk appears within a section discussing Python debugging techniques, specifically focusing on the pdb module. It follows an explanation of using Python's interactive mode and base.run() in Panda3D programs, providing detailed examples of running code under pdb control and handling exceptions. The context includes information about inspect and traceback modules as additional tools for debugging.\n\nThe debugger's prompt is \"(Pdb) \". There are many ways to enter the debugger. Typical usage to run a program under control of the debugger is:\n\n>>> import pdb >>> import <mymodule> >>> pdb.run('mymodule.test()') > <string>(0)?() (Pdb) continue > <string>(1)?() (Pdb) continue NameError: 'spam' <string>(1)?() (Pdb)\n\nDetailed information about pdb can be found here. In addition to pdb, Python also has two modules called inspect and traceback. inspect supplies functions to extract information from all kinds of objects, including the Python call stack and source files. The traceback module lets you extract, format and output information about tracebacks as normally produced by uncaught exceptions.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_494",
    "parent": "processed_documents/context_documents/fb9901af_fc47b5ee_python-debugger.json",
    "chunk_number": 6487
  }
}