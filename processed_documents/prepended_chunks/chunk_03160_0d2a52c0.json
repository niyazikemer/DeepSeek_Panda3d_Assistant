{
  "content": "The chunk describes the `bindAnim` method within an actor class, which is used to bind specific animations to certain parts or levels of detail (LODs) in a 3D model. This method ensures that animations are loaded and bound immediately when `allowAsyncBind` is set to False, guaranteeing availability upon return. It's part of a comprehensive suite of tools for managing animations across different parts and LODs within the actor framework.\n\ndef bindAnim(self, animName, partName = None, lodName = None,\n                 allowAsyncBind = False):\n        \"\"\"\n        Binds the named animation to the named part and/or lod.  If\n        allowAsyncBind is False, this guarantees that the animation is\n        bound immediately--the animation is never bound in a\n        sub-thread; it will be loaded and bound in the main thread, so\n        it will be available by the time this method returns.\n\n        The parameters are the same as that for getAnimControls().  In\n        fact, this method is a thin wrapper around that other method.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3160
  }
}