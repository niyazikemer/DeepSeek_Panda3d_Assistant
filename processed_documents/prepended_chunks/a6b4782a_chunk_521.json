{
  "content": "The `updateObjectProperties` function is used to modify an object's attributes based on saved values, ensuring proper restoration after reloading a level. The `traverse` method systematically collects data from the scene graph for serialization during the save process.\n\n**Succinct Context:**\n\nThese functions are integral to the ObjectEditor's functionality, managing object properties during save and load operations. `updateObjectProperties` ensures objects are correctly restored upon loading by applying saved attribute values, while `traverse` gathers necessary data from the scene graph for proper serialization when saving. Together, they facilitate accurate object state management in the 3D scene editor.\n\ndef updateObjectProperties(self, nodePath, propValues):\n        \"\"\"\n        When a saved level is loaded,\n        update an object's properties\n        And call update function if defined.\n        \"\"\"\n        obj = self.findObjectByNodePath(nodePath)\n\n        if obj:\n            for propName in propValues:\n                self.updateObjectPropValue(obj, propName, propValues[propName])\n\n    def traverse(self, parent, parentId = None):\n        \"\"\"\n        Trasverse scene graph to gather data for saving\n        \"\"\"\n        for child in parent.getChildren():\n            if child.hasTag('OBJRoot') and not child.hasTag('Controller'):\n                obj = self.findObjectByNodePath(child)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_34",
    "parent": "processed_documents/context_documents/a86148df_ObjectMgrBase.json",
    "chunk_number": 521
  }
}