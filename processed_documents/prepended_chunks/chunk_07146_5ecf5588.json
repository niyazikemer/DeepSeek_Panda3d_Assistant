{
  "content": "The chunk describes how to set up texture minification using FT_linear_mipmap_inear filter mode in Python and C++ code examples, followed by an explanation of Anisotropic Filtering, including how to enable it with a specified degree. This content appears in the section discussing advanced texture filtering techniques after covering mipmapping and before other related topics.\n\npython\n\ntexture.setMinfilter(SamplerState.FT_linear_mipmap_linear)\n\ncpp\n\ntexture->set_minfilter(SamplerState::FT_linear_mipmap_linear);\n\nAnisotropic Filtering\n\nThere is one final addition to the texture filtering equation: you can enable anisotropic filtering on top of any of the above filter modes, which enables a more expensive, slightly slower rendering mode that generally produces superior effects. In particular, anisotropic filtering is usually better at handling texture minification than mipmapping, and doesn't tend to blur out the texture so much.\n\nTo enable anisotropic filtering, you specify the degree:\n\npython\n\ntexture.setAnisotropicDegree(degree)\n\ncpp\n\ntexture->set_anisotropic_degree(degree);",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_592",
    "parent": "processed_documents/context_documents/53d984fb_f9100a09_texture-filter-types.json",
    "chunk_number": 7146
  }
}