{
  "content": "To create a collector as a child of another collector using `PStatCollector`, follow these steps:\n\n1. **Create the parent collector**:\n   ```python\n   draw = PStatCollector(\"Draw\")\n   ```\n\n2. **Define the child collector under the parent** by passing both the parent instance and the child name:\n   ```python\n   flip_collector = PStatCollector(draw, \"Flip\")\n   ```\n\nThis approach allows for dynamically creating nested collectors, enhancing the structure of your performance analysis data.\n\n```context\nCreating a PStatCollector as a child of another collector involves specifying the parent explicitly. This method is particularly useful for dynamic collector definitions.\n```\n\nYou can also define a collector as a child of another collector by giving the parent collector explicitly followed by the name of the child collector alone, which is handy for dynamically-defined collectors. For instance, PStatCollector(draw, \"Flip\") defines the same collector named above, assuming that draw is the result of the PStatCollector(\"Draw\") constructor.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_653",
    "parent": "processed_documents/context_documents/778374a5_284cb360_using-pstats.json",
    "chunk_number": 7485
  }
}