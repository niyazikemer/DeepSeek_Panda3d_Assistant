{
  "content": "This chunk is the introductory section of the document about MeshDrawer, explaining what MeshDrawer is, its use cases, and how to create and set up a MeshDrawer instance with code examples in both Python and C++. It serves as the foundation for understanding the subsequent detailed information about configuring and utilizing MeshDrawer effectively.\n\nMeshDrawer\n\n.MeshDrawer is a class with which you can draw geometry every frame as fast as possible. Common cases where you might want to use it include: projectiles such as bullets, trails, and laser beams; and UI elements such as health bars, labels, icons, and motion lines.\n\nYou create a MeshDrawer like this:\n\npython\n\ngenerator = MeshDrawer()\ngenerator.setBudget(1000)\ngeneratorNode = generator.getRoot()\ngeneratorNode.reparentTo(render)\n\ncpp\n\n#include \"meshDrawer.h\"\n...\nMeshDrawer generator = MeshDrawer();\ngenerator.set_budget(1000);\nNodePath generatorNode = generator.get_root();\ngeneratorNode.reparent_to(window->get_render());\n\nBasically this creates a MeshDrawer that will draw at most 1000 triangles or 500 billboarded quads on screen. Then it gets the root node inside the MeshDrawer that has the geom that will be morphed into any thing you like.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_460",
    "parent": "processed_documents/context_documents/97490678_7fe92637_meshdrawer.json",
    "chunk_number": 6349
  }
}