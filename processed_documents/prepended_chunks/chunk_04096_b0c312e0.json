{
  "content": "The provided chunk of code is part of the `handleAvatarControls` method within a class that manages avatar movement and physics. This specific section handles the logic for initiating a jump when certain conditions are met, such as the jump button being pressed (`jump`) and the avatar being allowed to jump (`mayJump`). It updates the avatar's velocity using `self.lifter.addVelocity`, sends a \"jumpStart\" message via messenger, and sets the `isAirborne` flag to indicate the avatar is no longer on the ground.\n\nself.priorParent = Vec3.zero()\n            if jump and self.mayJump:\n                # The jump button is down and we're close\n                # enough to the ground to jump.\n                self.lifter.addVelocity(self.avatarControlJumpForce)\n                messenger.send(\"jumpStart\")\n                self.isAirborne = 1\n                assert self.debugPrint(\"isAirborne 1 due to jump\")\n        else:\n            if self.isAirborne == 0:\n                assert self.debugPrint(\"isAirborne 1 due to isOnGround() false\")\n            self.isAirborne = 1",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_226",
    "parent": "processed_documents/context_documents/64d5e226_GravityWalker.json",
    "chunk_number": 4096
  }
}