{
  "content": "This chunk implements a `register_resource` method within an `AndroidManifest` class that parses Android manifest XML files. The method assigns unique resource IDs to attributes by type and name during XML parsing.\n\nThe code:\n1. Maintains resource type mappings\n2. Handles new or existing resources \n3. Constructs unique resource IDs using Android's standard format (0x7fXXXXXX)\n4. Returns the generated resource ID\n\nThis chunk is used to manage resource definitions encountered while parsing the manifest file, ensuring proper resource ID assignment according to Android conventions.\n\n```text\nRegisters a new resource identifier during XML parsing.\nHandles both known and unknown resource types,\nassigning unique IDs following Android's naming convention.\n```\n\nThe succinct context provides searchability for this specific chunk by highlighting its purpose in resource management during XML parsing of an Android manifest.\n\nresources = self.resources[type]\n        if name in resources:\n            entry_id = resources.index(name)\n        else:\n            entry_id = len(resources)\n            resources.append(name)\n\n        id = (0x7f << 24) | (type_id << 16) | (entry_id)\n        return id\n\n    def dumps(self):\n        return self.root.SerializeToString()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_136",
    "parent": "processed_documents/context_documents/d67df3a6__android.json",
    "chunk_number": 2215
  }
}