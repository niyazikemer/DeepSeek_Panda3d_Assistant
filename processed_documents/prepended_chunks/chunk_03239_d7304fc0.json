{
  "content": "This chunk is part of a method for handling 2D camera-constrained translation of objects in a 3D viewport, enabling users to move objects in the XY plane relative to the camera's view while incorporating keyboard modifiers (Shift/Control) to adjust behavior. The code initializes scaling factors and projection points to facilitate precise object manipulation within the scene.\n\ndef xlateCamXY(self, state):\n        \"\"\"Constrained 2D motion perpendicular to camera's image plane\n        This moves the object in the camera's XY plane if shift is held\n        Moves object toward camera if control is held\n        \"\"\"\n        # Reset scaling init flag\n        self.fScaleInit = 1\n        # Now, where is the widget relative to current camera view\n        vWidget2Camera = ShowBaseGlobal.direct.widget.getPos(ShowBaseGlobal.direct.camera)\n        # If this is first time around, record initial y distance\n        if self.fHitInit:\n            self.fHitInit = 0\n            # Use distance to widget to scale motion along Y\n            self.xlateSF = Vec3(vWidget2Camera).length()\n            # Get widget's current xy coords in screen space\n            coaCenter = getNearProjectionPoint(ShowBaseGlobal.direct.widget)\n            self.deltaNearX = coaCenter[0] - ShowBaseGlobal.direct.dr.nearVec[0]\n        # Which way do we move the object?",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_179",
    "parent": "processed_documents/context_documents/4f678cc8_DirectManipulation.json",
    "chunk_number": 3239
  }
}