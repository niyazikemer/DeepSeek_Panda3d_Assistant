{
  "content": "The chunk contains two helper methods (`__closeLogFile` and `__getTimeStamp`) within the Logger class. These methods support the core logging functionality by managing file closure and timestamp generation, respectively. The `__closeLogFile` method ensures proper cleanup of the log file handle, while `__getTimeStamp` calculates and formats the time elapsed since logging started to generate a formatted timestamp string for log entries.\n\ndef __closeLogFile(self) -> None:\n        \"\"\"\n        Close the error/warning output file\n        \"\"\"\n        if self.__logFile is not None:\n            self.__logFile.close()\n\n    def __getTimeStamp(self) -> str:\n        \"\"\"\n        Return the offset between current time and log file startTime\n        \"\"\"\n        t = time.time()\n        dt = t - self.__startTime\n        days, dt = divmod(dt, 86400)\n        hours, dt = divmod(dt, 3600)\n        minutes, dt = divmod(dt, 60)\n        seconds = int(math.ceil(dt))\n        return \"%02d:%02d:%02d:%02d: \" % (days, hours, minutes, seconds)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_103",
    "parent": "processed_documents/context_documents/ec704797_Logger.json",
    "chunk_number": 1671
  }
}