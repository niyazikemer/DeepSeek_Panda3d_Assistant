{
  "content": "The provided code chunk consists of helper functions (`glob1`, `glob0`, and `has_magic`) within the module that reimplements Python's `glob` functionality using Panda's virtual file system. These functions handle non-recursive directory listing based on shell-style patterns, supporting both bytes and string paths for compatibility with different operating systems.\n\n```plaintext\nHelper functions for non-recursive directory listing and pattern matching in a glob implementation integrated with Panda's vfs.\n```\n\nThe `glob1` function filters directory contents by a given pattern, while `glob0` checks for exact file existence. The `has_magic` function detects wildcard characters to determine if a pattern is needed.\n\n```plaintext\nHelper functions (`glob1`, `glob0`, `has_magic`) for non-recursive globbing and pattern detection.\n```\n\nThese functions are part of the module's core functionality, enabling compatibility with Panda's vfs constructs while maintaining Python's familiar glob interface.\n\n```plaintext\nCore helper functions supporting shell-style pattern matching in directory listings.\n```\n\nThe chunk includes essential utilities that underpin the main `glob` and `iglob` functionalities by handling pattern-based file discovery without recursion.\n\n```plaintext\nNon-recursive glob helpers for listing files/directories based on shell patterns.\n```\n\nThese functions are integral to the module's operation, enabling precise control over how files and directories are matched against specified patterns.\n\n```plaintext\nHelper functions enabling non-recursive globbing with support for wildcards in directory listings.\n```\n\nThe chunk contains critical utilities that facilitate pattern-based file discovery within Panda's vfs, ensuring compatibility with Python's expected behavior.\n\n```plaintext\nNon-recursive directory listing helpers using shell-style patterns for file matching.\n```\n\nThese functions are essential for the module to correctly implement and extend glob functionality within the context of Panda's virtual file system.\n\n```plaintext\nHelper functions providing non-recursive globbing capabilities with support for pattern matching and wildcard detection.\n```\n\ndef glob1(dirname, pattern):\n    if not dirname:\n        dirname = os.curdir\n    try:\n        names = file.listdir(dirname)\n    except os.error:\n        return []\n    if pattern[0] != '.':\n        names = [x for x in names if x[0] != '.']\n    return fnmatch.filter(names, pattern)\n\ndef glob0(dirname, basename):\n    if basename == '':\n        # repr(os.path.split()) returns an empty basename for paths ending with a\n        # directory separator.  'q*x/' should match only directories.\n        if file.isdir(dirname):\n            return [basename]\n    else:\n        if file.lexists(os.path.join(dirname, basename)):\n            return [basename]\n    return []\n\n\ndef has_magic(s):\n    if isinstance(s, bytes):\n        return b'*' in s or b'?' in s or b'[' in s\n    else:\n        return '*' in s or '?' in s or '[' in s",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_203",
    "parent": "processed_documents/context_documents/29a1b250_glob.json",
    "chunk_number": 3775
  }
}