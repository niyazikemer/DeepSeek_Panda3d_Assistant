{
  "content": "The chunk discusses the advantages of the glTF format for supporting physically-based rendering (PBR) materials and introduces a third-party plugin, panda3d-gltf, for enhanced functionality in Panda3D, while mentioning the need for additional tools like custom shaders or add-ons. This content appears early in the document after an introduction to glTF as an industry standard 3D format and precedes detailed technical sections on handling tangent vectors, distributing models, and external resources.\n\nA particular advantage of this format is its support for PBR (physically-based rendering) materials, which are better supported with glTF than with Egg, although at the moment you will need a custom shader or a third-party add-on such as panda3d-simplepbr to render these materials correctly. glTF is also the format of choice when exporting models from Blender 2.80 and above, as explained here <converting-from-blender>.\n\nInstalling the Plug-In\n\nThere are two ways to load glTF files. By default, Panda3D will load glTF files via the Assimp plug-in <assimp-loader>, but the quality of its converter is not very good. Instead, there is a high quality third-party plug-in for this purpose called panda3d-gltf. It can be installed by typing the following pip command:\n\npython -m pip install -U panda3d-gltf\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_610",
    "parent": "processed_documents/context_documents/e7861abe_e146aead_gltf-files.json",
    "chunk_number": 7223
  }
}