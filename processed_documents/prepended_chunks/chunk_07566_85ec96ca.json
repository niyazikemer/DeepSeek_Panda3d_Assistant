{
  "content": "The chunk discusses loading and understanding cube maps in Panda3D, following an explanation of their structure and usage compared to 3D textures.\n\nContext: The section explains how to load a cube map from six image files using specific filenames, similar to loading a 3D texture.\n\nNote that, while a 3-D texture assigns a different pixel in the texture to every point within a volume, a cube map assigns a different pixel in the texture to every direction from the center.\n\nYou can load a cube map from a series of six image files, very similar to the way you load a 3-D texture:\n\ntex = loader.loadCubeMap('cubemap_#.png')\n\nAs with a 3-D texture, the hash mark (\"#\") in the filename will be filled in with the image sequence number, which in the case of a cube map will be a digit from 0 to 5. The above example, then, will load the six images \"cubemap_0.png\", \"cubemap_1.png\", \"cubemap_2.png\", \"cubemap_3.png\", \"cubemap_4.png\", and \"cubemap_5.png\", and assemble them into one cube map.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_666",
    "parent": "processed_documents/context_documents/332ad9ff_f8ffc830_cube-maps.json",
    "chunk_number": 7566
  }
}