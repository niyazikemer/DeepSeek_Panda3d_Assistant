{
  "content": "The chunk provides an example of applying a procedurally generated 3-D wood grain texture to a teapot model in Panda3D. It demonstrates loading the model, setting up texture generation using world position, adjusting texture parameters, and applying the 3-D texture. This serves as an illustration of how 3-D textures can be used for creating visually complex materials like wood grain, even though such textures are rarely used in games due to their memory requirements and complexity compared to procedural shaders.\n\nteapot = loader.loadModel('teapot.egg')\nteapot.setTexGen(TextureStage.getDefault(), TexGenAttrib.MWorldPosition)\nteapot.setTexProjector(TextureStage.getDefault(), render, teapot)\nteapot.setTexPos(TextureStage.getDefault(), 0.44, 0.5, 0.2)\nteapot.setTexScale(TextureStage.getDefault(), 0.2)\n\ntex = loader.load3DTexture('woodgrain-#.png')\nteapot.setTexture(tex)\n\nHowever, even procedurally-generated 3-D textures like this are used only occasionally. If the algorithm to generate your texture is not too complex, it may make more sense to program a pixel shader <shaders> to generate the texture implicitly, as your models are rendered.\n\nStill, even if it is used only occasionally, the 3-D texture remains a powerful rendering technique to keep in your back pocket.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_532",
    "parent": "processed_documents/context_documents/a0ee1c50_bd40a28d_3d-textures.json",
    "chunk_number": 6666
  }
}