{
  "content": "The chunk provides an introductory explanation of collision bitmasks in Panda3D, detailing their purpose and the distinction between \"from\" and \"into\" masks. This section sets the foundation for understanding how collision detection systems are configured and managed within the engine, making it essential reading for developers looking to implement or modify collision behavior in their applications.\n\nCollision Bitmasks\n\nBy default, every \"from\" object added to a CollisionTraverser will test for collisions with every other CollisionNode in the scene graph, and will not test for collisions with visible geometry. For simple applications, this is sufficient, but often you will need more control.\n\nThis control is provided with the collide masks. Every CollisionNode has two collide masks: a \"from\" mask, which is used when the CollisionNode is acting as a \"from\" object (i.e. it has been added to a CollisionTraverser <collision-traversers>), and an \"into\" mask, which is used when the node is acting as an \"into\" object (i.e. it is in the scene graph, and a from object is considering it for collisions).\n\nIn addition, visible geometry nodes--that is, GeomNodes--also have an \"into\" mask, so that visible geometry can serve as an \"into\" object also. (However, only a CollisionNode can serve as a \"from\" object.)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_725",
    "parent": "processed_documents/context_documents/8c4f78b1_4a8f1002_collision-bitmasks.json",
    "chunk_number": 7836
  }
}