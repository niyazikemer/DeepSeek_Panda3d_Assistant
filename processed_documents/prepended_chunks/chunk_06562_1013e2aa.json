{
  "content": "This section details how to utilize functions within the PandAI pathfinding system for optimal NPC navigation. It explains how to use `pathFindTo()` with either `NodePath` or `Vec3` parameters to determine paths to targets and discusses `addStaticObstacle()`, which allows NPCs to dynamically adjust their routes around added obstacles after mesh generation.\n\n(Note: The file is in .csv format)\n\naiBehaviors.pathFindTo(NodePath np, string type)\n\naiBehaviors.pathFindTo(Vec3 pos, string type)\n\nThis function finds the best path via A* algorithm (with Binary Heap optimizations) for the AI Character to reach the target destination and then invokes the path follower to make the object follow the path.\n\nIt can accept both NodePath and Vec3 as input position. NodePath is used when the destination is not static. Vec3 is used when the destination is going to be static.\n\nIf the AI Character needs to pathfind continuously(say after he has finished traversing to a position, a new destination is acquired ) then input string type as \u201caddPath\u201d else leave as default.\n\naddStaticObstacle(NodePath obstacle);\n\nThis function is used if the programmer wants to add Obstacles after the mesh has been generated (Say a stack of boxes fall down and blocks the way) to trigger events. It adds a static obstacle to the navigation mesh and pathfinds around it.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_509",
    "parent": "processed_documents/context_documents/f1154cc8_644d74c1_index.json",
    "chunk_number": 6562
  }
}