{
  "content": "The chunk discusses how Panda3D loads models for the first time, caches them in memory for faster subsequent access, returns a NodePath object to manipulate the model, handles file extension defaults, and explains placing the model into the scene graph by reparenting.\n\nThe first time you make this call for a particular model, that model is read and saved in a table in memory; on each subsequent call, the model is simply copied from the table, instead of reading the file.\n\nThis call returns a .NodePath object representing the root of the model's tree of nodes. This object is used to manipulate the model further and place it into the scene graph.\n\nNote\n\nIn many examples, you will see that the extension is omitted. In this case, Panda3D will automatically look for a file with the .egg extension.\n\nPlacing the Model in the Scene Graph\n\nThe most important manipulation is to change the parent of a node. A model is by default loaded without a parent, but it needs to be placed into an active scene graph so that Panda3D will be able to find the model's geometry and render it to the screen.\n\nThe default 3D scene graph is called ~builtins.render, and this is how to reparent the model to this scene graph:\n\npython\n\nmyModel.reparentTo(render)\n\ncpp",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_375",
    "parent": "processed_documents/context_documents/f90847cd_c3bbc946_model-files.json",
    "chunk_number": 5939
  }
}