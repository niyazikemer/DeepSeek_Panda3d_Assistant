{
  "content": "The chunk introduces new functionality related to direct manipulation of a grid system and widget positioning within a node path selection framework. The methods `toggleDirectGrid`, `toggleWidgetOnTop`, and `selectedNodePathHook` are added to manage grid enablement, widget layering above other GUI elements, and ensuring selected node paths are properly registered in the application's nodePath dictionary for tracking and manipulation.\n\n**Context:** These methods are added within a class that manages user interface controls for a 3D scene graph editor or similar direct manipulation environment. The new functionality enhances grid system toggling, widget layering, and ensures proper handling of selected node paths for consistent state management across the application.\n\ndef toggleDirectGrid(self):\n        if self.directGridEnabled.get():\n            ShowBaseGlobal.direct.grid.enable()\n        else:\n            ShowBaseGlobal.direct.grid.disable()\n\n    def toggleWidgetOnTop(self):\n        if self.directWidgetOnTop.get():\n            ShowBaseGlobal.direct.widget.setBin('gui-popup', 0)\n            ShowBaseGlobal.direct.widget.setDepthTest(0)\n        else:\n            ShowBaseGlobal.direct.widget.clearBin()\n            ShowBaseGlobal.direct.widget.setDepthTest(1)\n\n    def selectedNodePathHook(self, nodePath):\n        # Make sure node path is in nodePathDict\n        # MRM: Do we need to truncate list?\n        if isinstance(nodePath, NodePath):\n            self.addNodePath(nodePath)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_60",
    "parent": "processed_documents/context_documents/65f40986_DirectSessionPanel.json",
    "chunk_number": 955
  }
}