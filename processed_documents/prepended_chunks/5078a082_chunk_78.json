{
  "content": "The code chunk defines an event handler that customizes the Sphinx autodoc extension's behavior by controlling which class members (like methods and attributes) are included in the generated documentation. Specifically, it ensures constructors (`__init__` methods) are always documented while excluding method aliases and private functions.\n\nThis context is part of a larger setup script that configures various aspects of the documentation build process, including handling references, processing docstrings, and setting up inheritance diagrams. The chunk's purpose is to refine the autodoc output by selectively including or excluding certain members based on predefined criteria.\n\n```plaintext\nThe code defines an event handler for the Sphinx autodoc extension that determines which class members are skipped during documentation generation. It ensures that constructors (__init__ methods) are always documented and skips method aliases, enhancing control over the final documentation output.\n```\n\ndef on_autodoc_skip_member(app, what, name, obj, skip, options):\n    # Always document constructors.\n    if name == '__init__':\n        return False\n\n    # Don't document method aliases.  This also has the side-effect of\n    # excluding private members, which is OK.\n    if isinstance(obj, types.FunctionType) and obj.__name__ != name:\n        return True",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_4",
    "parent": "processed_documents/context_documents/5d34b79e_f7df0e75_6676e524_conf.json",
    "chunk_number": 78
  }
}