{
  "content": "The provided chunk appears to be part of a larger codebase that implements 3D manipulation controls, possibly within a graphical user interface (GUI) framework. The code snippet is from a class (likely `ManipulationControl` or similar), and it includes a method called `manipulateObjectCleanup()`, which handles cleanup operations after manipulating objects in 3D space. \n\nThe method:\n1. Checks if scaling operations were active (`self.fScaling3D` or `self.fScaling1D`) and transfers object handle scales.\n2. Resets the scaling flags to `0`.\n3. Highlights all selected objects.\n4. Shows all object handles (either through a widget or directly).\n5. Hides guides, which are likely visual aids for manipulation.\n\nThis method is crucial for ensuring that after an object manipulation operation (like translation, rotation, or scaling), the GUI and related structures are properly reset and cleaned up to prepare for the next interaction or to return to a default state.\n\nself.mode = None\n\n    def manipulateObjectCleanup(self):\n        direct = ShowBaseGlobal.direct\n        if self.fScaling3D or self.fScaling1D:\n            # We had been scaling, need to reset object handles\n            if hasattr(direct, 'widget'):\n                direct.widget.transferObjectHandlesScale()\n            else:\n                self.objectHandles.transferObjectHandlesScale()\n            self.fScaling3D = 0\n            self.fScaling1D = 0\n        direct.selected.highlightAll()\n        if hasattr(direct, 'widget'):\n            direct.widget.showAllHandles()\n        else:\n            self.objectHandles.showAllHandles()\n        if direct.clusterMode == 'client':\n            direct.cluster(\n                'direct.manipulationControl.objectHandles.showAllHandles()')\n        if hasattr(direct, 'widget'):\n            direct.widget.hideGuides()\n        else:\n            self.objectHandles.hideGuides()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_179",
    "parent": "processed_documents/context_documents/4f678cc8_DirectManipulation.json",
    "chunk_number": 3208
  }
}