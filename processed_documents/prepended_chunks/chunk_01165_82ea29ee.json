{
  "content": "The code chunk defines two methods: `manipulateObjectCleanupHook()` which resets the manipulandum ID to indicate no active manipulation, and `onDestroy(event)` which handles cleanup by removing event hooks, reparenting nodes, removing tasks, and deselecting markers. This is situated within a class that manages 3D object manipulation, recording, and playback functionality, specifically handling resource cleanup upon destruction or completion of operations.\n\ndef manipulateObjectCleanupHook(self, nodePathList = []):\n        # Clear flag\n        self.manipulandumId = None\n\n    def onDestroy(self, event):\n        # Remove hooks\n        for event, method in self.actionEvents:\n            self.ignore(event)\n        # remove start stop hook\n        self.ignore(self.startStopHook)\n        self.ignore(self.keyframeHook)\n        self.curveNodePath.reparentTo(self.recorderNodePath)\n        self.trace.reparentTo(self.recorderNodePath)\n        self.recorderNodePath.removeNode()\n        # Make sure markers are deselected\n        base.direct.deselect(self.playbackMarker)\n        base.direct.deselect(self.tangentMarker)\n        # Remove tasks\n        taskMgr.remove(self.name + '-recordTask')\n        taskMgr.remove(self.name + '-playbackTask')\n        taskMgr.remove(self.name + '-curveEditTask')",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_65",
    "parent": "processed_documents/context_documents/78026bc9_MopathRecorder.json",
    "chunk_number": 1165
  }
}