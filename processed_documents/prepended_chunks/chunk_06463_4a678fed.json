{
  "content": "The chunk describes how to create a **LerpFunctionInterval** using Python, which allows users to define custom functions for animation over time. This is part of the broader discussion on various types of LerpIntervals beyond NodePath-based animations, enabling developers to implement complex or unique animations by leveraging their own logic.\n\ndef myFunction(t):\n    # Do something based on t.\n\ni = LerpFunc(myFunction,\n             fromData=0,\n             toData=1,\n             duration=0.0,\n             blendType='noBlend',\n             extraArgs=[],\n             name=None)\n\nThis advanced interval has many things in common with all of the above LerpIntervals, but instead of directly animating a value, it instead calls the function you specify, passing a single floating-point parameter, t, that ranges from fromData to toData over the duration of the interval. It is then up to your function to set whatever property of whatever object you like according to the current value of t.\n\ncpp\n\nSee the API reference for .CLerpNodePathInterval to understand how to construct such an interval.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_487",
    "parent": "processed_documents/context_documents/68f307f6_72ea72c8_lerp-intervals.json",
    "chunk_number": 6463
  }
}