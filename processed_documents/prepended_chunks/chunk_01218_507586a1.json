{
  "content": "The `createLabeledEntry` method is designed to add a labeled text entry field to a GUI, enhancing user input capabilities in applications built using Tkinter and Pmw. This method creates a frame containing both a label and an entry widget, allowing for easy integration of data entry fields within a graphical interface. The method follows the existing patterns by managing widgets and variables through dictionaries, ensuring consistency across the application. It is a reusable component that supports user interaction with optional command bindings for event handling upon pressing Enter.\n\n**Context:**\nThe `createLabeledEntry` method is a UI component creation function within a class that manages various GUI elements. It adds functionality to create labeled input fields, consistent with other methods in the class, enabling developers to easily integrate text entry capabilities into their applications while maintaining a uniform structure for widget management and user interaction.\n\ndef createLabeledEntry(self, parent, category, text, balloonHelp,\n                           value = '', command = None,\n                           relief = 'sunken', side = tk.LEFT,\n                           expand = 1, width = 12):\n        frame = tk.Frame(parent)\n        variable = tk.StringVar()\n        variable.set(value)\n        label = tk.Label(frame, text = text)\n        label.pack(side = tk.LEFT, fill = tk.X)\n        self.bind(label, balloonHelp)\n        self.widgetDict[category + '-' + text + '-Label'] = label\n        entry = tk.Entry(frame, width = width, relief = relief,\n                         textvariable = variable)\n        entry.pack(side = tk.LEFT, fill = tk.X, expand = expand)\n        self.bind(entry, balloonHelp)\n        self.widgetDict[category + '-' + text] = entry\n        self.variableDict[category + '-' + text] = variable\n        if command:\n            entry.bind('<Return>', command)\n        frame.pack(side = side, fill = tk.X, expand = expand)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_65",
    "parent": "processed_documents/context_documents/78026bc9_MopathRecorder.json",
    "chunk_number": 1218
  }
}