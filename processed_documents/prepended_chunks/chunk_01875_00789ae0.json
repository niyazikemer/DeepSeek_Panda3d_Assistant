{
  "content": "The provided code chunk is part of a class that manipulates PE (Portable Executable) files, specifically managing resources within these files. The `__getitem__` and `__setitem__` methods are used to access and add items to a resource table, maintaining sorted order for integer or string keys. When accessing an item, if it doesn't exist, a new entry is created. When setting an item, the method ensures proper size management for non-ResourceTable values.\n\ndef __getitem__(self, key):\n        if isinstance(key, int):\n            leaves = self._id_leaves\n        else:\n            leaves = self._name_leaves\n\n        i = 0\n        while i < len(leaves):\n            idname, leaf = leaves[i]\n            if idname >= key:\n                if key == idname:\n                    return leaf\n                break\n            i += 1\n        if not isinstance(key, int):\n            self._strings_size += _padded(len(key) * 2 + 2, 4)\n        leaf = ResourceTable(ident=self._ident + (key,))\n        leaves.insert(i, (key, leaf))\n        return leaf\n\n    def __setitem__(self, key, value):\n        \"\"\" Adds the given item to the table.  Maintains sort order. \"\"\"\n        if isinstance(key, int):\n            leaves = self._id_leaves\n        else:\n            leaves = self._name_leaves\n\n        if not isinstance(value, ResourceTable):\n            self._descs_size += 16",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_130",
    "parent": "processed_documents/context_documents/8a037500_pefile.json",
    "chunk_number": 1875
  }
}