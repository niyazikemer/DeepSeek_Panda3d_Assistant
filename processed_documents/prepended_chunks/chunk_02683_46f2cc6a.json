{
  "content": "The provided code snippet defines a `FourStateCycle` class that manages transitions between four states using ClassicFSM, with customizable state names and duration values. The chunk contains example state name lists (`['off', 'locking', 'locked', 'unlocking', 'unlocked']`, etc.) and explains how durations control state transitions. This should be situated in the section explaining the class's initialization parameters to describe how to configure custom state names and their corresponding durations.\n\n['off', 'locking', 'locked', 'unlocking', 'unlocked',]\n\n            ['off', 'deactivating', 'deactive', 'activating', 'activated',]\n\n        durations is a list of durations in seconds or None values.\n        The list of duration values should be the same length\n        as the list of state names and the lists correspond.\n        For each state, after n seconds, the ClassicFSM will move to\n        the next state.  That does not happen for any duration\n        values of None.\n\n        .. rubric:: More Details\n\n        Here is a diagram showing the where the names from the list\n        are used::\n\n            +---------+\n            | 0 (off) |----> (any other state and vice versa).\n            +---------+",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_148",
    "parent": "processed_documents/context_documents/ee9f969a_FourStateAI.json",
    "chunk_number": 2683
  }
}