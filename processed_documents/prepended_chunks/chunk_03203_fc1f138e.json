{
  "content": "The provided chunk is part of a selection process for identifying visible and pickable 3D geometry nodes within a rendering tree. It iterates through all GeomNode instances, applying skip conditions based on visibility status, parent hierarchy (e.g., camera-parented nodes), and custom unpickability flags to build a filtered list of selectable objects.\n\nselectionList = []\n                for geom in base.render.findAllMatches(\"**/+GeomNode\"):\n                    if (skipFlags & DG.SKIP_HIDDEN) and geom.isHidden():\n                        # Skip if hidden node\n                        continue\n##                     elif (skipFlags & DG.SKIP_BACKFACE) and direct.iRay.isEntryBackfacing():\n##                         # Skip, if backfacing poly\n##                         pass\n                    elif (skipFlags & DG.SKIP_CAMERA) and \\\n                         (base.camera in geom.getAncestors()):\n                        # Skip if parented to a camera.\n                        continue\n                    # Can pick unpickable, use the first visible node\n                    elif (skipFlags & DG.SKIP_UNPICKABLE) and \\\n                         (geom.getName() in direct.iRay.unpickable):\n                        # Skip if in unpickable list\n                        continue",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_179",
    "parent": "processed_documents/context_documents/4f678cc8_DirectManipulation.json",
    "chunk_number": 3203
  }
}