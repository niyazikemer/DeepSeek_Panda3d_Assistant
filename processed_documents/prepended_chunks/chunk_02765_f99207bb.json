{
  "content": "The code chunk defines the `LerpQuatScaleInterval` class, which inherits from `LerpNodePathInterval`. This class is designed to perform linear interpolation of both rotation (quaternions) and scaling transformations on a node path. It allows specifying target quaternion, scale values, or HPR (heading, pitch, roll), along with start values for these transformations, enabling smooth animations of 3D objects' orientation and size over time.\n\nclass LerpQuatScaleInterval(LerpNodePathInterval):\n    def __init__(self, nodePath, duration, quat = None, scale = None,\n                 hpr = None,\n                 startHpr = None, startQuat = None, startScale = None,\n                 other = None, blendType = 'noBlend',\n                 bakeInStart = 1, fluid = 0, name = None):\n        LerpNodePathInterval.__init__(self, name, duration, blendType,\n                                      bakeInStart, fluid, nodePath, other)\n\n        if not quat:\n            # If we didn't specify a quat, we're allowed to specify a\n            # hpr instead, which is converted to the equivalent quat.\n            assert hpr\n            quat = LOrientationf()\n            quat.setHpr(hpr)\n\n        assert scale",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_156",
    "parent": "processed_documents/context_documents/d377e678_LerpInterval.json",
    "chunk_number": 2765
  }
}