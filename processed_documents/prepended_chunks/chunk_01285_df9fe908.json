{
  "content": "The given code chunk is part of a method within a class that handles particle system configurations. Specifically, it writes renderer-related properties (such as scaling factors and alpha blend methods) to a file, converting numerical values into readable strings where necessary. This chunk appears in the `printParams` method, which is responsible for capturing and outputting various parameters of the particle system's factory, emitter, and renderer components. The code is used to serialize renderer settings like initial/final X/Y scales and alpha blending configurations into a file format that can be reloaded or inspected later.\n\nfile.write(targ + '.renderer.setFinalXScale(%.4f)\\n' % self.renderer.getFinalXScale())\n            file.write(targ + '.renderer.setInitialYScale(%.4f)\\n' % self.renderer.getInitialYScale())\n            file.write(targ + '.renderer.setFinalYScale(%.4f)\\n' % self.renderer.getFinalYScale())\n            file.write(targ + '.renderer.setNonanimatedTheta(%.4f)\\n' % self.renderer.getNonanimatedTheta())\n            blendMethod = self.renderer.getAlphaBlendMethod()\n            bMethod = \"PPNOBLEND\"\n            if blendMethod == BaseParticleRenderer.PPNOBLEND:\n                bMethod = \"PPNOBLEND\"\n            elif blendMethod == BaseParticleRenderer.PPBLENDLINEAR:\n                bMethod = \"PPBLENDLINEAR\"\n            elif blendMethod == BaseParticleRenderer.PPBLENDCUBIC:\n                bMethod = \"PPBLENDCUBIC\"\n            file.write(targ + '.renderer.setAlphaBlendMethod(BaseParticleRenderer.' + bMethod + ')\\n')",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_69",
    "parent": "processed_documents/context_documents/b3935c67_Particles.json",
    "chunk_number": 1285
  }
}