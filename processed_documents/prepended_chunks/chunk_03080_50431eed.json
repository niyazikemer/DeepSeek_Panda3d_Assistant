{
  "content": "The code chunk represents a method within an Actor class designed to determine which animation is currently playing. It checks across specified or arbitrarily chosen parts and levels of detail (LOD), fitting into a broader suite of functions that manage animations, including handling different LODs and tracking play states. This method helps in identifying the active animation for a given part or any available part if none is specified.\n\n```context\nThe `getCurrentAnim` method within the Actor class retrieves the currently playing animation name on an actor. It handles both specified parts and arbitrary selections when no part is provided, operating across different levels of detail (LOD). This functionality is integral to managing animations in a system that supports multiple LODs, allowing for dynamic tracking of active animations.\n```\n\ndef getCurrentAnim(self, partName=None):\n        \"\"\"\n        Return the anim currently playing on the actor. If part not\n        specified return current anim of an arbitrary part in dictionary.\n        NOTE: only returns info for an arbitrary LOD\n        \"\"\"\n        if len(self.__animControlDict) == 0:\n            return\n\n        lodName, animControlDict = next(iter(self.__animControlDict.items()))\n        if partName is None:\n            partName, animDict = next(iter(animControlDict.items()))\n        else:\n            animDict = animControlDict.get(partName)\n            if animDict is None:\n                # part was not present\n                Actor.notify.warning(\"couldn't find part: %s\" % (partName))\n                return None\n\n        # loop through all anims for named part and find if any are playing\n        for animName, anim in animDict.items():\n            if anim.animControl and anim.animControl.isPlaying():\n                return animName",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3080
  }
}