{
  "content": "This chunk introduces the fundamental concepts of particle systems in Panda3D, including their versatility in creating various effects (e.g., fire, smoke, explosions), the role of the Particle Panel tool for testing, and the six essential components that make up a particle system. It serves as an overview before diving into detailed component configurations and setup procedures.\n\nContext: Foundational introduction to particle systems in Panda3D, highlighting their purpose, tools, and core architecture.\n\ncpp\n\nFire, smoke, glowing, explosion, water fountain, falling leaves, fur, hair and many other fuzzy effects are created procedurally using particle systems. It's important not to make the assumption that particles must have the size of a 'particle' that is very small, particles can have any size and any mass. Particles are physical entities which inherit PhysicsObject.\n\nPanda3D provides a tool which simplifies testing particle systems. The tool is called \"Particle Panel\" and is written in Python. The link to run the particle panel is in the same folder as the particle sample which comes with Panda3D.\n\nA particle system in Panda3D consists of 6 components:\n\nFactory\n\nEmitter\n\nPhysics engine\n\nRenderer\n\nParticle System Controller (Particle System)\n\nParticle System Manager (Optional)\n\nFactory\n\nParticles are generated in this stage using the provided parameters. Panda3D Provides 2 Factories:\n\nPointParticleFactory: Generates particles with default rotation.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_429",
    "parent": "processed_documents/context_documents/fc6d0e95_4db2b8a7_index.json",
    "chunk_number": 6178
  }
}