{
  "content": "The provided code chunk is part of a Python class designed to manage animations or timed sequences. It includes initialization, methods to track the current frame, and logic to update frames based on elapsed time, handling both forward and reverse directions, as well as looping.\n\n# Initialize superclass\n        Interval.Interval.__init__(self, name, duration)\n\n    def getCurrentFrame(self):\n        \"\"\"Calculate the current frame playing in this interval.\n\n        returns a float value between startFrame and endFrame, inclusive\n        returns None if there are any problems\n        \"\"\"\n        retval = None\n        if not self.isStopped():\n            framesPlayed = self.numFrames * self.currT\n            retval = self.startFrame + framesPlayed\n        return retval\n\n    def privStep(self, t):\n        frameCount = t * self.frameRate\n        if self.constrainedLoop:\n            frameCount = frameCount % self.numFrames\n\n        if self.reverse:\n            absFrame = self.endFrame - frameCount\n        else:\n            absFrame = self.startFrame + frameCount\n\n        # Calc integer frame number\n        intFrame = int(math.floor(absFrame + 0.0001))\n\n        # Pose anim",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_165",
    "parent": "processed_documents/context_documents/0899ec70_AnimControlInterval.json",
    "chunk_number": 2863
  }
}