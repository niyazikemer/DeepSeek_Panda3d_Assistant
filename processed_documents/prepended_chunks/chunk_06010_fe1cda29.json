{
  "content": "The chunk situates between the discussion of `GraphicsWindow` and `GraphicsBuffer`, explaining their inheritance from `GraphicsOutput`, before introducing `GraphicsStateGuardian` (GSG) and its role in managing rendering processes.\n\nBoth classes inherit from the base class .GraphicsOutput, which contains all of the code common to rendering to a window or offscreen buffer.\n\nGraphicsStateGuardian\n\nThe .GraphicsStateGuardian, or GSG for short, represents the actual graphics context. This class manages the actual nuts-and-bolts of drawing to a window; it manages the loading of textures and vertex buffers into graphics memory, and has the functions for actually drawing triangles to the screen. (During the process of rendering the frame, the \"graphics state\" changes several times; the GSG gets its name from the fact that most of its time is spent managing this graphics state.)",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_393",
    "parent": "processed_documents/context_documents/b9b6eb63_1752f959_introducing-graphics-classes.json",
    "chunk_number": 6010
  }
}