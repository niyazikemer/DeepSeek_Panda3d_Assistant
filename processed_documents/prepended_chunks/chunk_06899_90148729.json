{
  "content": "The chunk is situated within a comprehensive guide on Panda3D's automatic shader generation, detailing its capabilities and best practices. Specifically, it falls under a section that explores combining these automated shaders with custom-written ones, providing developers flexibility by allowing them to override specific nodes while utilizing built-in features elsewhere. This context highlights the balance between convenience and customization in creating complex scenes.\n\nCombining Automatic Shaders with Manual Shaders\n\nSometimes, you will want to write most of a game using panda's automatic shader generation abilities, but you'll want to use a few of your own shaders. A typical example would be a scene with some houses, trees, and a pond. You can probably do the houses and trees using panda's built-in abilities. However, Panda doesn't contain anything that particularly looks like pond-water: for that, you'll probably need to write your own shader.\n\nWhen you use render.set_shader_auto() <.NodePath.set_shader_auto()>, that propagates down the scene graph just like any other render attribute. If you assign a specific shader to a node using render.set_shader(myshader) <.NodePath.set_shader()>, that overrides any shader assignment propagated down from above, including an Auto shader assignment from above. So that means it is easy, in the example above, to enable auto shader generation for the scene as a whole, and then override that at the pond-nodepath.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_545",
    "parent": "processed_documents/context_documents/f47095f0_6d2d98fe_shader-generator.json",
    "chunk_number": 6899
  }
}