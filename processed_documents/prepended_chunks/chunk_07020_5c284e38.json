{
  "content": "Setting and managing node transparency in a scene graph involves enabling or disabling transparency through specific methods and parameters, ensuring proper rendering behavior while considering performance impacts.\n\npython\n\nmyNodePath.setTransparency(TransparencyAttrib.MAlpha)\n\ncpp\n\nmyNodePath.set_transparency(TransparencyAttrib::M_alpha);\n\nThe parameter to ~.NodePath.set_transparency() is usually TransparencyAttrib.M_alpha, which is ordinary transparency. You can also explicitly turn transparency off with TransparencyAttrib.M_none. (Other transparency modes are possible, but that is a more advanced topic. Some older code may pass just 0 or 1 for this parameter, but it is better to name the mode.) If you don't explicitly enable transparency first, the alpha component of color may be ignored. Be sure you don't enable transparency unnecessarily, since it does enable a more expensive rendering mode.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_568",
    "parent": "processed_documents/context_documents/029b082e_cabddac1_common-state-changes.json",
    "chunk_number": 7020
  }
}