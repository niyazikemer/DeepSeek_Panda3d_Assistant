{
  "content": "The code chunk contains several methods of the `Timer` class responsible for managing timer operations. The `stop()` method stops the timer and returns the elapsed time. The `resume()` method resumes a paused timer. The `restart()` method restarts the timer with the same duration or callback if set. The `isStarted()` method checks if the timer is running. The `addT()` method adds time to the remaining duration, while `setT()` sets a new duration. Finally, `getT()` returns the remaining time on the timer. These methods work together with the `__timerTask` method (not shown here) which handles the actual timing and task management using Panda3D's `taskMgr`.\n\ndef stop(self):\n        if not self.started:\n            return 0.0\n        taskMgr.remove(self.name + '-run')\n        self.started = 0\n        return self.currT\n\n    def resume(self):\n        assert self.currT <= self.finalT\n        assert self.started == 0\n        self.start(self.finalT - self.currT, self.name)\n\n    def restart(self):\n        if self.callback is not None:\n            self.startCallback(self.finalT, self.callback)\n        else:\n            self.start(self.finalT, self.name)\n\n    def isStarted(self):\n        return self.started\n\n    def addT(self, t):\n        self.finalT = self.finalT + t\n\n    def setT(self, t):\n        self.finalT = t\n\n    def getT(self):\n        return self.finalT - self.currT",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_211",
    "parent": "processed_documents/context_documents/a11a72f4_Timer.json",
    "chunk_number": 3912
  }
}