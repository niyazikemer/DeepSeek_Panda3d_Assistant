{
  "content": "The provided code chunk is part of a document explaining the functionality and usage of an Actor class in a 3D graphics framework. The document describes methods for animating actors by defining animation paths, connecting actor parts at specific joints, optimizing rendering (e.g., eyes/pupils), and managing Level of Detail (LOD).\n\n# dictionary of anim dictionaries\n                {\"head\":{\"walk\": \"char/dogMM/dogMM_Shorts-head-walk\",\n                         \"run\": \"char/dogMM/dogMM_Shorts-head-run\"},\n                 \"torso\":{\"walk\": \"char/dogMM/dogMM_Shorts-torso-walk\",\n                          \"run\": \"char/dogMM/dogMM_Shorts-torso-run\"},\n                 \"legs\":{\"walk\": \"char/dogMM/dogMM_Shorts-legs-walk\",\n                         \"run\": \"char/dogMM/dogMM_Shorts-legs-run\"}\n                 })\n\n        In addition multipart actor parts need to be connected together\n        in a meaningful fashion::\n\n            a.attach(\"head\", \"torso\", \"joint-head\")\n            a.attach(\"torso\", \"legs\", \"joint-hips\")\n\n        #\n        # ADD LOD COMMENT HERE!\n        #\n\n        Other useful Actor class functions::\n\n            #fix actor eye rendering\n            a.drawInFront(\"joint-pupil?\", \"eyes*\")",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3040
  }
}