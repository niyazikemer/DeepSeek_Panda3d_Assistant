{
  "content": "The provided chunk discusses how to use `OnscreenImage` in Panda3D for quickly displaying images on screen. It is situated within a broader section of the document that explains different methods for rendering images in both 2D and 3D scenes, including creating cards with arbitrary dimensions using `.CardMaker` and handling transparency. This specific chunk focuses on the Python API convenience class `OnscreenImage`, providing code examples for displaying, updating, and destroying an image object.\n\nRendering Images\n\nIn order to render an image, it is necessary to first create a flat piece of geometry consisting of two triangles (usually called a quad or a card) and then apply the desired image as a texture. Panda3D provides convenience methods for creating such a card automatically.\n\npython\n\nOnscreenImage\n\ncpp\n\nNote\n\nThis convenience class is only available in the Python API.\n\nJust like onscreentext, you can use OnscreenImage as a quick way to put an image onscreen. Use an OnscreenImage whenever you want a quick way to display an ordinary image without a lot of fancy requirements.\n\nfrom direct.gui.OnscreenImage import OnscreenImage\nimageObject = OnscreenImage(image='myImage.jpg', pos=(-0.5, 0, 0.02))\n\nIf you want, you can change the image into another one using setImage():\n\nimageObject.setImage('myImage2.jpg')\n\nWhen you want to take the image away, use:\n\nimageObject.destroy()",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_690",
    "parent": "processed_documents/context_documents/f5e8a56c_dd3d2a8a_rendering-images.json",
    "chunk_number": 7674
  }
}