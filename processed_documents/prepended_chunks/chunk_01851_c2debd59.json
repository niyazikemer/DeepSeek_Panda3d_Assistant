{
  "content": "This code is part of the `DistributedLargeBlobSenderAI` class which manages sending large data to a target avatar. The section handles two methods: saving data to a file and transmitting the filename if `useDisk` is enabled, or dividing the data into chunks for transmission otherwise. It includes a note about a potential race condition when using disk storage.\n\n# the file is created by another AI just after the stat fails\n            f = open(filename, 'wb')\n            f.write(s)\n            f.close()\n            os.chdir(origDir)\n            self.sendUpdateToAvatarId(self.targetAvId,\n                                      'setFilename', [filename])\n        else:\n            chunkSize = LargeBlobSenderConsts.ChunkSize\n            while len(s) > 0:\n                self.sendUpdateToAvatarId(self.targetAvId,\n                                          'setChunk', [s[:chunkSize]])\n                s = s[chunkSize:]\n            # send final empty string\n            self.sendUpdateToAvatarId(self.targetAvId, 'setChunk', [''])",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_126",
    "parent": "processed_documents/context_documents/6b9e3599_DistributedLargeBlobSenderAI.json",
    "chunk_number": 1851
  }
}