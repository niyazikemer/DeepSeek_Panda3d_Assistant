{
  "content": "The provided code defines a `Finite State Machine (FSM)` class in Python, designed as a base class for creating state machines with custom behavior for entering and exiting states. This specific chunk is an introductory documentation explaining the basic structure and conventions of the FSM class, including how to define states and their associated methods like `enterState()` and `exitState()`.\n\nclass FSM(DirectObject):\n    \"\"\"\n    A Finite State Machine.  This is intended to be the base class\n    of any number of specific machines, which consist of a collection\n    of states and transitions, and rules to switch between states\n    according to arbitrary input data.\n\n    The states of an FSM are defined implicitly.  Each state is\n    identified by a string, which by convention begins with a capital\n    letter.  (Also by convention, strings passed to request that are\n    not state names should begin with a lowercase letter.)\n\n    To define specialized behavior when entering or exiting a\n    particular state, define a method named enterState() and/or\n    exitState(), where \"State\" is the name of the state, e.g.::\n\n        def enterRed(self):\n            ... do stuff ...\n\n        def exitRed(self):\n            ... cleanup stuff ...\n\n        def enterYellow(self):\n            ... do stuff ...\n\n        def exitYellow(self):\n            ... cleanup stuff ...",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_144",
    "parent": "processed_documents/context_documents/4baea650_FSM.json",
    "chunk_number": 2624
  }
}