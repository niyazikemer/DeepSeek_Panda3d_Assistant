{
  "content": "The provided code chunk is part of a method in a distributed object management system, likely `storeObjectLocation`, which updates an object's location by either changing its parent or zone. The code checks if the new parent ID or zone ID differs from the old ones and notifies the relevant parent to handle the child's arrival in the new location or zone. This ensures proper scene graph management and object presence tracking in a distributed environment.\n\nif oldParentId != parentId:\n            # Give the parent a chance to run code when a new child\n            # sets location to it. For example, the parent may want to\n            # scene graph reparent the child to some subnode it owns.\n            parentObj = self.doId2do.get(parentId)\n            if parentObj is not None:\n                parentObj.handleChildArrive(object, zoneId)\n            elif parentId not in (None, 0, self.getGameDoId()):\n                self.notify.warning('storeObjectLocation(%s): parent %s not present' %\n                                    (object.doId, parentId))\n        elif oldZoneId != zoneId:\n            parentObj = self.doId2do.get(parentId)\n            if parentObj is not None:\n                parentObj.handleChildArriveZone(object, zoneId)\n            elif parentId not in (None, 0, self.getGameDoId()):\n                self.notify.warning('storeObjectLocation(%s): parent %s not present' %",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_314",
    "parent": "processed_documents/context_documents/e16b9605_DoCollectionManager.json",
    "chunk_number": 5445
  }
}