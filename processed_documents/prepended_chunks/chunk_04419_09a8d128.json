{
  "content": "The `loadCubeMap` method in the resource management class is designed for creating six-face cube map textures by expanding a file pattern with face indices (0-6) and optional mipmaps, returning a `Texture` object or None if the texture is missing. This functionality is part of a comprehensive system for loading various assets like 3D models, fonts, textures, sounds, and shaders, making it particularly relevant to graphics programming in Python.\n\nreturn texture\n\n    def loadCubeMap(self, texturePattern, readMipmaps = False, okMissing = False,\n                    minfilter = None, magfilter = None, anisotropicDegree = None,\n                    loaderOptions = None, multiview = None):\n        \"\"\"\n        texturePattern is a string that contains a sequence of one or\n        more hash characters ('#'), which will be filled in with the\n        face index number (0 through 6).  Returns a six-face cube map\n        `Texture` object.\n\n        okMissing should be True to indicate the method should return\n        None if the texture file is not found.  If it is False, the\n        method will raise an exception if the texture file is not\n        found or cannot be loaded.\n\n        If readMipmaps is True, then the filename string must contain\n        two sequences of hash characters; the first group is filled in\n        with the face index number, and the second group with the\n        mipmap index number.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_250",
    "parent": "processed_documents/context_documents/7b86925a_Loader.json",
    "chunk_number": 4419
  }
}