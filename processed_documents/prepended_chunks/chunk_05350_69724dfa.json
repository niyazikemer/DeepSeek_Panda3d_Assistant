{
  "content": "The provided code chunk consists of methods (`setSmXY`, `setSmXZ`, `setSmPos`, `setSmHpr`) designed to update the position and orientation (X, Y, Z coordinates and heading/pitch/roll) of an avatar in a networked environment. These methods utilize timestamps for synchronization and call `_checkResume` to handle movement resumption logic, ensuring smooth transitions in an online application like a game.\n\ndef setSmXY(self, x, y, timestamp=None):\n        self._checkResume(timestamp)\n        self.setComponentX(x)\n        self.setComponentY(y)\n        self.setComponentTLive(timestamp)\n\n    def setSmXZ(self, x, z, timestamp=None):\n        self._checkResume(timestamp)\n        self.setComponentX(x)\n        self.setComponentZ(z)\n        self.setComponentTLive(timestamp)\n\n    def setSmPos(self, x, y, z, timestamp=None):\n        self._checkResume(timestamp)\n        self.setComponentX(x)\n        self.setComponentY(y)\n        self.setComponentZ(z)\n        self.setComponentTLive(timestamp)\n\n    def setSmHpr(self, h, p, r, timestamp=None):\n        self._checkResume(timestamp)\n        self.setComponentH(h)\n        self.setComponentP(p)\n        self.setComponentR(r)\n        self.setComponentTLive(timestamp)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_305",
    "parent": "processed_documents/context_documents/3cb775cb_DistributedSmoothNode.json",
    "chunk_number": 5350
  }
}