{
  "content": "def run(self):\n        try:\n            ids = self._leakDetector.getContainerIds()\n            for id in ids:\n                yield None\n                try:\n                    for container in self._leakDetector.getContainerByIdGen(id):\n                        yield None\n                except Exception:\n                    # reference is invalid, remove it\n                    self._leakDetector.removeContainerById(id)\n            _id2baseStartRef = self._leakDetector._findContainersJob._id2baseStartRef\n            ids = list(_id2baseStartRef.keys())\n            for id in ids:\n                yield None\n                try:\n                    for container in _id2baseStartRef[id].getContainerGen():\n                        yield None\n                except Exception:\n                    # reference is invalid, remove it\n                    del _id2baseStartRef[id]\n            _id2discoveredStartRef = self._leakDetector._findContainersJob._id2discoveredStartRef",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_256",
    "parent": "processed_documents/context_documents/e2a31346_ContainerLeakDetector.json",
    "chunk_number": 4531
  }
}