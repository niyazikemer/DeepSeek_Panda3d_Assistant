{
  "content": "# reference is invalid, remove it\n                    del _id2baseStartRef[id]\n            _id2discoveredStartRef = self._leakDetector._findContainersJob._id2discoveredStartRef\n            ids = list(_id2discoveredStartRef.keys())\n            for id in ids:\n                yield None\n                try:\n                    for container in _id2discoveredStartRef[id].getContainerGen():\n                        yield None\n                except Exception:\n                    # reference is invalid, remove it\n                    del _id2discoveredStartRef[id]\n        except Exception as e:\n            print('PruneObjectRefs job caught exception: %s' % e)\n            if __dev__:\n                raise\n        yield Job.Done",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_256",
    "parent": "processed_documents/context_documents/e2a31346_ContainerLeakDetector.json",
    "chunk_number": 4532
  }
}