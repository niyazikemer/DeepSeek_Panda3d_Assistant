{
  "content": "selection = GraphicsPipeSelection.getGlobalPtr()\n        if printPipeTypes:\n            selection.printPipeTypes()\n        self.pipe = selection.makeDefaultPipe()\n        if not self.pipe:\n            self.notify.error(\n                \"No graphics pipe is available!\\n\"\n                \"Your Config.prc file must name at least one valid panda display\\n\"\n                \"library via load-display or aux-display.\")\n\n        self.notify.info(\"Default graphics pipe is %s (%s).\" % (\n            self.pipe.getType().getName(), self.pipe.getInterfaceName()))\n        self.pipeList.append(self.pipe)\n\n    def makeModulePipe(self, moduleName):\n        \"\"\"\n        Returns a GraphicsPipe from the indicated module,\n        e.g. 'pandagl' or 'pandadx9'.  Does not affect base.pipe or\n        base.pipeList.\n\n        :rtype: panda3d.core.GraphicsPipe\n        \"\"\"\n\n        selection = GraphicsPipeSelection.getGlobalPtr()\n        return selection.makeModulePipe(moduleName)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_283",
    "parent": "processed_documents/context_documents/be1afc59_ShowBase.json",
    "chunk_number": 4881
  }
}