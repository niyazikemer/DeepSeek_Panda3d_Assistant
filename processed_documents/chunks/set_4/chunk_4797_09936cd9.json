{
  "content": "class CountedResource(object):\n    \"\"\"\n    This class is an attempt to combine the RAIA idiom with reference\n    counting semantics in order to model shared resources. RAIA stands\n    for \"Resource Allocation Is Acquisition\" (see 'Effective C++' for a\n    more in-depth explanation)\n\n    When a resource is needed, create an appropriate CountedResource\n    object.  If the resource is already available (meaning another\n    CountedResource object of the same type already exists), no action\n    is taken.  Otherwise, acquire() is invoked, and the resource is\n    allocated. The resource will remain valid until all matching\n    CountedResource objects have been deleted.  When no objects of\n    a particular CountedResource type exist, the release() function for\n    that type is invoked and the managed resource is cleaned up.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_277",
    "parent": "processed_documents/context_documents/283aed1f_CountedResource.json",
    "chunk_number": 4797
  }
}