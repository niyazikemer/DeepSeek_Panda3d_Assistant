{
  "content": "# breadth-first search, go until you run out of new objects or you find __builtin__\n                while len(nextObjList) > 0:\n                    if foundBuiltin:\n                        break\n                    # swap the lists, prepare for the next pass\n                    curObjList = nextObjList\n                    nextObjList = []\n                    assert self.notify.debug('next search iteration, num objects: %s' % len(curObjList))\n                    for curObj in curObjList:\n                        if foundBuiltin:\n                            break\n                        yield None\n                        referrers = gc.get_referrers(curObj)\n                        assert self.notify.debug('curObj: %s @ %s, %s referrers, repr=%s' % (\n                            itype(curObj), hex(id(curObj)), len(referrers), fastRepr(curObj, maxLen=2)))\n                        for referrer in referrers:",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_264",
    "parent": "processed_documents/context_documents/f7240720_MessengerLeakDetector.json",
    "chunk_number": 4724
  }
}