{
  "content": "def _getObjectList(self):\n        if hasattr(sys, 'getobjects'):\n            return sys.getobjects(0)\n        else:\n            gc.collect()\n            # grab gc's object list\n            gc_objects = gc.get_objects()\n            # use get_referents to find everything else\n            objects = gc_objects\n            objects.append(builtins.__dict__)\n            nextObjList = gc_objects\n            found = set()\n            found.add(id(objects))\n            found.add(id(found))\n            found.add(id(gc_objects))\n            for obj in objects:\n                found.add(id(obj))\n            # repeatedly call get_referents until we can't find any more objects\n            while len(nextObjList) > 0:\n                curObjList = nextObjList\n                nextObjList = []\n                for obj in curObjList:\n                    refs = gc.get_referents(obj)\n                    for ref in refs:\n                        if id(ref) not in found:",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_258",
    "parent": "processed_documents/context_documents/edd88549_ObjectReport.json",
    "chunk_number": 4548
  }
}