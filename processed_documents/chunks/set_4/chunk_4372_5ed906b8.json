{
  "content": "if loaders:\n            registry = LoaderFileTypeRegistry.getGlobalPtr()\n\n            for entry_point in loaders:\n                registry.register_deferred_type(entry_point)\n\n            cls._loadedPythonFileTypes = True\n\n    # model loading funcs\n    def loadModel(self, modelPath, loaderOptions = None, noCache = None,\n                  allowInstance = False, okMissing = None,\n                  callback = None, extraArgs = [], priority = None,\n                  blocking = None):\n        \"\"\"\n        Attempts to load a model or models from one or more relative\n        pathnames.  If the input modelPath is a string (a single model\n        pathname), the return value will be a NodePath to the model\n        loaded if the load was successful, or None otherwise.  If the\n        input modelPath is a list of pathnames, the return value will\n        be a list of `.NodePath` objects and/or Nones.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_250",
    "parent": "processed_documents/context_documents/7b86925a_Loader.json",
    "chunk_number": 4372
  }
}