{
  "content": "def unloadShader(self, shaderPath):\n        if shaderPath is not None:\n            ShaderPool.releaseShader(shaderPath)\n\n    def asyncFlattenStrong(self, model, inPlace = True,\n                           callback = None, extraArgs = []):\n        \"\"\" Performs a model.flattenStrong() operation in a sub-thread\n        (if threading is compiled into Panda).  The model may be a\n        single `.NodePath`, or it may be a list of NodePaths.\n\n        Each model is duplicated and flattened in the sub-thread.\n\n        If inPlace is True, then when the flatten operation completes,\n        the newly flattened copies are automatically dropped into the\n        scene graph, in place the original models.\n\n        If a callback is specified, then it is called after the\n        operation is finished, receiving the flattened model (or a\n        list of flattened models).\"\"\"",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_250",
    "parent": "processed_documents/context_documents/7b86925a_Loader.json",
    "chunk_number": 4428
  }
}