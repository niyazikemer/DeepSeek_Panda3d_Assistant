{
  "content": "def install(log, upload):\n    \"\"\"Installs the exception hook.\"\"\"\n    global oldExcepthook\n    global wantStackDumpLog\n    global wantStackDumpUpload\n    global dumpOnExceptionInit\n\n    wantStackDumpLog = log\n    wantStackDumpUpload = upload\n\n    dumpOnExceptionInit = ConfigVariableBool('variable-dump-on-exception-init', False)\n    if dumpOnExceptionInit:\n        # this mode doesn't completely work because exception objects\n        # thrown by the interpreter don't get created until the\n        # stack has been unwound and an except block has been reached\n        if not hasattr(Exception, '_moved__init__'):\n            Exception._moved__init__ = Exception.__init__\n            Exception.__init__ = _varDump__init__\n    else:\n        if sys.excepthook is not _excepthookDumpVars:\n            oldExcepthook = sys.excepthook\n            sys.excepthook = _excepthookDumpVars",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_273",
    "parent": "processed_documents/context_documents/6ee4a724_ExceptionVarDump.json",
    "chunk_number": 4778
  }
}