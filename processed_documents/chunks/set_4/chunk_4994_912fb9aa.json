{
  "content": "self.graphicsEngine.removeWindow(buffer)\n        rig.removeNode()\n\n        return saved\n\n    def saveSphereMap(self, namePrefix = 'spheremap.png',\n                      defaultFilename = 0, source = None,\n                      camera = None, size = 256,\n                      cameraMask = PandaNode.getAllCameraMask(),\n                      numVertices = 1000, sourceLens = None):\n        \"\"\"\n        This works much like :meth:`saveCubeMap()`, and uses the\n        graphics API's hardware cube-mapping ability to get a 360-degree\n        view of the world.  But then it converts the six cube map faces\n        into a single fisheye texture, suitable for applying as a static\n        environment map (sphere map).\n\n        For eye-relative static environment maps, sphere maps are often\n        preferable to cube maps because they require only a single\n        texture and because they are supported on a broader range of\n        hardware.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_283",
    "parent": "processed_documents/context_documents/be1afc59_ShowBase.json",
    "chunk_number": 4994
  }
}