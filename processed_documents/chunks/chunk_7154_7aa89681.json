{
  "content": "python\n\npoints = [(x1, y1, z1), (x2, y2, z2), ...]\nelements = [(i0, i1, i2, i3), (i4, i5, i6, i7), ...]\n\npoints = [Point3(x,y,z) * 3 for x,y,z in nodes]\nindices = sum([list(x) for x in elements], [])\n\nbodyNode = BulletSoftBodyNode.makeTetMesh(info, points, indices, True)\n\ncpp\n\nTODO\n\nThe third line just transform the list of coordinates into a list of Panda3D points, and the fourth line transforms the list of four-tuples into a flat list of indices.\n\nAssuming we don't have the tetrahedral data prepared for us; in this case we need to create it ourselves. A good tool for this purpose is \"tetgen\", which is a tetrahedral mesh generator and Delaunay triangulator. The tetgen homepage is https://www.berlios.de/software/tetgen/ . Panda3D Bullet module has support for setting up soft bodies directly from tetgen mesh files:\n\npython\n\nele = file('models/tetra.1.ele', 'r').read()\nface = file('models/tetra.1.face', 'r').read()\nnode = file('models/tetra.1.node', 'r').read()",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_596",
    "parent": "processed_documents/context_documents/44951a7f_af197370_softbody-tetrahedron.json",
    "chunk_number": 7154
  }
}