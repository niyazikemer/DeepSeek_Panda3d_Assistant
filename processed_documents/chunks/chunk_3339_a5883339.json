{
  "content": "def centerCamNow(self):\n        self.centerCamIn(0.)\n\n    def centerCamIn(self, t):\n        self.__stopManipulateCamera()\n        # Record undo point\n        direct = ShowBaseGlobal.direct\n        direct.pushUndo([direct.camera])\n        # Determine marker location\n        markerToCam = self.coaMarker.getPos(direct.camera)\n        dist = Vec3(markerToCam - DG.ZERO_POINT).length()\n        scaledCenterVec = Y_AXIS * dist\n        delta = markerToCam - scaledCenterVec\n        self.camManipRef.setPosHpr(direct.camera, Point3(0), Point3(0))\n        ival = direct.camera.posInterval(CAM_MOVE_DURATION,\n                                         Point3(delta),\n                                         other=self.camManipRef,\n                                         blendType='easeInOut')\n        ival = Sequence(ival, Func(self.updateCoaMarkerSizeOnDeath),\n                        name = 'manipulateCamera')\n        self.__startManipulateCamera(ival = ival)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_181",
    "parent": "processed_documents/context_documents/b7d65bc2_DirectCameraControl.json",
    "chunk_number": 3339
  }
}