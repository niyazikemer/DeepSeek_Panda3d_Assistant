{
  "content": "def pick(self, targetNodePath, skipFlags):\n        self.ct.traverse(targetNodePath)\n        self.sortEntries()\n        return self.findCollisionEntry(skipFlags)\n\n    def pickGeom(self, targetNodePath = None,\n                 skipFlags = DG.SKIP_HIDDEN | DG.SKIP_CAMERA):\n        if targetNodePath is None:\n            targetNodePath = render\n        self.collideWithGeom()\n        return self.pick(targetNodePath, skipFlags)\n\n    def pickBitMask(self, bitMask = BitMask32.allOff(),\n                    targetNodePath = None,\n                    skipFlags = DG.SKIP_HIDDEN | DG.SKIP_CAMERA):\n        if targetNodePath is None:\n            targetNodePath = render\n        self.collideWithBitMask(bitMask)\n        return self.pick(targetNodePath, skipFlags)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_186",
    "parent": "processed_documents/context_documents/eebfe557_DirectSelection.json",
    "chunk_number": 3477
  }
}