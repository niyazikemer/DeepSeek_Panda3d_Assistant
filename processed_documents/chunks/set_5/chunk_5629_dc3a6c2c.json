{
  "content": "def show(self):\n        if _aware_of_cameras and not self.recordingInProgress:\n            NodePath.show(self)\n\n    def getScaleIval(self):\n        if not self.scaleIval:\n            self.scaleIval = Sequence(LerpScaleInterval(self.getChild(0), 0.25, 2, startScale = 1, blendType = 'easeInOut'),\n                                      LerpScaleInterval(self.getChild(0), 0.25, 1, startScale = 2, blendType = 'easeInOut'))\n        return self.scaleIval\n\n    def setState(self, state):\n        self.request(state)\n\n    def defaultFilter(self, request, args):\n        if request == self.getCurrentOrNextState():\n            return None\n        return FSM.defaultFilter(self, request, args)\n\n    def exitOff(self):\n        self.accept('recordingInProgress', self.setRecordingInProgress)\n\n    def enterOff(self):\n        self.ignore('recordingInProgress')\n\n        if self.scaleIval:\n            self.scaleIval.finish()\n            self.scaleIval = None\n\n        self.hide()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_329",
    "parent": "processed_documents/context_documents/e876bd8c_DistributedCamera.json",
    "chunk_number": 5629
  }
}