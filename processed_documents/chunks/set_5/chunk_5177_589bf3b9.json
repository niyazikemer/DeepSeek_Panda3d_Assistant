{
  "content": "self.dclassesByName[className] = dclass\n            if number >= 0:\n                self.dclassesByNumber[number] = dclass\n\n\n# listens for new clients\n\n    def listenerPoll(self, task):\n        if self.qcl.newConnectionAvailable():\n            rendezvous = PointerToConnection()\n            netAddress = NetAddress()\n            newConnection = PointerToConnection()\n            retVal = self.qcl.getNewConnection(rendezvous, netAddress,\n                                               newConnection)\n            if not retVal:\n                return Task.cont\n\n            # Crazy dereferencing\n            newConnection = newConnection.p()\n\n            #  Add clients information to dictionary\n            id = self.idAllocator.allocate()\n            doIdBase = id * self.doIdRange + 1\n\n            self.notify.info(\n                \"Got client %s from %s\" % (doIdBase, netAddress))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_293",
    "parent": "processed_documents/context_documents/081ab7e4_ServerRepository.json",
    "chunk_number": 5177
  }
}