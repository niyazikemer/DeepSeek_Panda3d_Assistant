{
  "content": "def countObjects(self, classType):\n        \"\"\"\n        Counts the number of objects of the given type in the\n        repository (for testing purposes)\n        \"\"\"\n        count = 0\n        for dobj in self.doId2do.values():\n            if isinstance(dobj, classType):\n                count += 1\n        return count\n\n\n    def getAllOfType(self, type):\n        # Returns a list of all DistributedObjects in the repository\n        # of a particular type.\n        result = []\n        for obj in self.doId2do.values():\n            if isinstance(obj, type):\n                result.append(obj)\n        return result\n\n    def findAnyOfType(self, type):\n        # Searches the repository for any object of the given type.\n        for obj in self.doId2do.values():\n            if isinstance(obj, type):\n                return obj\n        return None\n\n    #----------------------------------",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_314",
    "parent": "processed_documents/context_documents/e16b9605_DoCollectionManager.json",
    "chunk_number": 5439
  }
}