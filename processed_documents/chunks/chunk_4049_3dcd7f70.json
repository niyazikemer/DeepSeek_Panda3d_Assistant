{
  "content": "def addBlastForce(self, vector):\n        pass\n\n    def displayDebugInfo(self):\n        \"\"\"\n        For debug use.\n        \"\"\"\n        onScreenDebug.add(\"w controls\", \"PhysicsWalker\")\n\n        if self.useLifter:\n            onScreenDebug.add(\"w airborneHeight\", self.lifter.getAirborneHeight())\n            onScreenDebug.add(\"w isOnGround\", self.lifter.isOnGround())\n            #onScreenDebug.add(\"w gravity\", self.lifter.getGravity())\n            onScreenDebug.add(\"w contact normal\", self.lifter.getContactNormal().pPrintValues())\n            onScreenDebug.add(\"w impact\", self.lifter.getImpactVelocity())\n            onScreenDebug.add(\"w velocity\", self.lifter.getVelocity())\n            onScreenDebug.add(\"w hasContact\", self.lifter.hasContact())\n        #onScreenDebug.add(\"w falling\", self.falling)\n        #onScreenDebug.add(\"w jumpForce\", self.avatarControlJumpForce)\n        #onScreenDebug.add(\"w mayJump\", self.mayJump)\n        onScreenDebug.add(\"w isAirborne\", self.isAirborne)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_225",
    "parent": "processed_documents/context_documents/29172b8e_PhysicsWalker.json",
    "chunk_number": 4049
  }
}