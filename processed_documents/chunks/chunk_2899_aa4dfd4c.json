{
  "content": "class Track(MetaInterval):\n    def applyIvals(self, meta, relTime, relTo):\n        meta.addTrack(self.ivals, self.getName(),\n                      relTime, relTo, self.phonyDuration)\n\n    def validateComponent(self, tupleObj):\n        # This is called only in debug mode to verify that the\n        # indicated component added to the MetaInterval is appropriate\n        # to this type of MetaInterval.  In most cases except Track,\n        # this is the same as asking that the component is itself an\n        # Interval.\n\n        if not (isinstance(tupleObj, tuple) or \\\n                isinstance(tupleObj, list)):\n            # It's not a tuple.\n            return 0\n\n        relTime = tupleObj[0]\n        ival = tupleObj[1]\n        if len(tupleObj) >= 3:\n            relTo = tupleObj[2]\n        else:\n            relTo = TRACK_START",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_166",
    "parent": "processed_documents/context_documents/4dc28cd4_MetaInterval.json",
    "chunk_number": 2899
  }
}