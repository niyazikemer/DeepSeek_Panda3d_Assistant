{
  "content": "Although it can only be used as an \"into\" solid, it is the most reliable of the \"into\" solids; tests are implemented for every \"from\" solid, and since it extends out infinitely, there is no possibility of glitching through it. This makes it an excellent choice for a ground plane in games where the ground is mostly level.\n\nA CollisionPlane is constructed using a Panda3D Plane object, which itself has a number of constructors, including the A, B, C, D plane equation, or a list of three points, or a point and a normal.\n\nplane = CollisionPlane(Plane(Vec3(0, 0, 1), Point3(0, 0, 0)))\n\nCollisionPolygon\n\nA CollisionPolygon is the most general of the collision solids, since it is easy to model any shape with polygons (especially using a modeling package). However, it is also the most expensive solid, and the least robust--there may be numerical inaccuracies with polygons that allow collisions to slip through where they shouldn't.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_633",
    "parent": "processed_documents/context_documents/62537003_cc9627be_collision-solids.json",
    "chunk_number": 7383
  }
}