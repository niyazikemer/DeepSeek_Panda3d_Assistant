{
  "content": "del self.shadowNodePath\n\n        del self.cRay\n        #del self.cRayNode\n        self.cRayNodePath.removeNode()\n        del self.cRayNodePath\n\n        del self.lifter\n\n    def on(self):\n        \"\"\"\n        Turn on the shadow placement.  The shadow z position will\n        start being updated until a call to off() is made.\n        \"\"\"\n        assert self.notify.debugCall(\"activeCount=%s\"%(self.activeCount,))\n        if self.isActive:\n            assert self.cTrav.hasCollider(self.cRayNodePath)\n            return\n        assert not self.cTrav.hasCollider(self.cRayNodePath)\n        self.cRayNodePath.reparentTo(self.shadowNodePath.getParent())\n        self.cTrav.addCollider(self.cRayNodePath, self.lifter)\n        self.isActive = 1\n        if __debug__:\n            self.activeCount += 1\n            self.debugDisplay()",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_265",
    "parent": "processed_documents/context_documents/ee959aee_ShadowPlacer.json",
    "chunk_number": 4732
  }
}