{
  "content": "# find the part in our tree\n                bundleNP = partLod.find(\"**/%s%s\"%(Actor.partPrefix,partName))\n                if bundleNP is not None:\n                    # store the part bundle\n                    self.__prepareBundle(bundleNP, partDef.partModel,\n                                         partName, lodName)\n                else:\n                    Actor.notify.error(\"lod: %s has no matching part: %s\" %\n                                       (lodName, partName))\n\n    def __copySubpartDict(self, other):\n        \"\"\"Copies the subpartDict from another as this instance's own.\n        This makes a deep copy of the map and all of the names and\n        PartSubset objects within it.  We can't use copy.deepcopy()\n        because of the included C++ PartSubset objects.\"\"\"",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3167
  }
}