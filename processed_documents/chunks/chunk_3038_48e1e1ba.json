{
  "content": "def makeCopy(self):\n            return Actor.SubpartDef(self.truePartName, PartSubset(self.subset))\n\n\n        def __repr__(self):\n            return 'Actor.SubpartDef(%s, %s)' % (repr(self.truePartName), repr(self.subset))\n\n    def __init__(self, models=None, anims=None, other=None, copy=True,\n                 lodNode = None, flattenable = True, setFinal = False,\n                 mergeLODBundles = None, allowAsyncBind = None,\n                 okMissing = None):\n        \"\"\"Actor constructor: can be used to create single or multipart\n        actors. If another Actor is supplied as an argument this\n        method acts like a copy constructor. Single part actors are\n        created by calling with a model and animation dictionary\n        ``(animName:animPath{})`` as follows::\n\n           a = Actor(\"panda-3k.egg\", {\"walk\":\"panda-walk.egg\",\n                                      \"run\":\"panda-run.egg\"})\n\n        This could be displayed and animated as such::",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_177",
    "parent": "processed_documents/context_documents/2763abe9_Actor.json",
    "chunk_number": 3038
  }
}