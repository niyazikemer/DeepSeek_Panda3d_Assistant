{
  "content": "def getShift(self):\n        \"\"\"\n        Returns True if the shift key is currently held down.\n        \"\"\"\n        return self.mouseWatcherNode.getModifierButtons().isDown(\n            KeyboardButton.shift())\n\n    def getControl(self):\n        \"\"\"\n        Returns True if the control key is currently held down.\n        \"\"\"\n        return self.mouseWatcherNode.getModifierButtons().isDown(\n            KeyboardButton.control())\n\n    def getMeta(self):\n        \"\"\"\n        Returns True if the meta key is currently held down.\n        \"\"\"\n        return self.mouseWatcherNode.getModifierButtons().isDown(\n            KeyboardButton.meta())\n\n    def attachInputDevice(self, device, prefix=None, watch=False):\n        \"\"\"\n        This function attaches an input device to the data graph, which will\n        cause the device to be polled and generate events.  If a prefix is\n        given and not None, it is used to prefix events generated by this\n        device, separated by a hyphen.",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_283",
    "parent": "processed_documents/context_documents/be1afc59_ShowBase.json",
    "chunk_number": 4940
  }
}