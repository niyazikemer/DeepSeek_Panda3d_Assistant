{
  "content": "Too Many Shader Instructions\n\npython\n\nThis can only happen if you have at least one .NodePath.set_shader() or .NodePath.set_shader_auto() method call in your application, or you are using a postprocessing filter from ~direct.filter.CommonFilters.CommonFilters.\n\ncpp\n\nThis can only happen if you have at least one .NodePath.set_shader() or .NodePath.set_shader_auto() method call in your application.\n\nToo Many Vertex Shader Instructions\n\nAlthough relatively rare, a bottleneck can form in the vertex processing stage if there are many vertices in the scene and the vertex shaders applied to the scene are too complex.\n\nTry to simplify your scene. Objects that are far away don't need millions of vertices. Consider the use of level-of-detail techniques.\n\nAlternatively, try to simplify the vertex shader. Look for calculations that could instead be done in advance, on the CPU, and passed in as a shader input.\n\nToo Many Fragment/Pixel Shader Instructions",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_492",
    "parent": "processed_documents/context_documents/b285911f_be416a06_too-many-shader-instructions.json",
    "chunk_number": 6475
  }
}