{
  "content": "NodePath dummy = model.attach_new_node(\"dummy\");\nif (bundle->control_joint(\"Joint Name\", dummy)) {\n  std::cerr << \"Success!\\n\";\n}\n\nThis creates a dummy node. Every frame, the transform is copied from the dummy node into the joint. By setting the transform of the dummy node, you can control the joint. Normally, one would want to use ~.NodePath.set_hpr to rotate the joint without moving it. The dummy node is initialized in such a way that the joint is in its default location, the one specified in the model file.\n\nYou must store a local (not global) transform in the dummy node. In other words, the transform is relative to the joint's parent bone. If you are controlling the forearm of a model, for instance, the transform will be relative to the upper arm.\n\npython\n\nThe string \"modelRoot\" represents the name of the model node - the string \"modelRoot\" is usually the correct value.",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_438",
    "parent": "processed_documents/context_documents/af9e2093_889fa28f_controlling-joints.json",
    "chunk_number": 6224
  }
}