{
  "content": "def collisionsOff(self):\n        assert self.notify.debugCall(id(self))\n        if self.currentControls:\n            self.currentControls.setCollisionsActive(0)\n\n    def placeOnFloor(self):\n        assert self.notify.debugCall(id(self))\n        if self.currentControls:\n            self.currentControls.placeOnFloor()\n\n    def enable(self):\n        assert self.notify.debugCall(id(self))\n\n        if self.isEnabled:\n            assert self.notify.debug('already isEnabled')\n            return\n\n        self.isEnabled = 1\n\n        # keep track of what we do on the inputState so we can undo it later on\n        #self.inputStateTokens = []\n        ist = self.inputStateTokens\n        ist.append(inputState.watch(\"run\", 'runningEvent', \"running-on\", \"running-off\"))\n\n        ist.append(inputState.watchWithModifiers(\"forward\", \"arrow_up\", inputSource=inputState.ArrowKeys))\n        ist.append(inputState.watch(\"forward\", \"force-forward\", \"force-forward-stop\"))",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_231",
    "parent": "processed_documents/context_documents/76ec7b1d_ControlManager.json",
    "chunk_number": 4137
  }
}