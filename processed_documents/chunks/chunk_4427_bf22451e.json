{
  "content": "def unloadSfx(self, sfx):\n        if sfx:\n            if self.base.sfxManagerList:\n                self.base.sfxManagerList[0].uncacheSound(sfx.getName())\n\n##     def makeNodeNamesUnique(self, nodePath, nodeCount):\n##         if nodeCount == 0:\n##             Loader.modelCount += 1\n##         nodePath.setName(nodePath.getName() +\n##                          ('_%d_%d' % (Loader.modelCount, nodeCount)))\n##         for i in range(nodePath.getNumChildren()):\n##             nodeCount += 1\n##             self.makeNodeNamesUnique(nodePath.getChild(i), nodeCount)\n\n    def loadShader(self, shaderPath, okMissing = False):\n        shader = ShaderPool.loadShader(shaderPath)\n        if not shader and not okMissing:\n            message = 'Could not load shader file: %s' % (shaderPath)\n            raise IOError(message)\n        return shader\n\n    def unloadShader(self, shaderPath):\n        if shaderPath is not None:\n            ShaderPool.releaseShader(shaderPath)",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_250",
    "parent": "processed_documents/context_documents/7b86925a_Loader.json",
    "chunk_number": 4427
  }
}