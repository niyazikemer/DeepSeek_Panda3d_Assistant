{
  "content": "class FourState:\n    \"\"\"\n    Generic four state ClassicFSM base class.\n\n    This is a mix-in class that expects that your derived class\n    is a DistributedObject.\n\n    Inherit from FourStateFSM and pass in your states.  Two of\n    the states should be oposites of each other and the other\n    two should be the transition states between the first two.\n    E.g::\n\n                    +--------+\n                 -->| closed | --\n                |   +--------+   |\n                |                |\n                |                v\n          +---------+       +---------+\n          | closing |<----->| opening |\n          +---------+       +---------+\n                ^                |\n                |                |\n                |    +------+    |\n                 ----| open |<---\n                     +------+\n\n    There is a fifth off state, but that is an implementation\n    detail (and that's why it's not called a five state ClassicFSM).",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_151",
    "parent": "processed_documents/context_documents/c156758e_FourState.json",
    "chunk_number": 2708
  }
}