{
  "content": "class IntervalManager(CIntervalManager):\n\n    # This is a Python-C++ hybrid class.  IntervalManager is a Python\n    # extension of the C++ class CIntervalManager; the main purpose of\n    # the Python extensions is to add support for Python-based\n    # intervals (like MetaIntervals).\n\n    def __init__(self, globalPtr = 0):\n        # Pass globalPtr == 1 to the constructor to trick it into\n        # \"constructing\" a Python wrapper around the global\n        # CIntervalManager object.\n        if globalPtr:\n            self.cObj = CIntervalManager.getGlobalPtr()\n            Dtool_BorrowThisReference(self, self.cObj)\n            self.dd = self\n        else:\n            CIntervalManager.__init__(self)\n        self.eventQueue = EventQueue()\n        self.MyEventmanager = EventManager.EventManager(self.eventQueue)\n        self.setEventQueue(self.eventQueue)\n        self.ivals = []\n        self.removedIvals = {}",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_160",
    "parent": "processed_documents/context_documents/493662c0_IntervalManager.json",
    "chunk_number": 2803
  }
}