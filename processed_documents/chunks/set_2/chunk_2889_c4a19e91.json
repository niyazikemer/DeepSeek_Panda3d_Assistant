{
  "content": "def __updateIvals(self):\n        # The MetaInterval object does not create the C++ list of\n        # Intervals immediately; rather, it stores a Python list of\n        # Intervals that will be compiled into the C++ list the first\n        # time it is needed.\n\n        # This design allows us to avoid creation of the C++ list for\n        # nested MetaInterval objects, instead copying all nested\n        # MetaInterval hierarchy into the root CMetaInterval object,\n        # for a performance benefit.\n\n        # This function is called only on the root MetaInterval\n        # object, when it is time to build the C++ list for itself.\n\n        if self.__ivalsDirty:\n            self.clearIntervals()\n            self.applyIvals(self, 0, TRACK_START)\n            self.__ivalsDirty = 0",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_166",
    "parent": "processed_documents/context_documents/4dc28cd4_MetaInterval.json",
    "chunk_number": 2889
  }
}