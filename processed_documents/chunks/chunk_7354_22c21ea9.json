{
  "content": "self.terrainModel.reparentTo(render)\n        self.cityModel.reparentTo(render)\n\n        text.destroy()\n\n    def quit(self):\n        sys.exit()\n\ncpp\n\nA convenient way to do this would be by using coroutines, introduced in C++20. These are special functions that can be suspended temporarily and resumed at a later point (pending the completion of an asynchronous operation). Instead, we could write our code as though it were synchronous, but we insert the co_await keyword where we want the task to be suspended while waiting for the following operation.\n\nUnfortunately, as of Panda3D 1.10, this feature of C++20 is not yet supported by Panda3D. If you are feeling adventurous, see this forum thread for a way to use C++20 coroutines with the Panda3D task system:\n\nhttps://discourse.panda3d.org/t/using-c-20-coroutines-with-panda3d/27323\n\nLoading in a thread",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_630",
    "parent": "processed_documents/context_documents/1f644252_f4a210d4_async.json",
    "chunk_number": 7354
  }
}