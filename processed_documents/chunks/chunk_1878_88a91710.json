{
  "content": "for key, leaf in self._name_leaves + self._id_leaves:\n            if isinstance(leaf, ResourceTable):\n                for table in leaf.get_nested_tables():\n                    yield table\n\n    def pack_header(self, data, offs):\n        self._header.pack_into(data, offs, self.flags, self.timdat,\n                               self.version[0], self.version[1],\n                               len(self._name_leaves), len(self._id_leaves))\n\n    def unpack_from(self, mem, addr=0, offs=0):\n        start = addr + offs\n        self.flags, self.timdat, majver, minver, nnames, nids = \\\n            self._header.unpack(mem[start:start+16])\n        self.version = (majver, minver)\n        start += 16",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_130",
    "parent": "processed_documents/context_documents/8a037500_pefile.json",
    "chunk_number": 1878
  }
}