{
  "content": "# continue iteration to the next child\n            item, cookie = self.GetNextChild(parent, cookie)\n\n    def addTreeNodes(self, parentItem, parentItemName, items, itemKeys):\n        roots = []\n        rootItems = []\n        for key in itemKeys:\n            if parentItemName == items[key]:\n                roots.append(key)\n        for root in roots:\n            newItem = self.AppendItem(parentItem, root)\n            self.SetItemData(newItem, root)\n            rootItems.append(newItem)\n            itemKeys.remove(root)\n        for rootItem in rootItems:\n            self.addTreeNodes(rootItem, self.GetItemText(rootItem), items, itemKeys)\n\n    def traverse(self, parent, itemText):\n        if itemText == self.GetItemText(parent):\n            return parent\n        item, cookie = self.GetFirstChild(parent)\n        while item:\n            # if the item was found - return it\n            if itemText == self.GetItemText(item):\n                return item",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_21",
    "parent": "processed_documents/context_documents/31b25404_PaletteTreeCtrl.json",
    "chunk_number": 307
  }
}