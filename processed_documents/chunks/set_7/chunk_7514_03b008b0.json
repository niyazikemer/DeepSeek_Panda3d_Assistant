{
  "content": "A Note about Color Spaces\n\nAll colors that Panda3D expects are floating-point values between 0.0 and 1.0. Panda3D performs no correction or color space conversion before writing them into the framebuffer. This means that if you are using a linear workflow (ie. you have set framebuffer-srgb in Config.prc or are using a post-processing filter that converts the rendered image to sRGB), all colors are specified in \"linearized sRGB\" instead of gamma-encoded sRGB. Applying a color obtained from a color picker is no longer as simple as dividing by 255!\n\nAn easy way to correct existing colors when switching to a linear workflow is to apply a 2.2 gamma. This is a good approximation for the sRGB transform function:\n\npython\n\nmodel1.setColor(LColor(0.6, 0.5, 0.3, 1) ** 2.2)\n\ncpp\n\nmodel1.set_color(powf(0.6, 2.2), powf(0.5, 2.2), powf(0.3, 2.2));\n\nA better method is to use the sRGB conversion functions that Panda3D provides. For example, to apply the #51C2C6 color, you can do as follows:\n\npython",
  "metadata": {
    "doc_type": "rst",
    "doc_id": "doc_658",
    "parent": "processed_documents/context_documents/3c995b04_158a20ee_tinting-and-recoloring.json",
    "chunk_number": 7514
  }
}