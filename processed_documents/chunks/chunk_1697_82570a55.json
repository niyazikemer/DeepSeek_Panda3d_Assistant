{
  "content": "def moveCameraTask(self, task):\n        self.moveCamera(\n            base.camera.getPos(render),\n            base.camera.getHpr(render))\n        return Task.cont\n\n    def moveCamera(self, xyz, hpr):\n        self.notify.debug('moving unsynced camera')\n        for server in self.serverList:\n            server.sendMoveCam(xyz, hpr)\n\n    def startMoveSelectedTask(self):\n        taskMgr.add(self.moveSelectedTask, \"moveSelectedTask\", 48)\n\n    def moveSelectedTask(self, state):\n        # Update cluster if current display is a cluster client\n        if last is not None:\n            self.notify.debug('moving selected node path')\n            xyz = Point3(0)\n            hpr = VBase3(0)\n            scale = VBase3(1)\n            decomposeMatrix(last.getMat(), scale, hpr, xyz)\n            for server in self.serverList:\n                server.sendMoveSelected(xyz, hpr, scale)\n        return Task.cont",
  "metadata": {
    "doc_type": "python",
    "doc_id": "doc_105",
    "parent": "processed_documents/context_documents/99faa2ac_ClusterClient.json",
    "chunk_number": 1697
  }
}